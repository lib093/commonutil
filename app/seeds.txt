com.kiosoft2.common.thead.aspect.InterceptIOThreadAspectJ
com.kiosoft2.common.task.aspect.DelayedTaskAspectJ$aroundJoinPoint$1
com.kiosoft2.common.thead.utils.AppExecutors$MainThreadExecutor
androidx.room.QueryInterceptorOpenHelper
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$13
androidx.room.RoomSQLiteQuery$Companion$copyFrom$1
com.kiosoft2.common.task.util.TaskInfoRepository
com.kiosoft2.api.statement.element.Join
androidx.room.RoomWarnings$Companion
com.kiosoft2.common.task.interfaces.TaskReLoadCallback
com.kiosoft2.testdemo.activity.OverLineEdixView
com.google.gson.stream.MalformedJsonException
com.kiosoft2.common.cache.db.dao.TaskInfoDao$insertOrUpdateTaskInfo$1
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$1
androidx.room.InvalidationTracker$ObserverWrapper
kotlinx.coroutines.android.HandlerDispatcher
kotlin.io.ReadAfterEOFException
com.kiosoft2.common.task.util.TaskInfoRepository$updateTaskInfo$2
kotlinx.coroutines.android.AndroidDispatcherFactory
androidx.room.InvalidationTracker$ObservedTableTracker
androidx.room.SQLiteCopyOpenHelper$createFrameworkOpenHelper$configuration$1
androidx.room.CoroutinesRoom$Companion
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$reStartTask$2
androidx.room.MultiInstanceInvalidationService$callbackList$1
com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper$onActivityCreated$1$1$1
kotlinx.coroutines.internal.ExceptionSuccessfullyProcessed
androidx.room.InvalidationLiveDataContainer
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$2
androidx.room.Ignore
com.kiosoft2.common.click.annotions.ClickFilter
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$7
androidx.room.Fts3
androidx.room.Database
com.kiosoft2.common.cache.TaskCacheManager
com.google.common.base.VerifyException
kotlinx.coroutines.android.HandlerDispatcherKt
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$2
kotlinx.coroutines.android.HandlerDispatcherKt$awaitFrameSlowPath$lambda$3$$inlined$Runnable$1
androidx.room.MapInfo
androidx.room.OnConflictStrategy
com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager
com.kiosoft2.api.builder.OpBuilder
com.kiosoft2.common.task.model.TaskInfo
androidx.appcompat.widget.FitWindowsFrameLayout
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor
com.kiosoft2.common.autoservice.annotions.BindTaskService
androidx.room.rxjava3.RxRoom$2
androidx.room.util.TableInfo$ForeignKeyWithSequence
android.support.annotation.Keep
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$15
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$reStartTask$1
androidx.room.util.TableInfo$Index$Companion
com.kiosoft2.common.task.helper.RecurringTaskHelper$start$1
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1
androidx.room.IMultiInstanceInvalidationService$Stub
androidx.room.util.RelationUtil
com.kiosoft2.api.BuildConfig
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isReadOnly$1
com.kiosoft2.common.thead.annotions.RunInIO
com.kiosoft2.common.task.util.TaskInfoRepository$getCacheTaskListByOwerClassName$2
com.google.gson.JsonIOException
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$inTransaction$1
com.kiosoft2.common.thead.aspect.InterceptIOThreadAspectJ$Companion
com.kiosoft2.common.task.util.TaskReLoadUtil
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$2
androidx.room.InvalidationTracker$WeakObserver
androidx.room.RoomSQLiteQuery$Binding
com.kiosoft2.common.router.BundleManager
com.kiosoft2.common.task.model.MethodInfo
kotlinx.coroutines.channels.ClosedReceiveChannelException
com.kiosoft2.common.task.aspect.TaskAspectJ$Companion
com.kiosoft2.common.cache.TaskCacheManager$removeCacheTaskList$1
com.kiosoft2.apt.AParameter$$Test1Fragment
androidx.room.InvalidationTracker$Observer
com.kiosoft2.common.router.ARouterOperator$Companion$instance$2
androidx.room.RoomOpenHelper
kotlin.io.NoSuchFileException
androidx.room.RenameColumn$Entries
androidx.room.SharedSQLiteStatement$stmt$2
androidx.room.RoomDatabase$JournalMode
io.reactivex.rxjava3.exceptions.CompositeException
androidx.room.InvalidationTracker
androidx.room.ExperimentalRoomApi
androidx.core.app.CoreComponentFactory
com.kiosoft2.api.statement.element.Condition
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$1
androidx.versionedparcelable.VersionedParcel$ParcelException
androidx.room.CoroutinesRoom
androidx.room.MultiInstanceInvalidationClient$serviceConnection$1
androidx.room.BuiltInTypeConverters$State
kotlinx.coroutines.android.AndroidExceptionPreHandler
kotlinx.coroutines.flow.internal.ChildCancelledException
org.aspectj.lang.NoAspectBoundException
androidx.appcompat.widget.ViewStubCompat
androidx.room.AutoClosingRoomOpenHelper
androidx.room.IMultiInstanceInvalidationCallback$Stub$Proxy
kotlin.TypeCastException
androidx.room.SQLiteCopyOpenHelper
com.kiosoft2.common.task.util.TaskInfoRepository$getTaskInfoByTaskId$2
androidx.room.CoroutinesRoom$Companion$createFlow$1
com.kiosoft2.common.router.ARouterOperator$FragmentBundleManager
androidx.room.DeleteTable$Entries
com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper
androidx.room.IMultiInstanceInvalidationService
com.kiosoft2.common.model.BaseLifecycleOwnerImpl
androidx.room.Embedded
com.kiosoft2.testdemo.activity.TestActivity05
androidx.room.IMultiInstanceInvalidationCallback$Stub
com.kiosoft2.api.statement.DeleteSQL
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeInsert$1
androidx.room.util.TableInfo$Column$Companion
com.google.common.cache.CacheLoader$UnsupportedLoadingOperationException
androidx.appcompat.widget.ActionBarContextView
androidx.room.Query
com.kiosoft2.common.task.helper.DelayedTaskHelper
com.kiosoft2.api.dao.Dao
androidx.room.RoomDatabase$QueryCallback
androidx.room.InvalidationTracker$ObservedTableTracker$Companion
androidx.room.EntityUpsertionAdapter
androidx.room.util.CursorUtil
com.kiosoft2.common.cache.TaskCacheManager$getCacheTaskListByOwerClassName$2
androidx.room.RoomDatabase$PrepackagedDatabaseCallback
androidx.room.Relation
kotlin.io.FileAlreadyExistsException
com.kiosoft2.common.click.ClickExe
com.kiosoft2.api.type.ConditionRelation
androidx.room.RoomOpenHelper$Companion
com.kiosoft2.api.builder.SetBuilder
com.kiosoft2.common.autoservice.aspect.TaskServiceBindAspect
androidx.room.util.TableInfoKt
androidx.room.AmbiguousColumnResolver$Solution$Companion
com.kiosoft2.common.task.util.TaskManager
com.kiosoft2.common.model.BaseLifecycleOwnerImpl$WhenMappings
com.alibaba.fastjson2.time.DateTimeException
kotlinx.coroutines.internal.DiagnosticCoroutineContextException
androidx.emoji2.text.flatbuffer.FlexBuffers$FlexBufferException
androidx.room.DatabaseConfiguration
androidx.appcompat.app.AlertController$RecycleListView
com.kiosoft2.common.task.annotions.TaskThread
com.kiosoft2.common.task.util.TimeUtil$WhenMappings
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$1
androidx.appcompat.widget.ActionBarContainer
kotlin.reflect.KParameter
org.aspectj.lang.SoftException
com.kiosoft2.testdemo.activity.TestActivity03
io.reactivex.rxjava3.exceptions.OnErrorNotImplementedException
org.aspectj.lang.reflect.NoSuchPointcutException
androidx.room.util.TableInfo$ForeignKey
com.kiosoft2.common.click.aspect.InterceptSingleTimeAspectJ$Companion
androidx.room.BuiltInTypeConverters
com.kiosoft2.common.cache.TaskCacheManager$cacheTaskList$1
com.kiosoft2.common.bus.LiveDataBus$bus$2
androidx.profileinstaller.ProfileInstallReceiver
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDatabaseIntegrityOk$1
androidx.room.util.StringUtil
androidx.core.widget.NestedScrollView
com.kiosoft2.api.type.ExpressionType
androidx.room.MultiInstanceInvalidationClient
com.kiosoft2.common.task.util.TaskReLoadUtil$reLoadStart$1
com.kiosoft2.common.cache.TaskCacheManager$getCacheTaskListByOwerClassNameAndTaskId$2
androidx.annotation.Keep
androidx.room.AutoMigration
androidx.room.ProvidedAutoMigrationSpec
androidx.versionedparcelable.CustomVersionedParcelable
com.kiosoft2.common.cache.TaskCacheManager$removeCacheTask$2
com.kiosoft2.common.thead.utils.AppExecutors
com.tencent.mmkv.MMKV
com.kiosoft2.common.task.aspect.TaskAspectJ
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$11
com.kiosoft2.common.thead.aspect.InterceptMainThreadAspectJ$Companion
androidx.room.rxjava3.R
com.kiosoft2.common.task.util.TaskInfoRepository$insertTaskInfoList$2
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1
androidx.room.Upsert
androidx.core.os.OperationCanceledException
com.kiosoft2.api.helper.SQLiteHelper$1
io.reactivex.rxjava3.exceptions.MissingBackpressureException
androidx.room.MultiInstanceInvalidationClient$callback$1
androidx.room.PrimaryKey
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$12
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pokeOpen$1
androidx.room.Junction
androidx.room.RenameColumn
androidx.room.Delete
androidx.room.EntityUpsertionAdapterKt
com.kiosoft2.common.task.helper.DelayedTaskHelper$start$1
androidx.room.RoomDatabase$MigrationContainer
androidx.room.AmbiguousColumnResolver$resolve$1$2
androidx.room.DeleteColumn$Entries
com.ubix.kiosoft2.db.DBOperator_Impl
androidx.room.InvalidationTracker$Companion
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$4
androidx.room.rxjava3.RxRoom
com.kiosoft2.common.autoservice.aspect.TaskServiceBindAspect$Companion
com.kiosoft2.api.R
com.kiosoft2.api.helper.SQLiteHelper$4
androidx.room.paging.LimitOffsetDataSource
androidx.room.AmbiguousColumnResolver
androidx.room.IMultiInstanceInvalidationCallback
com.kiosoft2.common.task.annotions.RecurringTask
com.kiosoft2.api.builder.DeleteBuilder
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$10
androidx.room.MultiInstanceInvalidationClient$1
androidx.appcompat.widget.ActivityChooserView$InnerLayout
com.kiosoft2.common.R
androidx.room.RoomDatabase
kotlinx.coroutines.TimeoutCancellationException
kotlinx.coroutines.flow.internal.AbortFlowException
androidx.room.QueryInterceptorDatabase
androidx.room.Room
androidx.appcompat.widget.SearchView$SearchAutoComplete
com.kiosoft2.common.task.util.TaskReLoadUtil$reLoadStart$2
com.kiosoft2.common.task.annotions.TaskBindDisposable
androidx.room.RoomOpenHelper$Delegate
androidx.appcompat.view.menu.ExpandedMenuView
com.kiosoft2.common.task.aspect.TaskAspectJKt
androidx.room.migration.MigrationImpl
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isWriteAheadLoggingEnabled$1
androidx.room.RoomWarnings
androidx.room.AmbiguousColumnResolver$Solution
com.kiosoft2.testdemo.db.model.Book
com.kiosoft2.common.click.utils.ClickUtil
androidx.room.IMultiInstanceInvalidationCallback$Default
com.kiosoft2.common.bus.LiveDataBus$BusMutableLiveData
com.kiosoft2.testdemo.MyApplication
com.kiosoft2.common.cache.db.dao.TaskInfoDao$DefaultImpls
com.kiosoft2.common.task.util.TaskInfoRepository$insertTaskInfo$2
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_DelayedTask$0
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeUpdateDelete$1
androidx.room.ForeignKey$Action
com.kiosoft2.common.cache.db.database.AppDataBase_Impl
com.kiosoft2.api.helper.SQLiteHelper$3
androidx.lifecycle.LifecycleDestroyedException
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$path$1
androidx.room.Transaction
androidx.room.util.FtsTableInfo$Companion
androidx.room.RoomDatabase$beginTransaction$1
com.google.common.cache.CacheLoader$InvalidCacheLoadException
androidx.room.RoomDatabaseKt
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$14
androidx.room.DeleteTable
com.kiosoft2.testdemo.db.model.Book_
androidx.core.graphics.drawable.IconCompat
com.kiosoft2.api.helper.SQLiteHelper$2
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1$1
androidx.room.QueryInterceptorProgram
androidx.lifecycle.ProcessLifecycleInitializer
com.kiosoft2.api.Property
androidx.room.FtsOptions$Order
com.kiosoft2.testdemo.activity.TestActivity02
androidx.room.TransactionExecutor
com.kiosoft2.common.task.interfaces.JoinPointRunCallback
com.kiosoft2.common.autoservice.service.TaskService
com.kiosoft2.common.thead.utils.AppExecutors$Companion
androidx.startup.InitializationProvider
com.kiosoft2.api.statement.element.GroupBy
com.kiosoft2.common.autoservice.impl.TaskServiceImpl
com.kiosoft2.common.cache.db.dao.TaskInfoDao
androidx.room.FtsOptions$MatchInfo
androidx.room.Insert
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$1
androidx.room.QueryInterceptorOpenHelperFactory
com.kiosoft2.common.task.util.TaskInfoRepository$updateTaskInfoList$2
androidx.room.Entity
com.kiosoft2.common.thead.utils.AppExecutors$DiskIOThreadExecutor
com.kiosoft2.api.statement.SelectSQL
com.kiosoft2.common.task.util.TaskManager$removeTask$1$1
androidx.room.QueryInterceptorStatement
androidx.room.DelegatingOpenHelper
androidx.room.RawQuery
androidx.room.RoomTrackingLiveData$observer$1
androidx.emoji2.text.EmojiCompatInitializer
androidx.room.ColumnInfo$Collate
androidx.room.util.TableInfo
com.kiosoft2.common.task.model.ParameterInfo
androidx.room.RoomDatabase$Callback
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl
com.ubix.kiosoft2.db.DBOperator
com.kiosoft2.common.task.util.TaskInfoRepository$getTaskList$2
com.kiosoft2.common.task.util.TimeUtil
androidx.startup.StartupException
androidx.room.CoroutinesRoom$Companion$execute$4$1
com.kiosoft2.api.EntityManager$Companion
com.kiosoft2.common.task.annotions.TaskComplete
androidx.room.OnConflictStrategy$Companion
com.kiosoft2.api.condition.BasicCondition
androidx.room.RewriteQueriesToDropUnusedColumns
androidx.fragment.app.Fragment$InstantiationException
android.support.v4.app.RemoteActionCompatParcelizer
androidx.profileinstaller.ProfileInstallerInitializer
androidx.room.rxjava3.RxRoom$1
com.kiosoft2.api.RoomOperator
androidx.room.RenameTable$Entries
androidx.room.util.TableInfo$Companion
com.google.gson.JsonParseException
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setForeignKeyConstraintsEnabled$1
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$attachedDbs$1
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1$job$1
androidx.room.EntityDeletionOrUpdateAdapter
androidx.room.util.UUIDUtil
androidx.room.MapColumn
com.kiosoft2.api.statement.element.Function
kotlin.io.FileSystemException
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeSqliteStatementWithRefCount$1
androidx.room.migration.AutoMigrationSpec
com.kiosoft2.common.cache.configs.CacheConfigKt
androidx.room.TypeConverter
io.reactivex.rxjava3.exceptions.UndeliverableException
com.kiosoft2.api.builder.JoinBuilder
com.kiosoft2.common.thead.aspect.InterceptMainThreadAspectJ
com.kiosoft2.apt.AParameter$$TestActivity04
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForString$1
kotlinx.coroutines.android.HandlerContext
androidx.versionedparcelable.ParcelImpl
androidx.room.RoomMasterTable
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$maximumSize$1
androidx.room.RoomDatabase$endTransaction$1
com.alibaba.fastjson2.JSONException
com.kiosoft2.common.task.aspect.TaskAspectJ$aroundJoinPoint$1
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$insert$1
androidx.appcompat.widget.Toolbar
androidx.room.util.FileUtil
com.kiosoft2.api.statement.element.OrderBy
androidx.room.util.TableInfo$CreatedFrom
com.kiosoft2.common.model.BaseLifecycleOwnerImpl$1
androidx.room.IMultiInstanceInvalidationService$Default
androidx.room.RoomDatabase$Companion
com.kiosoft2.api.condition.PropertyCondition
com.kiosoft2.common.thead.annotions.RunInMainThread
com.google.gson.JsonSyntaxException
org.checkerframework.checker.formatter.FormatUtil$IllegalFormatConversionCategoryException
com.kiosoft2.api.EntityManager
com.kiosoft2.common.task.annotions.DelayedTask
androidx.room.Update
com.google.common.util.concurrent.UncheckedTimeoutException
com.kiosoft2.common.click.aspect.InterceptSingleTimeAspectJ
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$1
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$start$2
androidx.room.AmbiguousColumnResolver$Match
androidx.room.Dao
androidx.room.AmbiguousColumnResolver$resolve$4
com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper$onActivityCreated$1
androidx.room.RoomSQLiteQuery
com.kiosoft2.api.type.FuncType
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$8
kotlinx.coroutines.internal.UndeliveredElementException
com.kiosoft2.apt.AParameter$$TestActivity05
com.kiosoft2.common.task.util.TaskMethodUtil
androidx.room.RoomOpenHelper$ValidationResult
com.kiosoft2.api.type.JoinType
com.kiosoft2.api.type.OrderByType
com.kiosoft2.common.task.util.TaskInfoRepository$insertOrUpdateTaskInfo$2
androidx.appcompat.view.menu.ListMenuItemView
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$3
androidx.room.R
androidx.core.graphics.drawable.IconCompatParcelizer
com.kiosoft2.api.type.OpType
com.kiosoft2.common.click.aspect.ClickListenerAspect
androidx.appcompat.widget.DialogTitle
com.kiosoft2.encrypt.EncryptServiceImpl
com.kiosoft2.testdemo.db.model.User
androidx.core.app.RemoteActionCompat
com.kiosoft2.common.task.util.TaskManager$isExistTask$1$1
androidx.room.SharedSQLiteStatement
com.kiosoft2.common.thead.utils.AppExecutors$InstanceHolder
com.kiosoft2.common.task.util.TaskManager$taskActivityLifecycleHelper$1
androidx.core.net.ParseException
androidx.appcompat.widget.AlertDialogLayout
kotlin.KotlinNullPointerException
androidx.room.InvalidationTracker$refreshRunnable$1
androidx.room.Fts4
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$9
androidx.room.AutoCloser
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setLocale$1
com.kiosoft2.common.cache.db.database.AppDataBase
com.kiosoft2.api.aparameter.AParameterManager$Companion$instance$2
com.google.common.io.InsecureRecursiveDeleteException
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$start$1
com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$execute$1
androidx.room.EntityInsertionAdapter
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$update$1
androidx.room.ForeignKey$Companion
androidx.room.RoomDatabase$Builder
androidx.room.AmbiguousColumnResolver$resolve$1$1
com.kiosoft2.api.utils.Utils
androidx.room.AutoCloser$Companion
kotlin.KotlinNothingValueException
androidx.room.Index$Order
kotlinx.coroutines.JobCancellationException
com.kiosoft2.common.task.aspect.DelayedTaskAspectJ
androidx.room.MultiInstanceInvalidationService$binder$1
io.reactivex.rxjava3.exceptions.ProtocolViolationException
androidx.room.ProvidedTypeConverter
androidx.room.Index
androidx.appcompat.widget.ContentFrameLayout
com.kiosoft2.common.model.BaseLifecycleOwnerImpl$sam$androidx_lifecycle_Observer$0
com.kiosoft2.common.task.helper.RecurringTaskHelper
com.kiosoft2.common.encrypt.EncryptService
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$needUpgrade$1
com.google.common.util.concurrent.UncheckedExecutionException
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDbLockedByCurrentThread$1
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0
androidx.room.CoroutinesRoom$Companion$execute$2
androidx.room.RoomTrackingLiveData
androidx.room.CoroutinesRoom$Companion$execute$4$job$1
androidx.room.migration.Migration
com.kiosoft2.api.builder.ChildQuery
androidx.room.util.DBUtil
com.kiosoft2.common.task.util.TaskManager$removeTask$2$1
com.kiosoft2.testdemo.activity.TestActivity04
androidx.room.util.ViewInfo
androidx.room.RenameTable
androidx.room.util.TableInfo$Index
androidx.room.paging.LimitOffsetDataSource$1
androidx.room.DatabaseView
androidx.room.FtsOptions
com.kiosoft2.api.aparameter.AParameterManager
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$2
androidx.room.CoroutinesRoom$Companion$createFlow$1$1
androidx.room.IMultiInstanceInvalidationService$Stub$Proxy
com.kiosoft2.api.builder.Query
com.kiosoft2.common.autoservice.ServiceLoad
androidx.room.DeleteColumn
androidx.appcompat.widget.ActionMenuView
com.kiosoft2.common.task.aspect.DelayedTaskAspectJ$Companion
com.kiosoft2.common.click.annotions.SingleTime
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$17
androidx.room.AmbiguousColumnResolver$ResultColumn
com.kiosoft2.common.BuildConfig
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$16
kotlin.reflect.KFunction
com.kiosoft2.common.cache.TaskCacheManager$getCacheTaskList$1
kotlinx.coroutines.internal.StackTraceRecoveryKt
com.kiosoft2.testdemo.db.model.User_
androidx.appcompat.widget.ActionBarOverlayLayout
org.aspectj.lang.reflect.NoSuchAdviceException
com.kiosoft2.common.cache.TaskCacheManager$cacheTask$1
org.checkerframework.checker.regex.RegexUtil$CheckedPatternSyntaxException
com.kiosoft2.api.statement.SQL
com.google.common.io.BaseEncoding$DecodingException
com.kiosoft2.common.bus.LiveDataBus
androidx.room.ColumnInfo$Companion
androidx.room.CoroutinesRoomKt
com.kiosoft2.api.statement.element.Condition$1
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1
androidx.appcompat.widget.ButtonBarLayout
kotlin.UninitializedPropertyAccessException
com.kiosoft2.api.builder.QueryBuilder
com.kiosoft2.api.builder.UpdateBuilder
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForLong$1
android.support.v4.graphics.drawable.IconCompatParcelizer
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase
androidx.room.ColumnInfo$SQLiteTypeAffinity
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1
androidx.room.TransactionElement$Key
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$cancelTask$1
androidx.room.AutoClosingRoomOpenHelperFactory
com.kiosoft2.testdemo.Test1Fragment
com.kiosoft2.api.statement.UpdateSQL
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$delete$1
com.kiosoft2.common.router.ARouterOperator
androidx.room.SkipQueryVerification
com.google.common.collect.ComputationException
androidx.room.ForeignKey
androidx.room.util.TableInfo$Column
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1$1
com.kiosoft2.api.aparameter.AParameterManager$Companion
com.kiosoft2.api.statement.element.Page
com.kiosoft2.common.cache.TaskCacheManager$cacheTask$1$1
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$5
androidx.room.RoomDatabaseKt$withTransaction$transactionBlock$1
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1$observer$1
androidx.room.SQLiteCopyOpenHelperFactory
com.kiosoft2.common.router.ARouterOperator$Companion
kotlinx.coroutines.CompletionHandlerException
com.kiosoft2.common.task.interfaces.TaskInterface
androidx.room.TransactionElement
org.checkerframework.checker.formatter.FormatUtil$ExcessiveOrMissingFormatArgumentException
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setMaximumSize$1
androidx.room.ColumnInfo
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$2
com.kiosoft2.api.builder.BasicConditionRelationBuilder
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1
androidx.room.util.ViewInfo$Companion
androidx.room.rxjava3.EmptyResultSetException
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$6
com.kiosoft2.common.bus.LiveDataBus$Companion
androidx.room.migration.MigrationKt
kotlin.coroutines.jvm.internal.BaseContinuationImpl
androidx.room.MultiInstanceInvalidationService
androidx.core.app.RemoteActionCompatParcelizer
androidx.room.util.FtsTableInfo
com.kiosoft2.api.aparameter.api.AParameterGet
kotlinx.coroutines.channels.ClosedSendChannelException
com.kiosoft2.api.statement.element.Expression
com.kiosoft2.common.task.util.TaskManager$WhenMappings
androidx.room.RoomSQLiteQuery$Companion
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setMaxSqlCacheSize$1
com.kiosoft2.common.cache.db.database.AppDataBase_Impl$1
com.kiosoft2.api.Entity
androidx.appcompat.view.menu.ActionMenuItemView
androidx.appcompat.widget.SearchView
com.kiosoft2.common.click.aspect.InterceptClickAspectJ
androidx.room.util.CursorUtil$wrapMappedColumns$2
androidx.appcompat.widget.FitWindowsLinearLayout
androidx.room.TypeConverters
androidx.room.ktx.R
com.kiosoft2.api.helper.SQLiteHelper
kotlin.io.AccessDeniedException
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$18
kotlin.NoWhenBranchMatchedException
com.kiosoft2.api.helper.SQLiteHelper: java.lang.String TAG
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event$Companion Companion
com.kiosoft2.common.autoservice.aspect.TaskServiceBindAspect: com.kiosoft2.common.autoservice.aspect.TaskServiceBindAspect$Companion Companion
com.kiosoft2.common.bus.LiveDataBus: com.kiosoft2.common.bus.LiveDataBus liveDataBus
androidx.room.RoomDatabase: androidx.room.RoomDatabase$Companion Companion
com.kiosoft2.api.type.OpType: com.kiosoft2.api.type.OpType update
androidx.room.IMultiInstanceInvalidationService: java.lang.String DESCRIPTOR
androidx.room.util.TableInfo$Index: java.util.List orders
androidx.room.CoroutinesRoom$Companion$createFlow$1$1: boolean $inTransaction
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$8: com.kiosoft2.common.task.model.TaskInfo val$taskInfo
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$reStartTask$2: java.lang.String $taskId
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _prev
com.kiosoft2.common.cache.TaskCacheManager$removeCacheTask$2: com.kiosoft2.common.task.model.TaskInfo $task
androidx.room.InvalidationTracker: java.lang.String[] tablesNames
com.kiosoft2.api.type.OpType: com.kiosoft2.api.type.OpType insert
com.kiosoft2.testdemo.db.model.User_: java.lang.String tableName_
androidx.lifecycle.ProcessLifecycleOwner$attach$1: androidx.lifecycle.ProcessLifecycleOwner this$0
com.kiosoft2.api.type.ExpressionType: com.kiosoft2.api.type.ExpressionType greater
kotlinx.coroutines.android.HandlerDispatcherKt: long MAX_DELAY
com.kiosoft2.api.type.ExpressionType: java.lang.String format
com.kiosoft2.common.task.util.TaskInfoRepository$getTaskInfoByTaskId$2: com.kiosoft2.common.task.util.TaskInfoRepository this$0
com.kiosoft2.common.task.util.TaskInfoRepository$insertOrUpdateTaskInfo$2: com.kiosoft2.common.task.model.TaskInfo $taskInfo
androidx.room.RoomWarnings: java.lang.String PRIMARY_KEY_FROM_EMBEDDED_IS_DROPPED
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfRemoveTaskInfoByOwerClassName
androidx.room.OnConflictStrategy$Companion: int ROLLBACK
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
androidx.room.RoomDatabase: boolean writeAheadLoggingEnabled
com.kiosoft2.common.task.model.MethodInfo: java.lang.String methouName
com.kiosoft2.api.type.FuncType: com.kiosoft2.api.type.FuncType dateTime
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: androidx.room.EntityDeletionOrUpdateAdapter __deletionAdapterOfTaskInfo
androidx.room.ColumnInfo: int INTEGER
androidx.room.util.TableInfo$Index: java.lang.String name
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$17: com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl this$0
androidx.room.QueryInterceptorOpenHelperFactory: androidx.room.RoomDatabase$QueryCallback queryCallback
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$needUpgrade$1: int $newVersion
com.kiosoft2.common.BuildConfig: java.lang.String BUILD_TYPE
androidx.room.paging.LimitOffsetDataSource: java.lang.String mCountQuery
com.kiosoft2.common.task.util.TaskReLoadUtil$reLoadStart$2: com.kiosoft2.common.task.interfaces.TaskReLoadCallback $callBack
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
com.kiosoft2.testdemo.db.model.Book_: com.kiosoft2.api.Property name
kotlinx.coroutines.internal.Segment: int cleanedAndPointers
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property a4
androidx.room.DatabaseConfiguration: java.util.concurrent.Executor queryExecutor
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
androidx.room.AutoCloser: java.lang.Object lock
androidx.room.IMultiInstanceInvalidationService$Stub: int TRANSACTION_unregisterCallback
androidx.room.QueryInterceptorStatement: java.util.concurrent.Executor queryCallbackExecutor
androidx.lifecycle.LiveData: boolean mChangingActiveState
androidx.room.SQLiteCopyOpenHelper: androidx.room.DatabaseConfiguration databaseConfiguration
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$11: java.util.List val$taskInfoList
com.kiosoft2.api.type.OrderByType: com.kiosoft2.api.type.OrderByType desc
androidx.room.SQLiteCopyOpenHelperFactory: java.io.File mCopyFromFile
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0: int taskCode
androidx.room.DatabaseConfiguration: android.content.Context context
com.kiosoft2.api.condition.PropertyCondition: com.kiosoft2.api.statement.element.Condition applyCondition
com.kiosoft2.common.thead.utils.AppExecutors$DiskIOThreadExecutor: java.util.concurrent.Executor mDiskIO
com.kiosoft2.api.type.ExpressionType: java.lang.String exp
com.kiosoft2.api.type.JoinType: com.kiosoft2.api.type.JoinType leftOuterJoin
com.kiosoft2.api.builder.JoinBuilder: com.kiosoft2.api.Entity entity
androidx.room.DatabaseConfiguration: androidx.sqlite.db.SupportSQLiteOpenHelper$Factory sqliteOpenHelperFactory
com.kiosoft2.api.statement.SelectSQL: com.kiosoft2.api.statement.element.Condition where
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1$1: kotlin.jvm.functions.Function2 $transactionBlock
androidx.room.RoomSQLiteQuery: byte[][] blobBindings
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: java.lang.String sql
androidx.room.RoomOpenHelper: java.lang.String legacyHash
androidx.room.SQLiteCopyOpenHelper: int databaseVersion
androidx.room.EntityUpsertionAdapterKt: java.lang.String SQLITE_CONSTRAINT_UNIQUE
com.kiosoft2.testdemo.db.model.Book: int page
com.kiosoft2.api.builder.OpBuilder: com.kiosoft2.api.Entity entity
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: kotlinx.coroutines.channels.Channel $observerChannel
com.kiosoft2.testdemo.db.model.User: java.lang.String address
androidx.room.InvalidationTracker$ObserverWrapper: int[] tableIds
kotlinx.coroutines.CancellableContinuationImpl: int _decisionAndIndex
androidx.room.RoomDatabase$Builder: java.util.List autoMigrationSpecs
androidx.room.InvalidationTracker: androidx.sqlite.db.SupportSQLiteStatement cleanupStatement
androidx.room.FtsOptions$MatchInfo: androidx.room.FtsOptions$MatchInfo FTS4
androidx.room.CoroutinesRoom$Companion$createFlow$1$1: androidx.room.RoomDatabase $db
androidx.room.RoomDatabase: java.util.List mCallbacks
androidx.room.InvalidationTracker: java.lang.String UPDATE_TABLE_NAME
androidx.room.RoomWarnings: java.lang.String DEFAULT_CONSTRUCTOR
androidx.lifecycle.LiveData: boolean mDispatchingValue
androidx.room.OnConflictStrategy: int FAIL
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
androidx.room.util.TableInfo$ForeignKeyWithSequence: java.lang.String from
androidx.room.migration.Migration: int endVersion
com.kiosoft2.common.task.util.TaskReLoadUtil$reLoadStart$1: com.kiosoft2.common.task.model.TaskInfo $taskInfo
com.kiosoft2.testdemo.db.model.User: float a1
androidx.room.RoomTrackingLiveData: java.lang.Runnable invalidationRunnable
androidx.room.RoomSQLiteQuery: int[] bindingTypes
com.kiosoft2.common.task.aspect.TaskAspectJ: com.kiosoft2.common.task.aspect.TaskAspectJ$Companion Companion
com.kiosoft2.api.statement.element.Join: com.kiosoft2.api.type.JoinType type
com.kiosoft2.api.type.FuncType: com.kiosoft2.api.type.FuncType time
com.kiosoft2.testdemo.db.model.User: java.lang.Boolean a11
androidx.room.MultiInstanceInvalidationService: java.util.Map clientNames
androidx.room.AmbiguousColumnResolver$Solution: int overlaps
com.kiosoft2.api.statement.element.GroupBy: com.kiosoft2.api.Property[] property
com.kiosoft2.api.type.ExpressionType: com.kiosoft2.api.type.ExpressionType greaterOrEqual
com.kiosoft2.api.type.ExpressionType: com.kiosoft2.api.type.ExpressionType notIn
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.testdemo.db.model.User_ _instance
androidx.room.FtsOptions$MatchInfo: androidx.room.FtsOptions$MatchInfo FTS3
androidx.room.MultiInstanceInvalidationClient: android.content.ServiceConnection serviceConnection
com.kiosoft2.common.task.model.TaskInfo: androidx.lifecycle.LifecycleOwner lifecycleOwner
kotlinx.coroutines.android.HandlerDispatcherKt$awaitFrameSlowPath$lambda$3$$inlined$Runnable$1: kotlinx.coroutines.CancellableContinuation $cont$inlined
androidx.room.util.CursorUtil$wrapMappedColumns$2: java.lang.String[] $columnNames
com.kiosoft2.common.task.util.TaskManager$removeTask$1$1: com.kiosoft2.common.task.model.TaskInfo $it
com.kiosoft2.api.RoomOperator: boolean PRINT_SQL_LOG
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$insert$1: android.content.ContentValues $values
androidx.room.ColumnInfo: androidx.room.ColumnInfo$Companion Companion
com.kiosoft2.api.type.OpType: com.kiosoft2.api.type.OpType delete
com.kiosoft2.common.task.model.TaskInfo: java.lang.Class annotationClass
androidx.room.util.TableInfo$ForeignKey: java.util.List referenceColumnNames
androidx.room.DatabaseConfiguration: java.util.List typeConverters
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$QueryCallback queryCallback
androidx.lifecycle.LiveData: boolean mDispatchInvalidated
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
com.kiosoft2.api.statement.SelectSQL: boolean distinct
com.kiosoft2.common.task.model.TaskInfo: long initialDelay
com.kiosoft2.api.statement.element.Condition: java.util.List conditionList
com.kiosoft2.testdemo.db.model.User: java.lang.Byte a8
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1: int label
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$7: com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl this$0
androidx.room.util.TableInfo$Column: androidx.room.util.TableInfo$Column$Companion Companion
androidx.room.InvalidationTracker: androidx.room.RoomDatabase database
com.kiosoft2.common.task.util.TaskManager$taskActivityLifecycleHelper$1: com.kiosoft2.common.task.util.TaskManager$taskActivityLifecycleHelper$1 INSTANCE
com.kiosoft2.api.EntityManager: com.kiosoft2.api.EntityManager$Companion Companion
androidx.room.util.ViewInfo: java.lang.String sql
kotlinx.coroutines.channels.BufferedChannel: long bufferEnd
androidx.room.CoroutinesRoom$Companion$execute$4$job$1: int label
com.kiosoft2.common.task.model.TaskInfo: long time
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode WRITE_AHEAD_LOGGING
com.kiosoft2.testdemo.db.model.User: boolean sex
androidx.room.CoroutinesRoom$Companion$createFlow$1$1: int label
androidx.room.util.TableInfo$ForeignKey: java.lang.String onUpdate
androidx.room.OnConflictStrategy$Companion: androidx.room.OnConflictStrategy$Companion $$INSTANCE
com.kiosoft2.common.task.util.TaskReLoadUtil: com.kiosoft2.common.task.util.TaskReLoadUtil INSTANCE
com.kiosoft2.testdemo.db.model.User: short a5
com.kiosoft2.common.cache.db.database.AppDataBase_Impl: com.kiosoft2.common.cache.db.dao.TaskInfoDao _taskInfoDao
androidx.room.MultiInstanceInvalidationClient: android.content.Context appContext
kotlin.jvm.internal.CallableReference: boolean isTopLevel
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
androidx.room.OnConflictStrategy$Companion: int IGNORE
com.kiosoft2.testdemo.db.model.Book_: com.kiosoft2.testdemo.db.model.Book_ _instance
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$JournalMode journalMode
androidx.room.AutoCloser: java.util.concurrent.Executor executor
androidx.room.util.TableInfo$ForeignKey: java.lang.String referenceTable
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property a11
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object state
androidx.room.ForeignKey: int RESTRICT
androidx.room.DatabaseConfiguration: java.lang.String name
com.kiosoft2.api.Property: java.lang.String name
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
androidx.room.AmbiguousColumnResolver$Solution: androidx.room.AmbiguousColumnResolver$Solution NO_SOLUTION
androidx.room.util.TableInfo: androidx.room.util.TableInfo$Companion Companion
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
kotlinx.coroutines.CancelledContinuation: int _resumed
com.kiosoft2.common.thead.aspect.InterceptIOThreadAspectJ: com.kiosoft2.common.thead.aspect.InterceptIOThreadAspectJ$Companion Companion
com.kiosoft2.api.statement.SelectSQL: com.kiosoft2.api.statement.element.Function function
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$delete$1: java.lang.String $table
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForString$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForString$1 INSTANCE
androidx.room.AmbiguousColumnResolver$ResultColumn: int index
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$4: com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl this$0
androidx.room.SQLiteCopyOpenHelper: java.lang.String copyFromAssetPath
com.kiosoft2.common.task.helper.DelayedTaskHelper$start$1: com.kiosoft2.common.task.model.TaskInfo $taskInfo
com.kiosoft2.common.task.util.TaskInfoRepository$getCacheTaskListByOwerClassName$2: int label
com.kiosoft2.api.type.FuncType: com.kiosoft2.api.type.FuncType[] $VALUES
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeSqliteStatementWithRefCount$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement this$0
kotlinx.coroutines.channels.BufferedChannel: long sendersAndCloseStatus
androidx.room.util.TableInfo$ForeignKeyWithSequence: int sequence
androidx.room.MultiInstanceInvalidationClient: androidx.room.IMultiInstanceInvalidationCallback callback
com.kiosoft2.api.Property: java.lang.String alias
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_DelayedTask$0: com.kiosoft2.common.task.annotions.TaskThread threadType
com.kiosoft2.common.autoservice.ServiceLoad: com.kiosoft2.common.autoservice.ServiceLoad INSTANCE
androidx.room.AutoClosingRoomOpenHelper: androidx.room.AutoCloser autoCloser
androidx.room.util.TableInfo$Column: java.lang.String defaultValue
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1 $observer
com.kiosoft2.api.aparameter.AParameterManager: java.lang.String PARAMETE_FILE_NAME
androidx.room.RoomSQLiteQuery$Companion$copyFrom$1: androidx.room.RoomSQLiteQuery $$delegate_0
com.kiosoft2.common.thead.utils.AppExecutors: java.util.concurrent.ScheduledExecutorService timeworkIO
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
com.kiosoft2.api.statement.element.Join: com.kiosoft2.api.Entity targetEntity
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$2: com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl this$0
androidx.room.CoroutinesRoom$Companion$createFlow$1: boolean $inTransaction
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1: kotlin.jvm.functions.Function2 $transactionBlock
androidx.room.AutoCloser: android.os.Handler handler
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property a9
com.kiosoft2.api.statement.UpdateSQL: java.util.List setFields
androidx.room.TransactionExecutor: java.lang.Object syncLock
androidx.room.InvalidationTracker: java.lang.Object syncTriggersLock
androidx.room.TransactionElement: java.util.concurrent.atomic.AtomicInteger referenceCount
androidx.room.InvalidationTracker$ObserverWrapper: androidx.room.InvalidationTracker$Observer observer
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: androidx.lifecycle.ProcessLifecycleOwner this$0
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
com.kiosoft2.testdemo.db.model.Book: long uid
androidx.room.rxjava3.RxRoom$2: io.reactivex.rxjava3.core.ObservableEmitter val$emitter
androidx.room.BuiltInTypeConverters$State: androidx.room.BuiltInTypeConverters$State INHERITED
com.kiosoft2.common.task.annotions.TaskThread: com.kiosoft2.common.task.annotions.TaskThread IO_THREAD
com.kiosoft2.common.model.BaseLifecycleOwnerImpl$1: com.kiosoft2.common.model.BaseLifecycleOwnerImpl$1 INSTANCE
androidx.room.util.TableInfo: java.util.Set indices
androidx.room.RoomSQLiteQuery: int capacity
androidx.room.RoomDatabase$Builder: java.util.Set migrationsNotRequiredFrom
androidx.room.InvalidationTracker: java.util.Map shadowTablesMap
androidx.room.AmbiguousColumnResolver$resolve$4: kotlin.jvm.internal.Ref$ObjectRef $bestSolution
androidx.room.AmbiguousColumnResolver$Match: kotlin.ranges.IntRange resultRange
androidx.room.ForeignKey: int SET_NULL
androidx.lifecycle.LiveData: int mVersion
androidx.room.DatabaseConfiguration: android.content.Intent multiInstanceInvalidationServiceIntent
androidx.room.OnConflictStrategy: int ROLLBACK
com.kiosoft2.api.aparameter.AParameterManager$Companion$instance$2: com.kiosoft2.api.aparameter.AParameterManager$Companion$instance$2 INSTANCE
kotlinx.coroutines.android.HandlerContext: java.lang.String name
androidx.room.RoomTrackingLiveData: java.util.concurrent.Callable computeFunction
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1: java.lang.Object L$0
androidx.room.DatabaseConfiguration: java.util.List callbacks
com.kiosoft2.common.router.ARouterOperator: kotlin.Lazy instance$delegate
androidx.room.InvalidationTracker$ObservedTableTracker: boolean needsSync
com.kiosoft2.common.cache.TaskCacheManager$cacheTask$1$1: int label
androidx.room.ColumnInfo$Companion: int UNDEFINED
com.kiosoft2.common.task.model.MethodInfo: java.lang.Class owerClassName
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$reStartTask$2: int label
com.kiosoft2.api.type.JoinType: com.kiosoft2.api.type.JoinType[] $VALUES
androidx.room.DatabaseConfiguration: boolean requireMigration
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$5: com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl this$0
androidx.room.MultiInstanceInvalidationClient$serviceConnection$1: androidx.room.MultiInstanceInvalidationClient this$0
androidx.lifecycle.LiveData: java.lang.Object mPendingData
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeSqliteStatementWithRefCount$1: kotlin.jvm.functions.Function1 $block
com.kiosoft2.api.statement.element.Function: com.kiosoft2.api.Property property
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
androidx.room.AmbiguousColumnResolver$Match: java.util.List resultIndices
androidx.room.MultiInstanceInvalidationClient$1: androidx.room.MultiInstanceInvalidationClient this$0
androidx.room.RoomDatabaseKt$withTransaction$transactionBlock$1: java.lang.Object L$0
androidx.room.RoomDatabase$Builder: java.lang.String name
androidx.room.TransactionExecutor: java.util.ArrayDeque tasks
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$delete$1: java.lang.Object[] $whereArgs
androidx.room.AutoCloser: androidx.sqlite.db.SupportSQLiteOpenHelper delegateOpenHelper
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1: kotlinx.coroutines.android.HandlerContext this$0
androidx.room.BuiltInTypeConverters$State: androidx.room.BuiltInTypeConverters$State ENABLED
androidx.room.InvalidationTracker: java.lang.String INVALIDATED_COLUMN_NAME
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0: long initialDelay
com.kiosoft2.api.statement.element.Page: int offset
androidx.room.CoroutinesRoom$Companion$createFlow$1: java.lang.String[] $tableNames
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1$1: kotlinx.coroutines.Job $job
androidx.lifecycle.LiveData: java.lang.Object mDataLock
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$reStartTask$1: com.kiosoft2.common.autoservice.impl.TaskServiceImpl this$0
com.alibaba.fastjson2.writer.FieldWriterDate: byte[] cacheFormat19UTF8
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode AUTOMATIC
androidx.room.SQLiteCopyOpenHelperFactory: java.util.concurrent.Callable mCopyFromInputStream
com.kiosoft2.common.task.util.TaskInfoRepository$insertTaskInfo$2: int label
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$MigrationContainer migrationContainer
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1: androidx.room.RoomDatabase $this_invalidationTrackerFlow
com.kiosoft2.common.task.model.TaskInfo: boolean isReStart
androidx.room.InvalidationLiveDataContainer: androidx.room.RoomDatabase database
com.kiosoft2.api.BuildConfig: boolean DEBUG
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.statement.element.Condition applyCondition
androidx.room.MultiInstanceInvalidationClient: androidx.room.InvalidationTracker invalidationTracker
androidx.lifecycle.LiveData: java.lang.Runnable mPostValueRunnable
androidx.room.MultiInstanceInvalidationService$callbackList$1: androidx.room.MultiInstanceInvalidationService this$0
com.kiosoft2.common.task.aspect.TaskAspectJ$aroundJoinPoint$1: org.aspectj.lang.ProceedingJoinPoint $joinPoint
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_DelayedTask$0: int taskCode
androidx.room.RoomSQLiteQuery: long[] longBindings
com.kiosoft2.common.task.util.TaskManager: java.util.concurrent.ConcurrentHashMap lifecycleMap
androidx.room.InvalidationTracker: androidx.room.InvalidationTracker$ObservedTableTracker observedTableTracker
com.kiosoft2.api.Property: boolean isId
androidx.room.CoroutinesRoom$Companion$createFlow$1$1: kotlinx.coroutines.flow.FlowCollector $$this$flow
com.kiosoft2.api.type.FuncType: com.kiosoft2.api.type.FuncType sum
androidx.room.util.TableInfo: int CREATED_FROM_UNKNOWN
com.kiosoft2.common.task.helper.DelayedTaskHelper$start$1: com.kiosoft2.common.task.interfaces.JoinPointRunCallback $callBack
androidx.room.InvalidationTracker$Observer: java.lang.String[] tables
androidx.room.RoomDatabase$Builder: java.util.Set migrationStartAndEndVersions
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: android.database.Cursor delegate
com.kiosoft2.common.thead.utils.AppExecutors: java.util.concurrent.Executor mainThread
androidx.room.util.FtsTableInfo: java.lang.String name
com.kiosoft2.api.type.FuncType: com.kiosoft2.api.type.FuncType upper
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0: long period
androidx.room.RoomWarnings: java.lang.String CANNOT_CREATE_VERIFICATION_DATABASE
com.kiosoft2.api.type.OrderByType: com.kiosoft2.api.type.OrderByType[] $VALUES
androidx.room.InvalidationTracker: boolean initialized
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$12: java.lang.String val$owerClassName
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property a10
androidx.room.RoomDatabase$Builder: java.lang.Class klass
com.kiosoft2.common.task.util.TaskInfoRepository$updateTaskInfo$2: com.kiosoft2.common.task.util.TaskInfoRepository this$0
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
com.kiosoft2.api.type.ExpressionType: com.kiosoft2.api.type.ExpressionType between
com.kiosoft2.common.router.ARouterOperator$Companion$instance$2: com.kiosoft2.common.router.ARouterOperator$Companion$instance$2 INSTANCE
androidx.room.RoomWarnings: java.lang.String CURSOR_MISMATCH
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.kiosoft2.api.builder.Query: com.kiosoft2.api.statement.SelectSQL sql
androidx.room.RoomMasterTable: java.lang.String DEFAULT_ID
androidx.room.InvalidationTracker$ObservedTableTracker: long[] tableObservers
com.kiosoft2.api.Property: java.lang.Class type
androidx.room.RoomOpenHelper$Delegate: int version
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.google.gson.reflect.TypeToken: java.lang.Class rawType
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$reStartTask$2: com.kiosoft2.common.autoservice.impl.TaskServiceImpl this$0
com.kiosoft2.api.type.ExpressionType: com.kiosoft2.api.type.ExpressionType regExp
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$reStartTask$1: int label
androidx.room.QueryInterceptorStatement: java.util.List bindArgsCache
com.kiosoft2.api.type.ExpressionType: com.kiosoft2.api.type.ExpressionType notNull
androidx.room.RoomMasterTable: java.lang.String NAME
androidx.room.ColumnInfo$Companion: int BINARY
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setMaximumSize$1: long $numBytes
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$1: com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl this$0
com.kiosoft2.common.task.util.TaskMethodUtil: com.kiosoft2.common.task.util.TaskMethodUtil INSTANCE
com.kiosoft2.testdemo.db.model.User_: java.util.List compositePK_
com.kiosoft2.api.aparameter.AParameterManager: android.util.LruCache parameterCache
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1: java.lang.String[] $tables
com.kiosoft2.common.task.util.TaskManager: java.util.concurrent.ConcurrentHashMap cacheHashMap
androidx.room.CoroutinesRoom$Companion$execute$4$1: android.os.CancellationSignal $cancellationSignal
com.kiosoft2.api.RoomOperator: com.kiosoft2.api.RoomOperator db
com.kiosoft2.api.builder.UpdateBuilder: androidx.room.RoomDatabase db
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property address
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property id
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$insert$1: int $conflictAlgorithm
com.kiosoft2.common.task.helper.RecurringTaskHelper$start$1: com.kiosoft2.common.task.model.TaskInfo $taskInfo
androidx.room.InvalidationTracker$refreshRunnable$1: androidx.room.InvalidationTracker this$0
androidx.room.CoroutinesRoom$Companion$createFlow$1: int label
androidx.lifecycle.LiveData: int START_VERSION
androidx.room.ForeignKey: androidx.room.ForeignKey$Companion Companion
androidx.room.AutoCloser: java.lang.Runnable executeAutoCloser
androidx.room.DatabaseConfiguration: androidx.room.RoomDatabase$PrepackagedDatabaseCallback prepackagedDatabaseCallback
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
kotlin.jvm.internal.CallableReference: java.lang.String name
androidx.room.InvalidationTracker: androidx.room.MultiInstanceInvalidationClient multiInstanceInvalidationClient
androidx.room.DatabaseConfiguration: java.lang.String copyFromAssetPath
androidx.room.InvalidationTracker$ObservedTableTracker: int ADD
androidx.room.SQLiteCopyOpenHelper: boolean verified
androidx.room.CoroutinesRoom$Companion$execute$2: int label
androidx.room.AutoClosingRoomOpenHelperFactory: androidx.room.AutoCloser autoCloser
androidx.room.SQLiteCopyOpenHelper: androidx.sqlite.db.SupportSQLiteOpenHelper delegate
androidx.room.SharedSQLiteStatement: java.util.concurrent.atomic.AtomicBoolean lock
com.kiosoft2.testdemo.db.model.User: byte a3
com.kiosoft2.common.task.model.TaskInfo: long period
com.kiosoft2.api.helper.SQLiteHelper$3: java.lang.String val$sql
androidx.room.RoomWarnings: androidx.room.RoomWarnings$Companion Companion
com.kiosoft2.common.task.model.TaskInfo: boolean isRepeat
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$update$1: java.lang.String $table
com.kiosoft2.common.thead.utils.AppExecutors$InstanceHolder: com.kiosoft2.common.thead.utils.AppExecutors instance
com.kiosoft2.common.task.util.TaskManager$removeTask$1$1: int label
com.kiosoft2.api.type.ExpressionType: com.kiosoft2.api.type.ExpressionType notEqual
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object closeHandler
androidx.room.FtsOptions$MatchInfo: androidx.room.FtsOptions$MatchInfo[] $VALUES
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1$job$1: java.util.concurrent.atomic.AtomicBoolean $ignoreInvalidation
kotlin.SafePublicationLazyImpl: java.lang.Object _value
androidx.room.RoomDatabase$Builder: java.util.List callbacks
com.kiosoft2.api.helper.SQLiteHelper$4: int[] $SwitchMap$com$kiosoft2$api$type$ExpressionType
com.kiosoft2.api.statement.SelectSQL: com.kiosoft2.api.statement.element.GroupBy groupBy
com.kiosoft2.common.task.util.TaskInfoRepository$getTaskInfoByTaskId$2: int label
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
com.kiosoft2.testdemo.db.model.User: java.lang.Long a7
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property sex
com.alibaba.fastjson2.JSONFactory$CacheItem: char[] chars
com.kiosoft2.testdemo.db.model.User_: java.util.List allProperties_
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$11: com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl this$0
androidx.room.ColumnInfo: int UNICODE
androidx.room.MultiInstanceInvalidationClient: androidx.room.IMultiInstanceInvalidationService service
com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper$onActivityCreated$1: int label
com.kiosoft2.api.statement.element.Condition: com.kiosoft2.api.type.ConditionRelation conditionRelation
com.kiosoft2.testdemo.db.model.Book_: com.kiosoft2.api.Property uid
com.kiosoft2.api.builder.JoinBuilder: androidx.room.RoomDatabase db
androidx.room.ColumnInfo: java.lang.String VALUE_UNSPECIFIED
androidx.room.AutoCloser: java.lang.String autoCloseBug
com.kiosoft2.common.model.BaseLifecycleOwnerImpl$WhenMappings: int[] $EnumSwitchMapping$0
com.kiosoft2.common.task.model.TaskInfo: com.kiosoft2.common.task.annotions.TaskThread threadType
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
com.alibaba.fastjson2.writer.FieldWriterDate: char[] cacheFormat19UTF16
androidx.room.InvalidationTracker$ObserverWrapper: java.util.Set singleTableSet
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$reStartTask$2: java.lang.Object $object
com.kiosoft2.common.thead.aspect.InterceptMainThreadAspectJ: com.kiosoft2.common.thead.aspect.InterceptMainThreadAspectJ$Companion Companion
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property age
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$2: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$2 INSTANCE
androidx.room.QueryInterceptorOpenHelper: androidx.room.RoomDatabase$QueryCallback queryCallback
com.google.gson.reflect.TypeToken: int hashCode
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property a7
androidx.room.MultiInstanceInvalidationService: android.os.RemoteCallbackList callbackList
androidx.room.ForeignKey: int NO_ACTION
androidx.room.util.TableInfo: java.util.Set foreignKeys
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$1: java.lang.String $sql
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
com.kiosoft2.common.task.aspect.DelayedTaskAspectJ: com.kiosoft2.common.task.aspect.DelayedTaskAspectJ$Companion Companion
androidx.room.TransactionElement: androidx.room.TransactionElement$Key Key
androidx.room.util.StringUtil: java.lang.String[] EMPTY_STRING_ARRAY
com.kiosoft2.api.statement.element.Join: com.kiosoft2.api.statement.element.Condition on
androidx.room.AutoCloser: java.lang.Runnable onAutoCloseCallback
com.kiosoft2.common.task.annotions.TaskThread: com.kiosoft2.common.task.annotions.TaskThread MAIN_THREAD
com.kiosoft2.common.task.helper.RecurringTaskHelper$start$1: kotlin.jvm.internal.Ref$ObjectRef $disposable
kotlinx.coroutines.InvokeOnCancelling: int _invoked
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1$job$1: int label
com.kiosoft2.api.builder.QueryBuilder: androidx.room.RoomDatabase db
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$6: com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl this$0
androidx.room.OnConflictStrategy: androidx.room.OnConflictStrategy$Companion Companion
com.kiosoft2.common.task.helper.DelayedTaskHelper$start$1: java.lang.Object $obj
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1$job$1: androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1$observer$1 $observer
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$10: com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl this$0
androidx.room.RoomWarnings: java.lang.String MISSING_INDEX_ON_FOREIGN_KEY_CHILD
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDatabaseIntegrityOk$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDatabaseIntegrityOk$1 INSTANCE
androidx.room.OnConflictStrategy: int REPLACE
androidx.room.QueryInterceptorOpenHelperFactory: androidx.sqlite.db.SupportSQLiteOpenHelper$Factory delegate
com.kiosoft2.common.thead.utils.AppExecutors: int THREAD_COUNT
androidx.room.util.TableInfo$ForeignKeyWithSequence: java.lang.String to
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$start$1: int label
com.kiosoft2.common.task.helper.RecurringTaskHelper$start$1: java.lang.Object $obj
androidx.room.RoomDatabase: java.util.Map backingFieldMap
androidx.room.DatabaseConfiguration: java.util.List autoMigrationSpecs
com.kiosoft2.api.helper.SQLiteHelper$4: int[] $SwitchMap$com$kiosoft2$api$type$FuncType
com.google.gson.reflect.TypeToken: java.lang.reflect.Type type
androidx.room.util.FtsTableInfo: java.util.Set options
androidx.room.RoomOpenHelper$ValidationResult: java.lang.String expectedFoundMsg
androidx.room.RoomTrackingLiveData: java.util.concurrent.atomic.AtomicBoolean computing
androidx.room.Index$Order: androidx.room.Index$Order[] $VALUES
com.kiosoft2.api.type.ExpressionType: com.kiosoft2.api.type.ExpressionType endWith
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDbLockedByCurrentThread$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDbLockedByCurrentThread$1 INSTANCE
androidx.room.RoomDatabase$endTransaction$1: androidx.room.RoomDatabase this$0
androidx.room.paging.LimitOffsetDataSource: androidx.room.RoomDatabase mDb
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1$job$1: boolean $emitInitialState
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$6: com.kiosoft2.common.task.model.TaskInfo val$taskInfo
com.kiosoft2.common.cache.configs.CacheConfigKt: java.lang.String TASK_CACHE_KEY
com.kiosoft2.testdemo.db.model.User: java.lang.Integer a10
androidx.room.AutoCloser: java.lang.Runnable autoCloser
androidx.room.RoomWarnings: java.lang.String INDEX_FROM_EMBEDDED_ENTITY_IS_DROPPED
androidx.room.RoomTrackingLiveData$observer$1: androidx.room.RoomTrackingLiveData this$0
androidx.room.TransactionElement: kotlin.coroutines.ContinuationInterceptor transactionDispatcher
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isReadOnly$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isReadOnly$1 INSTANCE
com.kiosoft2.api.statement.element.Page: int limit
androidx.room.RoomOpenHelper$ValidationResult: boolean isValid
com.kiosoft2.api.builder.BasicConditionRelationBuilder: com.kiosoft2.api.statement.element.Condition condition
com.kiosoft2.common.task.util.TaskInfoRepository$getCacheTaskListByOwerClassName$2: com.kiosoft2.common.task.util.TaskInfoRepository this$0
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$reStartTask$1: java.lang.Object $object
androidx.room.SQLiteCopyOpenHelper: java.io.File copyFromFile
androidx.room.ForeignKey$Companion: int NO_ACTION
androidx.room.RoomMasterTable: java.lang.String READ_QUERY
com.kiosoft2.common.task.model.TaskInfo: int taskCode
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$12: com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl this$0
com.kiosoft2.api.type.FuncType: com.kiosoft2.api.type.FuncType length
com.kiosoft2.common.thead.utils.AppExecutors$InstanceHolder: com.kiosoft2.common.thead.utils.AppExecutors$InstanceHolder INSTANCE
com.kiosoft2.api.type.JoinType: com.kiosoft2.api.type.JoinType crossJoin
androidx.room.IMultiInstanceInvalidationCallback$Stub: int TRANSACTION_onInvalidation
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$3: com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl this$0
com.kiosoft2.common.task.util.TaskInfoRepository$insertOrUpdateTaskInfo$2: int label
com.kiosoft2.api.helper.SQLiteHelper$2: com.kiosoft2.api.Entity val$entity
androidx.room.AutoClosingRoomOpenHelper: androidx.sqlite.db.SupportSQLiteOpenHelper delegate
androidx.room.migration.MigrationImpl: kotlin.jvm.functions.Function1 migrateCallback
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
com.kiosoft2.api.type.ConditionRelation: com.kiosoft2.api.type.ConditionRelation[] $VALUES
com.kiosoft2.api.type.ExpressionType: com.kiosoft2.api.type.ExpressionType[] $VALUES
com.kiosoft2.common.cache.db.database.AppDataBase_Impl$1: com.kiosoft2.common.cache.db.database.AppDataBase_Impl this$0
androidx.room.paging.LimitOffsetDataSource: androidx.room.RoomSQLiteQuery mSourceQuery
com.kiosoft2.common.task.util.TaskManager: com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper taskActivityLifecycleHelper
androidx.room.IMultiInstanceInvalidationCallback$Stub$Proxy: android.os.IBinder mRemote
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: int label
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$18: int[] $SwitchMap$java$util$concurrent$TimeUnit
androidx.room.AmbiguousColumnResolver$ResultColumn: java.lang.String name
com.kiosoft2.common.task.annotions.TaskThread: kotlin.enums.EnumEntries $ENTRIES
androidx.room.CoroutinesRoom$Companion$execute$4$job$1: kotlinx.coroutines.CancellableContinuation $continuation
com.kiosoft2.common.click.aspect.InterceptSingleTimeAspectJ: com.kiosoft2.common.click.aspect.InterceptSingleTimeAspectJ$Companion Companion
com.kiosoft2.common.thead.utils.AppExecutors$MainThreadExecutor: android.os.Handler mainThreadHandler
com.kiosoft2.api.statement.element.Expression: com.kiosoft2.api.type.ExpressionType expressionType
androidx.room.CoroutinesRoom$Companion$createFlow$1$1: java.lang.String[] $tableNames
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
androidx.room.ColumnInfo$Companion: int REAL
com.kiosoft2.common.task.util.TaskManager$isExistTask$1$1: int label
androidx.room.RoomWarnings: java.lang.String RELATION_QUERY_WITHOUT_TRANSACTION
androidx.room.RoomTrackingLiveData: java.util.concurrent.atomic.AtomicBoolean invalid
kotlinx.coroutines.CoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher$Key Key
androidx.room.MultiInstanceInvalidationClient: java.lang.Runnable removeObserverRunnable
androidx.room.util.TableInfo$Column: java.lang.String type
androidx.lifecycle.LiveData: java.lang.Object mData
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$14: com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl this$0
com.kiosoft2.common.task.util.TaskManager: com.kiosoft2.common.task.util.TaskManager INSTANCE
androidx.room.util.TableInfo$Column: int createdFrom
com.kiosoft2.common.cache.TaskCacheManager: com.kiosoft2.common.cache.db.database.AppDataBase db
com.kiosoft2.common.task.util.TaskManager$WhenMappings: int[] $EnumSwitchMapping$0
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
androidx.room.ColumnInfo: java.lang.String INHERIT_FIELD_NAME
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$15: com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl this$0
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$1 INSTANCE
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$cancelTask$1: java.lang.Object $object
com.kiosoft2.api.statement.element.Condition$1: int[] $SwitchMap$com$kiosoft2$api$type$ExpressionType
androidx.room.OnConflictStrategy$Companion: int ABORT
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
androidx.room.InvalidationTracker: androidx.arch.core.internal.SafeIterableMap observerMap
com.kiosoft2.testdemo.db.model.Book: java.lang.Long id
androidx.room.RoomTrackingLiveData: boolean inTransaction
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object _closeCause
androidx.room.RoomDatabase$MigrationContainer: java.util.Map migrations
androidx.room.InvalidationTracker: java.util.concurrent.atomic.AtomicBoolean pendingRefresh
androidx.room.InvalidationTracker$ObservedTableTracker: int[] triggerStateChanges
com.kiosoft2.testdemo.db.model.Book_: java.lang.Class entityClass_
com.kiosoft2.api.EntityManager: java.util.HashMap entityMap
androidx.room.RoomWarnings: java.lang.String INDEX_FROM_EMBEDDED_FIELD_IS_DROPPED
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$cancelTask$1: int label
androidx.room.FtsOptions: java.lang.String TOKENIZER_PORTER
androidx.room.EntityUpsertionAdapter: androidx.room.EntityDeletionOrUpdateAdapter updateAdapter
androidx.room.InvalidationTracker: java.util.Map tableIdLookup
androidx.room.EntityUpsertionAdapterKt: java.lang.String SQLITE_CONSTRAINT_PRIMARYKEY
androidx.room.ColumnInfo$Companion: int NOCASE
kotlinx.coroutines.CompletedExceptionally: int _handled
androidx.room.RoomSQLiteQuery: int BLOB
androidx.room.RoomDatabase: androidx.room.InvalidationTracker invalidationTracker
com.kiosoft2.api.type.FuncType: com.kiosoft2.api.type.FuncType abs
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$maximumSize$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$maximumSize$1 INSTANCE
com.kiosoft2.api.Property: java.lang.String tableName
androidx.room.InvalidationTracker: java.lang.Object trackerLock
androidx.room.RoomSQLiteQuery: java.util.TreeMap queryPool
androidx.room.AutoClosingRoomOpenHelper: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase autoClosingDb
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
androidx.room.RoomMasterTable: java.lang.String COLUMN_ID
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
kotlin.jvm.internal.FunctionReference: int arity
com.kiosoft2.api.statement.element.Expression: boolean isValueProperty
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0: com.kiosoft2.common.task.annotions.TaskThread threadType
com.kiosoft2.common.cache.db.dao.TaskInfoDao$insertOrUpdateTaskInfo$1: int label
com.kiosoft2.common.task.util.TaskInfoRepository$insertOrUpdateTaskInfo$2: com.kiosoft2.common.task.util.TaskInfoRepository this$0
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$9: java.util.List val$taskInfoList
com.kiosoft2.testdemo.db.model.Book_: com.kiosoft2.api.Property page
androidx.room.InvalidationTracker: androidx.room.AutoCloser autoCloser
androidx.room.ColumnInfo: int BLOB
com.kiosoft2.api.aparameter.AParameterManager: kotlin.Lazy instance$delegate
androidx.room.RoomWarnings: java.lang.String MISSING_SCHEMA_LOCATION
androidx.room.RoomDatabase: java.util.concurrent.Executor internalTransactionExecutor
androidx.room.util.TableInfo$ForeignKey: java.lang.String onDelete
androidx.room.SQLiteCopyOpenHelperFactory: androidx.sqlite.db.SupportSQLiteOpenHelper$Factory mDelegate
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
com.kiosoft2.api.type.JoinType: java.lang.String exp
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: androidx.room.EntityInsertionAdapter __insertionAdapterOfTaskInfo
com.kiosoft2.common.thead.utils.AppExecutors: java.util.concurrent.Executor networkIO
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_DelayedTask$0: java.util.concurrent.TimeUnit unit
com.kiosoft2.common.task.util.TaskInfoRepository$updateTaskInfoList$2: java.util.List $taskInfoList
com.kiosoft2.common.click.utils.ClickUtil: long lastClickTime
com.kiosoft2.api.statement.element.Expression: com.kiosoft2.api.statement.SelectSQL leftChildSelectSQL
androidx.room.RoomSQLiteQuery: int NULL
androidx.room.FtsOptions$Order: androidx.room.FtsOptions$Order DESC
androidx.room.util.TableInfo$Column: java.lang.String name
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property a5
androidx.room.RoomDatabaseKt$withTransaction$transactionBlock$1: androidx.room.RoomDatabase $this_withTransaction
com.kiosoft2.testdemo.db.model.User: byte[] a4
androidx.room.RoomDatabase$Builder: android.content.Intent multiInstanceInvalidationIntent
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
androidx.room.DatabaseConfiguration: java.util.concurrent.Callable copyFromInputStream
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$17: androidx.room.RoomSQLiteQuery val$_statement
androidx.lifecycle.ReportFragment$LifecycleCallbacks: androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion Companion
com.kiosoft2.api.type.ConditionRelation: com.kiosoft2.api.type.ConditionRelation or
androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery$Companion Companion
com.kiosoft2.common.task.helper.DelayedTaskHelper$start$1: kotlin.jvm.internal.Ref$ObjectRef $disposable
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _parentHandle
androidx.room.RoomDatabase: java.util.concurrent.Executor internalQueryExecutor
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
androidx.lifecycle.LiveData: int mActiveCount
com.kiosoft2.api.statement.element.Expression: java.lang.Object[] value
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForLong$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForLong$1 INSTANCE
com.kiosoft2.common.task.annotions.TaskThread: com.kiosoft2.common.task.annotions.TaskThread CURR_THREAD
androidx.room.RoomDatabase$Builder: java.lang.String copyFromAssetPath
androidx.sqlite.db.SupportSQLiteOpenHelper$Callback: androidx.sqlite.db.SupportSQLiteOpenHelper$Callback$Companion Companion
com.kiosoft2.api.type.ConditionRelation: com.kiosoft2.api.type.ConditionRelation and
androidx.room.BuiltInTypeConverters$State: androidx.room.BuiltInTypeConverters$State DISABLED
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_DelayedTask$0: boolean isRepeat
com.kiosoft2.api.builder.SetBuilder: com.kiosoft2.api.statement.UpdateSQL sql
com.kiosoft2.api.helper.SQLiteHelper: android.util.ArrayMap deleteAdapterMap
com.kiosoft2.api.statement.UpdateSQL: com.kiosoft2.api.statement.element.Condition where
androidx.room.ForeignKey: int SET_DEFAULT
com.kiosoft2.common.cache.TaskCacheManager: com.kiosoft2.common.cache.db.dao.TaskInfoDao taskInfoDao
com.kiosoft2.common.task.model.TaskInfo: java.lang.ref.WeakReference weakReference
androidx.room.SQLiteCopyOpenHelperFactory: java.lang.String mCopyFromAssetPath
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: androidx.room.RoomDatabase $db
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1: java.lang.Runnable $block
com.kiosoft2.common.task.util.TaskInfoRepository$updateTaskInfo$2: int label
androidx.room.RoomSQLiteQuery: int LONG
androidx.room.ForeignKey$Companion: int RESTRICT
com.kiosoft2.api.type.ExpressionType: com.kiosoft2.api.type.ExpressionType less
androidx.room.RoomSQLiteQuery: int POOL_LIMIT
com.kiosoft2.common.thead.utils.AppExecutors: java.util.concurrent.Executor diskIO
androidx.room.util.FtsTableInfo: androidx.room.util.FtsTableInfo$Companion Companion
androidx.room.RoomMasterTable: java.lang.String TABLE_NAME
androidx.room.MultiInstanceInvalidationService: int maxClientId
androidx.room.RoomDatabase$Builder: long autoCloseTimeout
com.kiosoft2.api.condition.PropertyCondition: com.kiosoft2.api.statement.element.Condition condition
androidx.room.QueryInterceptorDatabase: java.util.concurrent.Executor queryCallbackExecutor
androidx.room.DatabaseConfiguration: boolean allowDestructiveMigrationOnDowngrade
com.kiosoft2.api.type.ExpressionType: com.kiosoft2.api.type.ExpressionType lessOrEqual
kotlinx.coroutines.DispatchedCoroutine: int _decision
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeUpdateDelete$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeUpdateDelete$1 INSTANCE
androidx.room.RoomWarnings: java.lang.String MISMATCHED_SETTER
androidx.room.CoroutinesRoom$Companion$execute$4$1: kotlinx.coroutines.Job $job
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
com.kiosoft2.common.cache.db.dao.TaskInfoDao$insertOrUpdateTaskInfo$1: java.lang.Object L$1
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
androidx.room.util.ViewInfo: androidx.room.util.ViewInfo$Companion Companion
androidx.room.MultiInstanceInvalidationClient: java.util.concurrent.Executor executor
kotlinx.coroutines.flow.StateFlowSlot: java.lang.Object _state
androidx.room.RoomDatabaseKt$withTransaction$transactionBlock$1: int label
com.alibaba.fastjson2.writer.FieldWriter: com.alibaba.fastjson2.writer.ObjectWriter initObjectWriter
com.kiosoft2.testdemo.db.model.User: java.lang.Short a9
com.kiosoft2.api.helper.SQLiteHelper$1: java.lang.String val$sql
androidx.room.MultiInstanceInvalidationClient: int clientId
androidx.room.RoomSQLiteQuery: int DOUBLE
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: androidx.room.SharedSQLiteStatement __preparedStmtOfRemoveTaskInfoByTaskId
androidx.room.FtsOptions: java.lang.String TOKENIZER_SIMPLE
com.alibaba.fastjson2.JSONFactory$CacheItem: byte[] bytes
com.kiosoft2.api.type.FuncType: com.kiosoft2.api.type.FuncType avg
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$7: java.util.List val$taskInfoList
com.kiosoft2.api.statement.element.Expression: com.kiosoft2.api.statement.SelectSQL rightChildSelectSQL
androidx.room.RoomDatabase$Builder: boolean requireMigration
androidx.room.RoomMasterTable: androidx.room.RoomMasterTable INSTANCE
androidx.room.SharedSQLiteStatement$stmt$2: androidx.room.SharedSQLiteStatement this$0
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
androidx.room.paging.LimitOffsetDataSource$1: androidx.room.paging.LimitOffsetDataSource this$0
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode[] $VALUES
com.kiosoft2.common.task.model.TaskInfo: java.lang.String owerClassName
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
androidx.room.QueryInterceptorOpenHelperFactory: java.util.concurrent.Executor queryCallbackExecutor
com.kiosoft2.common.task.model.TaskInfo: int id
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: androidx.room.EntityDeletionOrUpdateAdapter __updateAdapterOfTaskInfo
androidx.room.util.TableInfo$Column: int affinity
androidx.room.CoroutinesRoom$Companion$execute$4$job$1: java.util.concurrent.Callable $callable
com.kiosoft2.common.task.util.TaskInfoRepository$getTaskList$2: int label
com.kiosoft2.api.statement.element.Expression: com.kiosoft2.api.Property property
androidx.room.RoomDatabase: androidx.room.AutoCloser autoCloser
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setLocale$1: java.util.Locale $locale
androidx.room.QueryInterceptorStatement: androidx.room.RoomDatabase$QueryCallback queryCallback
com.kiosoft2.api.statement.SelectSQL: java.util.List joins
com.kiosoft2.api.statement.SQL: com.kiosoft2.api.Entity from
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
androidx.room.ColumnInfo$Companion: int RTRIM
androidx.room.InvalidationTracker$ObservedTableTracker: int NO_OP
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property a6
com.kiosoft2.common.model.BaseLifecycleOwnerImpl$sam$androidx_lifecycle_Observer$0: kotlin.jvm.functions.Function1 function
com.kiosoft2.api.Property: boolean isClone
com.kiosoft2.common.router.ARouterOperator$FragmentBundleManager: com.kiosoft2.common.router.ARouterOperator this$0
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
kotlinx.coroutines.channels.BufferedChannel: long completedExpandBuffersAndPauseFlag
androidx.room.CoroutinesRoom$Companion$createFlow$1$1: java.lang.Object L$0
androidx.room.RoomSQLiteQuery: java.lang.String query
com.kiosoft2.api.type.FuncType: com.kiosoft2.api.type.FuncType min
com.kiosoft2.api.statement.SelectSQL: com.kiosoft2.api.statement.element.OrderBy orderBy
com.kiosoft2.common.thead.utils.AppExecutors: com.kiosoft2.common.thead.utils.AppExecutors$Companion Companion
com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager: com.kiosoft2.common.router.ARouterOperator this$0
androidx.room.MultiInstanceInvalidationService: androidx.room.IMultiInstanceInvalidationService$Stub binder
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0: boolean isReStart
androidx.room.util.TableInfo$Index: androidx.room.util.TableInfo$Index$Companion Companion
kotlin.jvm.internal.CallableReference: java.lang.String signature
com.kiosoft2.common.task.util.TaskInfoRepository$insertTaskInfoList$2: int label
androidx.room.RoomDatabaseKt$withTransaction$transactionBlock$1: kotlin.jvm.functions.Function1 $block
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1: boolean $emitInitialState
androidx.room.util.TableInfo$Column: int primaryKeyPosition
kotlin.jvm.internal.PropertyReference: boolean syntheticJavaProperty
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
androidx.room.ColumnInfo$Companion: int INTEGER
androidx.room.RoomWarnings: java.lang.String MISSING_INDEX_ON_JUNCTION
com.tencent.mmkv.MMKV: long nativeHandle
kotlinx.coroutines.channels.BufferedChannel: long receivers
androidx.room.util.TableInfo: int CREATED_FROM_ENTITY
androidx.room.AutoCloser: int refCount
androidx.room.MultiInstanceInvalidationClient: java.lang.Runnable setUpRunnable
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
com.kiosoft2.common.click.utils.ClickUtil: com.kiosoft2.common.click.utils.ClickUtil INSTANCE
com.kiosoft2.common.task.model.TaskInfo: java.lang.String taskId
kotlinx.coroutines.flow.StateFlowImpl: java.lang.Object _state
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
com.kiosoft2.common.cache.TaskCacheManager: com.google.gson.Gson gson
com.kiosoft2.api.builder.DeleteBuilder: com.kiosoft2.api.statement.DeleteSQL sql
com.kiosoft2.api.type.JoinType: com.kiosoft2.api.type.JoinType innerJoin
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1$job$1: java.lang.String[] $tables
androidx.room.OnConflictStrategy: int NONE
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$2: java.lang.Object[] $bindArgs
androidx.room.AutoCloser: long autoCloseTimeoutInMs
com.kiosoft2.api.builder.SetBuilder: androidx.room.RoomDatabase db
androidx.room.OnConflictStrategy: int IGNORE
androidx.room.rxjava3.RxRoom$1: io.reactivex.rxjava3.core.FlowableEmitter val$emitter
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1: kotlinx.coroutines.android.HandlerContext this$0
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$update$1: int $conflictAlgorithm
androidx.room.CoroutinesRoom: androidx.room.CoroutinesRoom$Companion Companion
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object bufferEndSegment
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
androidx.room.CoroutinesRoom$Companion$createFlow$1: java.util.concurrent.Callable $callable
androidx.room.Room: java.lang.String LOG_TAG
com.kiosoft2.common.cache.TaskCacheManager: com.kiosoft2.common.task.util.TaskInfoRepository taskInfoRepository
com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper$onActivityCreated$1$1$1: android.app.Activity $activity
com.kiosoft2.api.type.ExpressionType: com.kiosoft2.api.type.ExpressionType equal
com.kiosoft2.api.statement.SelectSQL: java.lang.Class resultType
androidx.room.util.TableInfo$Index: java.util.List columns
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$attachedDbs$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$attachedDbs$1 INSTANCE
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setMaxSqlCacheSize$1: int $cacheSize
androidx.room.BuiltInTypeConverters$State: androidx.room.BuiltInTypeConverters$State[] $VALUES
com.kiosoft2.common.task.util.TimeUtil: com.kiosoft2.common.task.util.TimeUtil INSTANCE
androidx.room.RoomDatabase$beginTransaction$1: androidx.room.RoomDatabase this$0
androidx.room.RoomDatabase: int MAX_BIND_PARAMETER_CNT
kotlinx.coroutines.JobSupport: java.lang.Object _state
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1: androidx.room.RoomDatabase $this_startTransactionCoroutine
com.kiosoft2.common.task.util.TaskManager$isExistTask$1$1: com.kiosoft2.common.task.model.TaskInfo $it
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
androidx.room.Index$Order: androidx.room.Index$Order ASC
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
com.kiosoft2.common.task.util.TaskInfoRepository$getTaskList$2: com.kiosoft2.common.task.util.TaskInfoRepository this$0
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: java.lang.Object L$0
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
com.kiosoft2.common.cache.TaskCacheManager$getCacheTaskListByOwerClassName$2: int label
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: androidx.room.AutoCloser autoCloser
com.kiosoft2.common.cache.TaskCacheManager: com.tencent.mmkv.MMKV mmkv
kotlin.jvm.internal.Lambda: int arity
androidx.room.DatabaseConfiguration: boolean multiInstanceInvalidation
androidx.room.MultiInstanceInvalidationClient: java.util.concurrent.atomic.AtomicBoolean stopped
androidx.room.util.TableInfo: java.lang.String name
com.kiosoft2.testdemo.db.model.Book: java.lang.String name
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1: kotlinx.coroutines.CancellableContinuation $continuation
androidx.room.util.TableInfo$ForeignKeyWithSequence: int id
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1$job$1: androidx.room.RoomDatabase $this_invalidationTrackerFlow
com.kiosoft2.common.task.model.TaskInfo: java.lang.String annotationClassName
com.kiosoft2.common.task.util.TaskInfoRepository$insertTaskInfoList$2: com.kiosoft2.common.task.util.TaskInfoRepository this$0
com.kiosoft2.common.cache.db.dao.TaskInfoDao$insertOrUpdateTaskInfo$1: java.lang.Object L$0
androidx.room.InvalidationTracker$WeakObserver: java.lang.ref.WeakReference delegateRef
com.kiosoft2.api.statement.SQL: com.kiosoft2.api.type.OpType opType
androidx.room.ForeignKey$Companion: int CASCADE
androidx.room.ColumnInfo: int TEXT
androidx.room.RoomWarnings: java.lang.String RELATION_TYPE_MISMATCH
com.kiosoft2.testdemo.db.model.User: long id
androidx.room.util.FtsTableInfo: java.lang.String[] FTS_OPTIONS
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property name
androidx.room.migration.Migration: int startVersion
com.kiosoft2.api.type.OpType: com.kiosoft2.api.type.OpType[] $VALUES
com.kiosoft2.common.click.aspect.InterceptSingleTimeAspectJ: android.util.LruCache lruCache
com.kiosoft2.api.aparameter.AParameterManager: com.kiosoft2.api.aparameter.AParameterManager$Companion Companion
androidx.lifecycle.LiveData: androidx.arch.core.internal.SafeIterableMap mObservers
androidx.room.RoomDatabase$Builder: java.util.concurrent.Executor queryExecutor
com.kiosoft2.common.task.model.TaskInfo: boolean isCacheResumeStart
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1$1: kotlinx.coroutines.CancellableContinuation $continuation
androidx.room.util.TableInfo: java.util.Map columns
androidx.room.SQLiteCopyOpenHelper: java.util.concurrent.Callable copyFromInputStream
androidx.room.Index$Order: androidx.room.Index$Order DESC
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode TRUNCATE
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$update$1: java.lang.Object[] $whereArgs
androidx.room.RoomSQLiteQuery: double[] doubleBindings
com.kiosoft2.common.task.util.TaskInfoRepository$insertTaskInfo$2: com.kiosoft2.common.task.util.TaskInfoRepository this$0
com.kiosoft2.testdemo.db.model.User: java.lang.String name
com.kiosoft2.api.builder.QueryBuilder: com.kiosoft2.api.statement.SelectSQL sql
androidx.room.RoomDatabase$Builder: java.util.concurrent.Callable copyFromInputStream
com.kiosoft2.api.helper.SQLiteHelper: android.util.ArrayMap insertionAdapterMap
androidx.room.QueryInterceptorStatement: java.lang.String sqlStatement
androidx.room.ForeignKey: int CASCADE
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$inTransaction$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$inTransaction$1 INSTANCE
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$2: java.lang.String $sql
androidx.lifecycle.LiveData: java.lang.Object NOT_SET
com.kiosoft2.common.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
androidx.room.SharedSQLiteStatement: androidx.room.RoomDatabase database
androidx.room.InvalidationTracker: androidx.room.InvalidationTracker$Companion Companion
androidx.room.ForeignKey$Companion: int SET_NULL
androidx.room.DatabaseConfiguration: java.util.Set migrationNotRequiredFrom
com.kiosoft2.common.cache.TaskCacheManager$cacheTask$1: com.kiosoft2.common.task.model.TaskInfo $task
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$16: androidx.room.RoomSQLiteQuery val$_statement
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: kotlinx.coroutines.channels.Channel $resultChannel
androidx.room.RoomSQLiteQuery: int argCount
com.kiosoft2.common.task.util.TaskInfoRepository: com.kiosoft2.common.cache.db.dao.TaskInfoDao taskInfoDao
androidx.room.paging.LimitOffsetDataSource: androidx.room.InvalidationTracker$Observer mObserver
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$13: com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl this$0
androidx.room.RoomWarnings: java.lang.String AMBIGUOUS_COLUMN_IN_RESULT
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$1 INSTANCE
androidx.room.CoroutinesRoom$Companion$createFlow$1: java.lang.Object L$0
androidx.room.ColumnInfo$Companion: int TEXT
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$path$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$path$1 INSTANCE
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0: boolean isRepeat
com.kiosoft2.api.type.ExpressionType: com.kiosoft2.api.type.ExpressionType notExists
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$15: androidx.room.RoomSQLiteQuery val$_statement
com.kiosoft2.common.task.model.ParameterInfo: java.lang.String value
com.kiosoft2.common.cache.TaskCacheManager$getCacheTaskListByOwerClassNameAndTaskId$2: int label
com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper$onActivityCreated$1: android.app.Activity $activity
androidx.room.ForeignKey$Companion: androidx.room.ForeignKey$Companion $$INSTANCE
androidx.sqlite.db.SupportSQLiteOpenHelper$Callback: java.lang.String TAG
androidx.room.InvalidationTracker: java.lang.String CREATE_TRACKING_TABLE_SQL
androidx.room.QueryInterceptorStatement: androidx.sqlite.db.SupportSQLiteStatement delegate
androidx.room.DatabaseConfiguration: java.io.File copyFromFile
androidx.room.util.ViewInfo: java.lang.String name
androidx.room.RoomDatabase$Builder: java.util.List typeConverters
androidx.room.paging.LimitOffsetDataSource: java.lang.String mLimitOffsetQuery
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
com.kiosoft2.common.click.aspect.InterceptClickAspectJ: long lastTime
androidx.room.RoomTrackingLiveData: androidx.room.RoomDatabase database
androidx.room.InvalidationLiveDataContainer: java.util.Set liveDataSet
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.testdemo.db.model.User_$Companion Companion
androidx.room.DatabaseConfiguration: androidx.room.RoomDatabase$JournalMode journalMode
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap
androidx.room.FtsOptions: androidx.room.FtsOptions INSTANCE
androidx.room.DatabaseConfiguration: java.util.concurrent.Executor transactionExecutor
androidx.room.RoomDatabase$Builder: java.io.File copyFromFile
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveSegment
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$2: int $version
androidx.room.RoomOpenHelper: androidx.room.DatabaseConfiguration configuration
androidx.room.OnConflictStrategy$Companion: int FAIL
com.kiosoft2.api.Property: java.lang.String javaName
com.kiosoft2.common.task.annotions.TaskThread: com.kiosoft2.common.task.annotions.TaskThread[] $VALUES
androidx.room.ColumnInfo$Companion: androidx.room.ColumnInfo$Companion $$INSTANCE
androidx.room.MultiInstanceInvalidationClient: androidx.room.InvalidationTracker$Observer observer
com.kiosoft2.api.builder.Query: androidx.room.RoomDatabase db
androidx.room.InvalidationTracker: java.lang.String SELECT_UPDATED_TABLES_SQL
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: java.util.concurrent.Callable $callable
com.kiosoft2.api.aparameter.AParameterManager: java.lang.String APT_PACKAGE_DEFULT
com.kiosoft2.common.task.util.TaskInfoRepository$insertTaskInfoList$2: java.util.List $taskInfoList
com.kiosoft2.api.builder.UpdateBuilder: com.kiosoft2.api.statement.UpdateSQL sql
com.kiosoft2.api.Property: com.kiosoft2.api.type.FuncType funcType
androidx.room.AmbiguousColumnResolver$resolve$1$1: java.util.List $mappingMatches
androidx.room.FtsOptions: java.lang.String TOKENIZER_ICU
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
androidx.room.ColumnInfo: int REAL
androidx.room.InvalidationTracker: java.lang.String TABLE_ID_COLUMN_NAME
com.kiosoft2.testdemo.db.model.Book_: java.lang.String tableName_
com.kiosoft2.common.router.BundleManager: java.lang.Class page
androidx.room.AutoCloser: long lastDecrementRefCountTimeStamp
androidx.room.OnConflictStrategy$Companion: int NONE
androidx.room.RoomDatabase$Builder: java.util.concurrent.Executor transactionExecutor
androidx.room.Room: java.lang.String MASTER_TABLE_NAME
androidx.room.util.TableInfo$Index: java.lang.String DEFAULT_PREFIX
androidx.room.ColumnInfo$Companion: int LOCALIZED
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.kiosoft2.common.router.BundleManager: android.os.Bundle bundle
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$10: com.kiosoft2.common.task.model.TaskInfo val$taskInfo
com.kiosoft2.common.task.util.TaskInfoRepository$insertTaskInfo$2: com.kiosoft2.common.task.model.TaskInfo $taskInfo
androidx.room.MultiInstanceInvalidationService$binder$1: androidx.room.MultiInstanceInvalidationService this$0
androidx.room.ColumnInfo$Companion: java.lang.String INHERIT_FIELD_NAME
androidx.room.RoomOpenHelper: androidx.room.RoomOpenHelper$Delegate delegate
com.kiosoft2.api.type.FuncType: com.kiosoft2.api.type.FuncType lower
com.kiosoft2.common.task.aspect.DelayedTaskAspectJ$aroundJoinPoint$1: org.aspectj.lang.ProceedingJoinPoint $joinPoint
androidx.room.DatabaseConfiguration: boolean allowMainThreadQueries
com.kiosoft2.api.statement.element.OrderBy: com.kiosoft2.api.type.OrderByType type
androidx.room.InvalidationTracker: java.lang.String[] TRIGGERS
com.kiosoft2.common.bus.LiveDataBus: com.kiosoft2.common.bus.LiveDataBus$Companion Companion
com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper$onActivityCreated$1: java.lang.Object L$0
androidx.room.Room: java.lang.String CURSOR_CONV_SUFFIX
com.kiosoft2.api.builder.ChildQuery: com.kiosoft2.api.statement.SelectSQL sql
com.alibaba.fastjson2.writer.FieldWriterObject: java.lang.Class initValueClass
androidx.room.RoomOpenHelper: java.lang.String identityHash
androidx.room.util.TableInfo: int CREATED_FROM_DATABASE
com.kiosoft2.common.task.model.ParameterInfo: java.lang.Class parameterType
com.kiosoft2.common.cache.TaskCacheManager$getCacheTaskListByOwerClassName$2: java.lang.String $owerClassName
com.kiosoft2.common.task.model.MethodInfo: java.util.List args
androidx.room.AutoCloser: boolean manuallyClosed
androidx.room.FtsOptions$Order: androidx.room.FtsOptions$Order ASC
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$update$1: android.content.ContentValues $values
kotlinx.coroutines.DefaultExecutor: int debugStatus
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1: kotlinx.coroutines.channels.Channel $observerChannel
androidx.room.CoroutinesRoom$Companion$createFlow$1$1: java.util.concurrent.Callable $callable
com.kiosoft2.common.task.util.TaskInfoRepository$getTaskInfoByTaskId$2: java.lang.String $taskId
androidx.room.RoomDatabase: androidx.sqlite.db.SupportSQLiteOpenHelper internalOpenHelper
androidx.room.AmbiguousColumnResolver$resolve$1$1: java.lang.String[] $mapping
androidx.room.RoomWarnings: java.lang.String UNNECESSARY_NULLABILITY_IN_DAO_RETURN_TYPE
androidx.room.RoomDatabase: androidx.sqlite.db.SupportSQLiteDatabase mDatabase
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1$1: java.lang.Object L$0
androidx.room.RoomOpenHelper: androidx.room.RoomOpenHelper$Companion Companion
androidx.room.MultiInstanceInvalidationClient: java.lang.String name
androidx.room.AutoClosingRoomOpenHelperFactory: androidx.sqlite.db.SupportSQLiteOpenHelper$Factory delegate
androidx.room.ColumnInfo: int RTRIM
androidx.room.ColumnInfo: int NOCASE
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$2: long $numBytes
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$PrepackagedDatabaseCallback prepackagedDatabaseCallback
androidx.room.InvalidationTracker: androidx.room.InvalidationLiveDataContainer invalidationLiveDataContainer
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1$1: int label
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property a2
androidx.room.AutoCloser: androidx.room.AutoCloser$Companion Companion
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pokeOpen$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pokeOpen$1 INSTANCE
com.kiosoft2.common.BuildConfig: boolean DEBUG
androidx.room.RoomTrackingLiveData: androidx.room.InvalidationTracker$Observer observer
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
com.kiosoft2.testdemo.db.model.Book_: java.util.List compositePK_
androidx.room.AmbiguousColumnResolver$Solution: androidx.room.AmbiguousColumnResolver$Solution$Companion Companion
com.kiosoft2.testdemo.bus.impl.ILifecycleOwner: androidx.lifecycle.LifecycleRegistry lifecycleRegistry
androidx.room.ColumnInfo: int LOCALIZED
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object sendSegment
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$delete$1: java.lang.String $whereClause
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
com.kiosoft2.api.BuildConfig: java.lang.String BUILD_TYPE
com.kiosoft2.api.type.OpType: com.kiosoft2.api.type.OpType select
com.kiosoft2.api.type.FuncType: com.kiosoft2.api.type.FuncType count
com.kiosoft2.api.statement.DeleteSQL: com.kiosoft2.api.statement.element.Condition where
com.kiosoft2.api.type.ExpressionType: com.kiosoft2.api.type.ExpressionType like
androidx.room.ColumnInfo$Companion: int UNSPECIFIED
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: androidx.room.AutoCloser autoCloser
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
com.kiosoft2.common.cache.TaskCacheManager$getCacheTaskListByOwerClassNameAndTaskId$2: java.lang.String $owerClassName
com.kiosoft2.common.task.util.TaskReLoadUtil$reLoadStart$1: com.kiosoft2.common.task.interfaces.TaskReLoadCallback $callBack
androidx.room.RoomWarnings: java.lang.String INDEX_FROM_PARENT_IS_DROPPED
androidx.room.DatabaseConfiguration: androidx.room.RoomDatabase$MigrationContainer migrationContainer
androidx.room.ColumnInfo: int BINARY
androidx.room.SharedSQLiteStatement: kotlin.Lazy stmt$delegate
com.kiosoft2.api.statement.SelectSQL: com.kiosoft2.api.statement.element.Page page
com.kiosoft2.common.task.util.TaskInfoRepository$getCacheTaskListByOwerClassName$2: java.lang.String $owerClassName
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
com.kiosoft2.api.Property: java.lang.String timeFormat
kotlinx.coroutines.android.HandlerDispatcherKt: kotlinx.coroutines.android.HandlerDispatcher Main
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1$observer$1: kotlinx.coroutines.channels.ProducerScope $$this$callbackFlow
androidx.room.TransactionExecutor: java.util.concurrent.Executor executor
androidx.room.ColumnInfo: int UNSPECIFIED
androidx.room.InvalidationTracker$ObservedTableTracker: int REMOVE
androidx.room.RoomTrackingLiveData: java.util.concurrent.atomic.AtomicBoolean registeredObserver
com.kiosoft2.api.builder.JoinBuilder: com.kiosoft2.api.statement.element.Join join
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1$1: androidx.room.RoomDatabase $this_startTransactionCoroutine
com.kiosoft2.common.cache.TaskCacheManager$removeCacheTask$2: int label
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0: java.util.concurrent.TimeUnit unit
androidx.room.ColumnInfo$Companion: int UNICODE
androidx.room.paging.LimitOffsetDataSource: boolean mInTransaction
androidx.room.AmbiguousColumnResolver$resolve$1$1: int $mappingIndex
com.kiosoft2.api.type.ExpressionType: com.kiosoft2.api.type.ExpressionType in
androidx.room.ColumnInfo$Companion: java.lang.String VALUE_UNSPECIFIED
androidx.room.FtsOptions$Order: androidx.room.FtsOptions$Order[] $VALUES
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_DelayedTask$0: boolean isReStart
androidx.room.RoomMasterTable: java.lang.String CREATE_QUERY
com.kiosoft2.api.statement.SelectSQL: java.util.List columns
com.kiosoft2.common.task.util.TaskManager$removeTask$2$1: com.kiosoft2.common.task.model.TaskInfo $it
com.kiosoft2.api.helper.SQLiteHelper$3: com.kiosoft2.api.Entity val$entity
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$start$2: java.lang.Object $object
com.kiosoft2.testdemo.db.model.Book_: java.util.List allProperties_
androidx.room.TransactionExecutor: java.lang.Runnable active
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property a3
kotlin.jvm.internal.CallableReference: java.lang.Class owner
androidx.room.QueryInterceptorOpenHelper: java.util.concurrent.Executor queryCallbackExecutor
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$18: int[] $SwitchMap$com$kiosoft2$common$task$annotions$TaskThread
androidx.room.RoomDatabase$Builder: androidx.sqlite.db.SupportSQLiteOpenHelper$Factory factory
androidx.room.RoomWarnings: java.lang.String DOES_NOT_IMPLEMENT_EQUALS_HASHCODE
androidx.room.RoomSQLiteQuery: java.lang.String[] stringBindings
com.kiosoft2.api.type.ExpressionType: com.kiosoft2.api.type.ExpressionType contains
com.kiosoft2.api.type.FuncType: com.kiosoft2.api.type.FuncType max
androidx.room.EntityUpsertionAdapter: androidx.room.EntityInsertionAdapter insertionAdapter
androidx.room.RoomMasterTable: java.lang.String COLUMN_IDENTITY_HASH
androidx.room.QueryInterceptorOpenHelper: androidx.sqlite.db.SupportSQLiteOpenHelper delegate
androidx.room.RoomDatabase$Builder: boolean allowMainThreadQueries
androidx.room.SQLiteCopyOpenHelper$createFrameworkOpenHelper$configuration$1: int $version
androidx.room.RoomWarnings: java.lang.String MISSING_JAVA_TMP_DIR
com.kiosoft2.api.type.ExpressionType: com.kiosoft2.api.type.ExpressionType startWith
androidx.room.CoroutinesRoom$Companion$createFlow$1: androidx.room.RoomDatabase $db
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1$job$1: kotlinx.coroutines.channels.ProducerScope $$this$callbackFlow
androidx.room.InvalidationTracker$ObservedTableTracker: androidx.room.InvalidationTracker$ObservedTableTracker$Companion Companion
androidx.room.AutoCloser: androidx.sqlite.db.SupportSQLiteDatabase delegateDatabase
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setForeignKeyConstraintsEnabled$1: boolean $enabled
com.kiosoft2.common.task.model.TaskInfo: long endTimeMillis
androidx.room.ColumnInfo: int UNDEFINED
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property a8
com.kiosoft2.api.statement.element.OrderBy: com.kiosoft2.api.Property[] property
androidx.room.RoomDatabase$Builder: boolean allowDestructiveMigrationOnDowngrade
androidx.room.RoomDatabase$Builder: android.content.Context context
com.kiosoft2.testdemo.db.model.User: java.lang.Float a6
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
androidx.room.RoomSQLiteQuery: int DESIRED_POOL_SIZE
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$insert$1: java.lang.String $table
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$8: com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl this$0
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1: kotlin.coroutines.CoroutineContext $context
androidx.room.AmbiguousColumnResolver$resolve$1$2: java.util.List $mappingMatches
androidx.room.CoroutinesRoom$Companion$execute$2: java.util.concurrent.Callable $callable
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$start$1: com.kiosoft2.common.task.model.TaskInfo $taskInfo
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0: boolean isCacheResumeStart
com.kiosoft2.testdemo.db.model.Book_: com.kiosoft2.testdemo.db.model.Book_$Companion Companion
com.kiosoft2.common.task.util.TaskInfoRepository$updateTaskInfoList$2: int label
androidx.room.QueryInterceptorDatabase: androidx.sqlite.db.SupportSQLiteDatabase delegate
androidx.room.Room: androidx.room.Room INSTANCE
androidx.room.AmbiguousColumnResolver$resolve$1$2: int $mappingIndex
com.kiosoft2.common.task.helper.RecurringTaskHelper$start$1: com.kiosoft2.common.task.interfaces.JoinPointRunCallback $callBack
kotlinx.coroutines.android.HandlerContext: boolean invokeImmediately
com.kiosoft2.api.type.FuncType: com.kiosoft2.api.type.FuncType strFTime
com.kiosoft2.api.builder.DeleteBuilder: androidx.room.RoomDatabase db
com.kiosoft2.common.router.ARouterOperator: com.kiosoft2.common.router.ARouterOperator$Companion Companion
com.kiosoft2.common.cache.TaskCacheManager$getCacheTaskListByOwerClassNameAndTaskId$2: java.lang.String $taskId
androidx.room.ColumnInfo$Companion: int BLOB
androidx.room.IMultiInstanceInvalidationService$Stub$Proxy: android.os.IBinder mRemote
kotlinx.coroutines.android.HandlerContext: android.os.Handler handler
com.kiosoft2.common.cache.TaskCacheManager$cacheTask$1: int label
com.kiosoft2.api.statement.element.Condition: java.util.List expressions
com.kiosoft2.common.cache.TaskCacheManager: com.kiosoft2.common.cache.TaskCacheManager INSTANCE
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1: kotlinx.coroutines.CancellableContinuation $continuation$inlined
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
androidx.room.InvalidationTracker$ObserverWrapper: java.lang.String[] tableNames
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isWriteAheadLoggingEnabled$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isWriteAheadLoggingEnabled$1 INSTANCE
androidx.room.RoomDatabase: java.util.Map typeConverters
com.kiosoft2.testdemo.db.model.Book_: com.kiosoft2.api.Property id
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property a1
androidx.room.util.TableInfo$ForeignKey: java.util.List columnNames
com.kiosoft2.api.builder.OpBuilder: androidx.room.RoomDatabase db
com.kiosoft2.common.cache.db.dao.TaskInfoDao$insertOrUpdateTaskInfo$1: java.lang.Object result
androidx.room.rxjava3.RxRoom: java.lang.Object NOTHING
androidx.room.RoomDatabase: java.lang.ThreadLocal suspendingTransactionId
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
androidx.room.IMultiInstanceInvalidationCallback: java.lang.String DESCRIPTOR
androidx.room.RoomDatabase: boolean allowMainThreadQueries
com.kiosoft2.api.helper.SQLiteHelper$1: com.kiosoft2.api.Entity val$entity
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1$observer$1: java.util.concurrent.atomic.AtomicBoolean $ignoreInvalidation
kotlinx.coroutines.UndispatchedCoroutine: boolean threadLocalIsSet
com.kiosoft2.api.builder.JoinBuilder: java.util.List joinList
androidx.room.RoomWarnings: java.lang.String INDEX_FROM_PARENT_FIELD_IS_DROPPED
androidx.room.AmbiguousColumnResolver: androidx.room.AmbiguousColumnResolver INSTANCE
com.kiosoft2.api.type.FuncType: com.kiosoft2.api.type.FuncType date
androidx.room.RoomDatabase$Builder: java.util.concurrent.Executor queryCallbackExecutor
androidx.room.ForeignKey$Companion: int SET_DEFAULT
androidx.room.IMultiInstanceInvalidationService$Stub: int TRANSACTION_broadcastInvalidation
androidx.room.IMultiInstanceInvalidationService$Stub: int TRANSACTION_registerCallback
androidx.room.OnConflictStrategy: int ABORT
androidx.room.RoomDatabase: java.util.Map autoMigrationSpecs
com.kiosoft2.common.task.util.TaskReLoadUtil$reLoadStart$2: com.kiosoft2.common.task.model.TaskInfo $taskInfo
androidx.room.AmbiguousColumnResolver$Solution: java.util.List matches
com.kiosoft2.common.task.util.TaskInfoRepository$updateTaskInfoList$2: com.kiosoft2.common.task.util.TaskInfoRepository this$0
com.kiosoft2.common.task.util.TimeUtil$WhenMappings: int[] $EnumSwitchMapping$0
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
com.kiosoft2.common.click.ClickExe: com.kiosoft2.common.click.ClickExe INSTANCE
com.kiosoft2.api.type.OrderByType: com.kiosoft2.api.type.OrderByType asc
androidx.room.RoomTrackingLiveData: java.lang.Runnable refreshRunnable
com.kiosoft2.api.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.kiosoft2.testdemo.db.model.User: long a2
androidx.room.InvalidationTracker: java.util.Map viewTables
com.alibaba.fastjson2.util.TypeUtils$Cache: char[] chars
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$13: java.lang.String val$taskId
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _next
androidx.room.InvalidationTracker: java.lang.Runnable refreshRunnable
androidx.room.RoomWarnings: java.lang.String MISMATCHED_GETTER
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeInsert$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeInsert$1 INSTANCE
com.kiosoft2.api.statement.element.Function: com.kiosoft2.api.type.FuncType type
androidx.room.QueryInterceptorProgram: java.util.List bindArgsCache
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$execute$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$execute$1 INSTANCE
com.kiosoft2.common.task.model.TaskInfo: java.util.concurrent.TimeUnit unit
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: androidx.room.AutoCloser autoCloser
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_DelayedTask$0: boolean isCacheResumeStart
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0: long time
androidx.room.SQLiteCopyOpenHelper: android.content.Context context
com.kiosoft2.common.cache.TaskCacheManager$cacheTask$1$1: com.kiosoft2.common.task.model.TaskInfo $task
androidx.room.InvalidationTracker$WeakObserver: androidx.room.InvalidationTracker tracker
com.kiosoft2.api.type.ExpressionType: com.kiosoft2.api.type.ExpressionType exists
com.kiosoft2.common.task.util.TaskInfoRepository$updateTaskInfo$2: com.kiosoft2.common.task.model.TaskInfo $taskInfo
androidx.room.util.TableInfo$Column: boolean notNull
androidx.room.InvalidationTracker: java.lang.String RESET_UPDATED_TABLES_SQL
androidx.room.InvalidationTracker$ObservedTableTracker: boolean[] triggerStates
androidx.room.QueryInterceptorDatabase: androidx.room.RoomDatabase$QueryCallback queryCallback
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$9: com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl this$0
com.kiosoft2.api.helper.SQLiteHelper$2: java.lang.String val$sql
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$cancelTask$1: java.lang.String $taskId
com.kiosoft2.common.click.utils.ClickUtil: long click_interval_time
com.kiosoft2.api.helper.SQLiteHelper: android.util.ArrayMap updateAdapterMap
androidx.room.util.FtsTableInfo: java.util.Set columns
com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper$onActivityCreated$1: java.lang.Object L$1
androidx.room.OnConflictStrategy$Companion: int REPLACE
com.kiosoft2.api.type.ExpressionType: com.kiosoft2.api.type.ExpressionType isNull
com.kiosoft2.testdemo.db.model.User_: java.lang.Class entityClass_
androidx.room.AmbiguousColumnResolver$Solution: int coverageOffset
androidx.room.FtsOptions: java.lang.String TOKENIZER_UNICODE61
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$16: com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl this$0
com.kiosoft2.api.Property: java.lang.String defaultValue
androidx.room.paging.LimitOffsetDataSource: java.util.concurrent.atomic.AtomicBoolean mRegisteredObserver
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.kiosoft2.common.task.util.TaskManager$removeTask$2$1: int label
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$14: androidx.room.RoomSQLiteQuery val$_statement
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$update$1: java.lang.String $whereClause
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: androidx.room.RoomDatabase __db
com.kiosoft2.testdemo.db.model.User: int age
kotlin.jvm.internal.FunctionReference: int flags
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext immediate
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_DelayedTask$0: long initialDelay
androidx.room.RoomDatabase: java.util.concurrent.locks.ReentrantReadWriteLock readWriteLock
androidx.sqlite.db.SupportSQLiteOpenHelper$Callback: int version
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: java.util.ArrayList binds
androidx.room.RoomDatabase$Builder: java.util.concurrent.TimeUnit autoCloseTimeUnit
androidx.room.util.TableInfo$Index: boolean unique
com.kiosoft2.common.bus.LiveDataBus$bus$2: com.kiosoft2.common.bus.LiveDataBus$bus$2 INSTANCE
androidx.room.EntityUpsertionAdapterKt: java.lang.String ErrorMsg
androidx.room.util.CursorUtil$wrapMappedColumns$2: int[] $mapping
com.kiosoft2.common.bus.LiveDataBus: kotlin.Lazy bus$delegate
androidx.room.RoomTrackingLiveData: androidx.room.InvalidationLiveDataContainer container
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
androidx.room.MultiInstanceInvalidationClient$callback$1: androidx.room.MultiInstanceInvalidationClient this$0
com.kiosoft2.api.statement.element.Condition: boolean isChildCondition
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$1: androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$1 INSTANCE
androidx.room.RoomSQLiteQuery: int STRING
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.room.QueryInterceptorStatement: java.lang.String simpleQueryForString()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
com.kiosoft2.api.Property: com.kiosoft2.api.Property time()
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition in(java.lang.Integer[])
com.kiosoft2.common.thead.utils.AppExecutors: <clinit>()
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder fallbackToDestructiveMigration()
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
com.kiosoft2.common.task.util.TimeUtil: long conventTimeByUnit(long,java.util.concurrent.TimeUnit)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$2: java.lang.String createQuery()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: int executeUpdateDelete()
androidx.room.SQLiteCopyOpenHelper: java.lang.String getDatabaseName()
com.kiosoft2.common.click.aspect.InterceptClickAspectJ: InterceptClickAspectJ()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pokeOpen$1: java.lang.Object invoke(java.lang.Object)
androidx.room.util.TableInfo$ForeignKeyWithSequence: int getId()
androidx.room.AmbiguousColumnResolver$Solution: java.util.List getMatches()
com.kiosoft2.common.thead.aspect.InterceptIOThreadAspectJ: InterceptIOThreadAspectJ()
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$start$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.room.RoomDatabase$MigrationContainer: RoomDatabase$MigrationContainer()
com.kiosoft2.common.cache.db.dao.TaskInfoDao$insertOrUpdateTaskInfo$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode()
com.kiosoft2.api.Property: com.kiosoft2.api.Property max()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
androidx.appcompat.widget.ListPopupWindow$Api24Impl: int getMaxAvailableHeight(android.widget.PopupWindow,android.view.View,int,boolean)
com.kiosoft2.testdemo.db.model.User: void setSex(boolean)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)
com.tencent.mmkv.MMKV: double decodeDouble(long,java.lang.String,double)
com.kiosoft2.common.task.model.MethodInfo: java.lang.Class getOwerClassName()
com.kiosoft2.testdemo.db.model.Book_: void access$set_instance$cp(com.kiosoft2.testdemo.db.model.Book_)
androidx.room.RoomDatabase$JournalMode: <clinit>()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
kotlinx.coroutines.android.HandlerContext: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1: RoomDatabaseKt$invalidationTrackerFlow$1(boolean,androidx.room.RoomDatabase,java.lang.String[],kotlin.coroutines.Continuation)
com.kiosoft2.common.task.model.TaskInfo: void setOwerClassName(java.lang.String)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition less(com.kiosoft2.api.Property,byte[])
com.tencent.mmkv.MMKV: void trim()
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
androidx.core.widget.CompoundButtonCompat$Api23Impl: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
androidx.room.QueryInterceptorDatabase: boolean enableWriteAheadLogging()
kotlin.jvm.internal.PropertyReference: boolean isLateinit()
com.kiosoft2.common.task.util.TaskManager: boolean isExistTask(java.lang.Object,int,java.lang.Class)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.gson.reflect.TypeToken: int hashCode()
com.kiosoft2.testdemo.db.model.User: byte[] getA4()
androidx.room.DatabaseConfiguration: boolean isMigrationRequired(int,int)
androidx.lifecycle.LiveData: LiveData()
com.kiosoft2.common.task.util.TaskManager$removeTask$2$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.AmbiguousColumnResolver$ResultColumn: boolean equals(java.lang.Object)
androidx.room.AutoCloser: void setOnAutoCloseCallback$room_runtime_release(java.lang.Runnable)
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken getArray(java.lang.reflect.Type)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
androidx.room.InvalidationTracker: void getRefreshRunnable$annotations()
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View)
androidx.room.util.TableInfo: TableInfo(java.lang.String,java.util.Map,java.util.Set,java.util.Set)
com.kiosoft2.common.router.ARouterOperator$Companion$instance$2: java.lang.Object invoke()
androidx.room.RoomMasterTable: java.lang.String createInsertQuery(java.lang.String)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$attachedDbs$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$attachedDbs$1()
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.CoroutinesRoom$Companion$execute$4$1: void invoke(java.lang.Throwable)
com.kiosoft2.api.RoomOperator: com.kiosoft2.api.RoomOperator db()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: <clinit>()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
com.kiosoft2.api.helper.SQLiteHelper$3: SQLiteHelper$3(androidx.room.RoomDatabase,java.lang.String,com.kiosoft2.api.Entity)
androidx.room.util.CursorUtil: android.database.Cursor copyAndClose(android.database.Cursor)
androidx.appcompat.widget.AppCompatTextView: void setAllCaps(boolean)
androidx.lifecycle.ViewModel: ViewModel()
androidx.room.QueryInterceptorDatabase: android.database.Cursor query(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
com.kiosoft2.api.type.OpType: com.kiosoft2.api.type.OpType[] values()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$needUpgrade$1: java.lang.Boolean invoke(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.RoomTrackingLiveData: java.util.concurrent.atomic.AtomicBoolean getInvalid()
com.google.common.base.VerifyException: VerifyException()
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$2: void bind(androidx.sqlite.db.SupportSQLiteStatement,com.kiosoft2.common.task.model.TaskInfo)
androidx.room.Room: <clinit>()
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode valueOf(java.lang.String)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$10: java.lang.Object call()
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
com.kiosoft2.encrypt.EncryptServiceImpl: com.kiosoft2.encrypt.TEstEntry getTEstEntry()
com.kiosoft2.api.builder.SetBuilder: com.kiosoft2.api.builder.UpdateBuilder build()
com.kiosoft2.common.thead.utils.AppExecutors$InstanceHolder: <clinit>()
com.kiosoft2.common.autoservice.aspect.TaskServiceBindAspect: TaskServiceBindAspect()
androidx.room.EntityUpsertionAdapter: void upsert(java.lang.Object)
androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
com.kiosoft2.common.click.aspect.InterceptSingleTimeAspectJ: void access$setLruCache$cp(android.util.LruCache)
com.kiosoft2.common.task.annotions.TaskThread: <clinit>()
androidx.room.rxjava3.RxRoom$2: void onInvalidated(java.util.Set)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$1()
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_DelayedTask$0: long initialDelay()
androidx.appcompat.widget.AppCompatToggleButton: void setAllCaps(boolean)
androidx.room.AmbiguousColumnResolver$ResultColumn: androidx.room.AmbiguousColumnResolver$ResultColumn copy(java.lang.String,int)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition regExp(java.lang.String)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: void access$doBinds(androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement,androidx.sqlite.db.SupportSQLiteStatement)
androidx.room.RenameColumn$Entries: androidx.room.RenameColumn[] value()
androidx.lifecycle.LiveData: void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: void doBinds(androidx.sqlite.db.SupportSQLiteStatement)
com.kiosoft2.common.task.aspect.DelayedTaskAspectJ: DelayedTaskAspectJ()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
com.kiosoft2.api.Property: com.kiosoft2.api.Property formatTime(java.lang.String)
androidx.room.SQLiteCopyOpenHelper: androidx.sqlite.db.SupportSQLiteOpenHelper getDelegate()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: java.lang.Object getCacheTaskListByOwerClassNameAndTaskId(java.lang.String,java.lang.String,kotlin.coroutines.Continuation)
androidx.room.MultiInstanceInvalidationService: android.os.RemoteCallbackList getCallbackList$room_runtime_release()
com.kiosoft2.api.type.JoinType: com.kiosoft2.api.type.JoinType[] values()
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName: androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName valueOf(java.lang.String)
com.google.gson.reflect.TypeToken: java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[])
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition less(com.kiosoft2.api.Property,java.lang.String)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition isNull(com.kiosoft2.api.builder.ChildQuery)
androidx.room.InvalidationTracker: void onAutoCloseCallback()
com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper$onActivityCreated$1$1$1: void onReLoadStart(com.kiosoft2.common.task.model.TaskInfo)
androidx.room.InvalidationTracker: void setCleanupStatement$room_runtime_release(androidx.sqlite.db.SupportSQLiteStatement)
androidx.room.AmbiguousColumnResolver: AmbiguousColumnResolver()
com.kiosoft2.testdemo.db.model.Book: java.lang.String getName()
androidx.room.RoomDatabase: androidx.sqlite.db.SupportSQLiteOpenHelper createOpenHelper(androidx.room.DatabaseConfiguration)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition equal(com.kiosoft2.api.builder.ChildQuery,long)
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
com.tencent.mmkv.MMKV: boolean decodeBool(long,java.lang.String,boolean)
com.kiosoft2.common.task.model.TaskInfo: java.util.concurrent.TimeUnit getUnit()
com.kiosoft2.api.statement.element.Expression: Expression(com.kiosoft2.api.Property,com.kiosoft2.api.type.ExpressionType)
androidx.room.CoroutinesRoom$Companion: java.lang.Object execute(androidx.room.RoomDatabase,boolean,android.os.CancellationSignal,java.util.concurrent.Callable,kotlin.coroutines.Continuation)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition greater(com.kiosoft2.api.builder.ChildQuery,java.lang.String)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDatabaseIntegrityOk$1: <clinit>()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeSqliteStatementWithRefCount$1: java.lang.Object invoke(java.lang.Object)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notEqual(com.kiosoft2.api.builder.ChildQuery,boolean)
androidx.room.MultiInstanceInvalidationService$binder$1: void broadcastInvalidation(int,java.lang.String[])
com.kiosoft2.common.router.ARouterOperator: ARouterOperator(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.room.AmbiguousColumnResolver$Solution: androidx.room.AmbiguousColumnResolver$Solution access$getNO_SOLUTION$cp()
kotlin.jvm.internal.CallableReference: java.lang.String getName()
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
androidx.room.InvalidationTracker$ObservedTableTracker: boolean onRemoved(int[])
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
androidx.room.QueryInterceptorStatement: void saveArgsToCache(int,java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setDefaultLocales(androidx.core.os.LocaleListCompat)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition in(com.kiosoft2.api.builder.ChildQuery,java.lang.Integer[])
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition greaterOrEqual(com.kiosoft2.api.builder.ChildQuery,java.util.Date)
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
com.kiosoft2.api.dao.Dao: java.lang.Long[] save(java.lang.Object[])
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
com.google.gson.reflect.TypeToken: TypeToken()
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$2: java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase)
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$reStartTask$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.room.Fts4: java.lang.Class contentEntity()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void setForeignKeyConstraintsEnabled(boolean)
com.kiosoft2.api.builder.ChildQuery: com.kiosoft2.api.builder.ChildQuery avg(com.kiosoft2.api.Property)
androidx.room.CoroutinesRoom: <clinit>()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.kiosoft2.common.task.model.MethodInfo: void setArgs(java.util.List)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
androidx.room.CoroutinesRoom$Companion: kotlinx.coroutines.flow.Flow createFlow(androidx.room.RoomDatabase,boolean,java.lang.String[],java.util.concurrent.Callable)
com.kiosoft2.common.cache.TaskCacheManager$getCacheTaskListByOwerClassName$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.jvm.internal.MutablePropertyReference1: kotlin.reflect.KProperty$Getter getGetter()
androidx.room.QueryInterceptorStatement: void bindString(int,java.lang.String)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: androidx.room.EntityInsertionAdapter access$300(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl)
com.kiosoft2.api.builder.OpBuilder: java.util.List findAll()
androidx.room.RoomDatabase$MigrationContainer: boolean contains(int,int)
com.kiosoft2.api.statement.element.Expression: com.kiosoft2.api.statement.element.Expression newValueProperty(com.kiosoft2.api.Property,com.kiosoft2.api.type.ExpressionType,java.lang.Object[])
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.room.RoomMasterTable: <clinit>()
androidx.room.InvalidationTracker$refreshRunnable$1: InvalidationTracker$refreshRunnable$1(androidx.room.InvalidationTracker)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition equal(com.kiosoft2.api.builder.ChildQuery,double)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$1: java.lang.Boolean invoke(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.android.HandlerDispatcherKt$awaitFrameSlowPath$lambda$3$$inlined$Runnable$1: void run()
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
com.kiosoft2.common.task.util.TaskManager$removeTask$2$1: TaskManager$removeTask$2$1(com.kiosoft2.common.task.model.TaskInfo,kotlin.coroutines.Continuation)
androidx.room.RoomDatabase$MigrationContainer: void addMigrations(java.util.List)
androidx.room.MultiInstanceInvalidationClient: void removeObserverRunnable$lambda$2(androidx.room.MultiInstanceInvalidationClient)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition between(java.util.Date,java.util.Date)
androidx.activity.ComponentActivity: void setContentView(android.view.View)
androidx.room.QueryInterceptorDatabase: void beginTransactionWithListener$lambda$2(androidx.room.QueryInterceptorDatabase)
androidx.room.QueryInterceptorDatabase: boolean yieldIfContendedSafely()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.AppCompatToggleButton: void setEmojiCompatEnabled(boolean)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition less(com.kiosoft2.api.builder.ChildQuery,com.kiosoft2.api.builder.ChildQuery)
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0: com.kiosoft2.common.task.annotions.TaskThread threadType()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDbLockedByCurrentThread$1: java.lang.Object get(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
com.kiosoft2.testdemo.db.model.User: void setA3(byte)
androidx.appcompat.widget.AppCompatCheckBox: void setEmojiCompatEnabled(boolean)
com.kiosoft2.common.task.annotions.TaskThread: com.kiosoft2.common.task.annotions.TaskThread valueOf(java.lang.String)
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$reStartTask$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void endTransaction()
com.kiosoft2.api.statement.element.Condition: void addWhere(com.kiosoft2.api.statement.element.Condition)
com.kiosoft2.api.builder.JoinBuilder: com.kiosoft2.api.builder.JoinBuilder crossJoin(com.kiosoft2.api.Entity)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$insert$1: java.lang.Object invoke(java.lang.Object)
kotlin.jvm.internal.PropertyReference: PropertyReference()
com.tencent.mmkv.MMKV: long decodeLong(long,java.lang.String,long)
androidx.room.util.FtsTableInfo$Companion: androidx.room.util.FtsTableInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
com.google.gson.ToNumberPolicy: com.google.gson.ToNumberPolicy[] values()
io.reactivex.rxjava3.internal.disposables.EmptyDisposable: io.reactivex.rxjava3.internal.disposables.EmptyDisposable valueOf(java.lang.String)
androidx.room.AutoCloser: void setDelegateDatabase$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.InvalidationTracker$ObservedTableTracker: int[] getTablesToSync()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
com.kiosoft2.api.dao.Dao: int update(java.util.List)
androidx.room.util.RelationUtil: void recursiveFetchLongSparseArray(androidx.collection.LongSparseArray,boolean,kotlin.jvm.functions.Function1)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: void deactivate()
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
com.kiosoft2.api.builder.OpBuilder: java.util.List insert(java.util.Collection)
androidx.room.Fts4: java.lang.String languageId()
com.kiosoft2.common.cache.db.database.AppDataBase: com.kiosoft2.common.cache.db.dao.TaskInfoDao getTaskInfoDao()
com.kiosoft2.common.task.model.TaskInfo: boolean equals(java.lang.Object)
kotlinx.coroutines.android.HandlerDispatcher: HandlerDispatcher(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
androidx.room.QueryInterceptorProgram: void bindLong(int,long)
androidx.room.MultiInstanceInvalidationService: android.os.IBinder onBind(android.content.Intent)
com.kiosoft2.api.builder.Query: java.util.List find()
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getAdjustedDefault()
androidx.room.util.TableInfo$Companion: TableInfo$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.lifecycle.LiveData: boolean hasActiveObservers()
androidx.room.QueryInterceptorStatement: void executeInsert$lambda$2(androidx.room.QueryInterceptorStatement)
com.google.gson.reflect.TypeToken: boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)
androidx.room.RoomSQLiteQuery: void copyArgumentsFrom(androidx.room.RoomSQLiteQuery)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean moveToNext()
kotlin.jvm.internal.PropertyReference1: PropertyReference1()
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.EntityInsertionAdapter: void insert(java.lang.Object[])
androidx.room.SharedSQLiteStatement: void release(androidx.sqlite.db.SupportSQLiteStatement)
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: java.lang.Object removeTaskInfoByOwerClassName(java.lang.String,kotlin.coroutines.Continuation)
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
androidx.room.InvalidationTracker: void notifyObserversByTableNames(java.lang.String[])
androidx.room.Database: boolean exportSchema()
androidx.appcompat.widget.AppCompatButton: void setFilters(android.text.InputFilter[])
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition lessOrEqual(long)
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1$1: java.lang.Object invoke()
androidx.room.migration.Migration: void migrate(androidx.sqlite.db.SupportSQLiteDatabase)
com.kiosoft2.common.task.annotions.RecurringTask: long period()
com.kiosoft2.api.statement.UpdateSQL: UpdateSQL(com.kiosoft2.api.Entity)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition less(com.kiosoft2.api.builder.ChildQuery,java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$reStartTask$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.room.CoroutinesRoom$Companion: CoroutinesRoom$Companion()
com.kiosoft2.common.task.util.TaskManager: void bindLifecycleOwner(androidx.lifecycle.LifecycleOwner)
androidx.core.view.ViewCompat$Api31Impl: void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener)
com.kiosoft2.common.click.ClickExe: void setSafeOnClickListener(android.view.View,kotlin.jvm.functions.Function1)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPaused(android.app.Activity)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: long executeInsert()
com.kiosoft2.api.dao.Dao: java.util.List insert(java.util.List)
com.tencent.mmkv.MMKV: boolean isFileValid(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
androidx.room.QueryInterceptorDatabase: void beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder setQueryExecutor(java.util.concurrent.Executor)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.room.MultiInstanceInvalidationClient$serviceConnection$1: void onServiceDisconnected(android.content.ComponentName)
com.kiosoft2.testdemo.db.model.Book_: java.lang.String getTableName()
androidx.room.AmbiguousColumnResolver$Match: java.util.List getResultIndices()
androidx.room.util.TableInfo$ForeignKey: TableInfo$ForeignKey(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List)
androidx.core.view.ViewCompat$Api16Impl: void setHasTransientState(android.view.View,boolean)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.kiosoft2.common.model.BaseLifecycleOwnerImpl: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition greaterOrEqual(com.kiosoft2.api.Property,java.lang.String)
androidx.room.BuiltInTypeConverters$State: BuiltInTypeConverters$State(java.lang.String,int)
kotlinx.coroutines.android.HandlerContext: boolean equals(java.lang.Object)
androidx.core.app.NavUtils$Api16Impl: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
com.kiosoft2.common.autoservice.service.TaskService: void reStartTask(java.lang.Object)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$17: com.kiosoft2.common.task.model.TaskInfo call()
com.kiosoft2.common.model.BaseLifecycleOwnerImpl: androidx.lifecycle.Lifecycle getLifecycle()
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1$job$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.kiosoft2.common.task.interfaces.TaskReLoadCallback: void onReLoadStart(com.kiosoft2.common.task.model.TaskInfo)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
androidx.room.QueryInterceptorDatabase: void execSQL$lambda$12(androidx.room.QueryInterceptorDatabase,java.lang.String,java.util.List)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$inTransaction$1: java.lang.Boolean invoke(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.MultiInstanceInvalidationService$callbackList$1: void onCallbackDied(androidx.room.IMultiInstanceInvalidationCallback,java.lang.Object)
androidx.room.QueryInterceptorDatabase: java.lang.String getPath()
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
androidx.room.Room: androidx.room.RoomDatabase$Builder databaseBuilder(android.content.Context,java.lang.Class,java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
com.kiosoft2.testdemo.db.model.Book_: void bindUpdateAdapterValue(androidx.sqlite.db.SupportSQLiteStatement,com.kiosoft2.testdemo.db.model.Book)
androidx.room.RoomOpenHelper$Companion: RoomOpenHelper$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.room.RoomDatabase: java.util.Set getRequiredAutoMigrationSpecs()
androidx.room.RoomOpenHelper: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)
com.kiosoft2.common.router.BundleManager: com.kiosoft2.common.router.BundleManager withParcelableArrayList(java.lang.String,java.util.ArrayList)
androidx.room.EntityUpsertionAdapter: void upsert(java.lang.Object[])
androidx.room.CoroutinesRoom$Companion$createFlow$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.Room: androidx.room.RoomDatabase$Builder inMemoryDatabaseBuilder(android.content.Context,java.lang.Class)
androidx.room.IMultiInstanceInvalidationCallback$Stub$Proxy: void onInvalidation(java.lang.String[])
androidx.room.AmbiguousColumnResolver$ResultColumn: int hashCode()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
com.kiosoft2.api.Property: com.kiosoft2.api.Property updateGet(java.lang.String,com.kiosoft2.api.type.FuncType)
com.kiosoft2.common.model.BaseLifecycleOwnerImpl$sam$androidx_lifecycle_Observer$0: BaseLifecycleOwnerImpl$sam$androidx_lifecycle_Observer$0(kotlin.jvm.functions.Function1)
com.kiosoft2.common.cache.TaskCacheManager$removeCacheTaskList$1: TaskCacheManager$removeCacheTaskList$1()
androidx.room.QueryInterceptorDatabase: void execSQL$lambda$10(androidx.room.QueryInterceptorDatabase,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
androidx.room.RoomDatabase$Callback: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
androidx.room.ColumnInfo: int typeAffinity()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition greater(com.kiosoft2.api.builder.ChildQuery,long)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.tencent.mmkv.MMKV: boolean containsKey(long,java.lang.String)
androidx.sqlite.db.SupportSQLiteOpenHelper$Callback: SupportSQLiteOpenHelper$Callback(int)
androidx.room.DelegatingOpenHelper: androidx.sqlite.db.SupportSQLiteOpenHelper getDelegate()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
com.kiosoft2.api.builder.JoinBuilder: JoinBuilder(com.kiosoft2.api.type.JoinType,androidx.room.RoomDatabase,com.kiosoft2.api.Entity,com.kiosoft2.api.Entity)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$16: java.util.List call()
androidx.room.Relation: androidx.room.Junction associateBy()
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
com.kiosoft2.testdemo.db.model.User: void setA9(java.lang.Short)
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.kiosoft2.common.thead.utils.AppExecutors$DiskIOThreadExecutor: java.util.concurrent.Executor getMDiskIO()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
com.kiosoft2.common.model.BaseLifecycleOwnerImpl$sam$androidx_lifecycle_Observer$0: boolean equals(java.lang.Object)
com.kiosoft2.common.model.BaseLifecycleOwnerImpl$1: java.lang.Object invoke(java.lang.Object)
com.kiosoft2.testdemo.db.model.User_: java.lang.Class getEntityClass()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)
androidx.room.CoroutinesRoomKt: kotlinx.coroutines.CoroutineDispatcher getQueryDispatcher(androidx.room.RoomDatabase)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: void unregisterContentObserver(android.database.ContentObserver)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.room.RoomDatabase: void access$internalBeginTransaction(androidx.room.RoomDatabase)
com.kiosoft2.api.statement.UpdateSQL: int getArgumentCount()
androidx.room.MultiInstanceInvalidationClient$serviceConnection$1: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
androidx.room.RoomSQLiteQuery$Companion$copyFrom$1: void bindString(int,java.lang.String)
androidx.room.FtsOptions: FtsOptions()
com.kiosoft2.common.task.util.TaskManager$removeTask$2$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notEqual(com.kiosoft2.api.Property,byte[])
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
androidx.room.QueryInterceptorDatabase: void setForeignKeyConstraintsEnabled(boolean)
com.kiosoft2.api.builder.JoinBuilder: com.kiosoft2.api.builder.JoinBuilder equal(com.kiosoft2.api.Property,com.kiosoft2.api.Property)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
com.kiosoft2.common.cache.db.database.AppDataBase_Impl$1: androidx.room.RoomOpenHelper$ValidationResult onValidateSchema(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: java.lang.String[] getColumnNames()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition between(com.kiosoft2.api.builder.ChildQuery,long,long)
com.tencent.mmkv.MMKV: boolean encodeLong(long,java.lang.String,long)
androidx.room.FtsOptions$Order: androidx.room.FtsOptions$Order valueOf(java.lang.String)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$insert$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$insert$1(java.lang.String,int,android.content.ContentValues)
com.kiosoft2.common.cache.TaskCacheManager$cacheTask$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$4: TaskInfoDao_Impl$4(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl,androidx.room.RoomDatabase)
androidx.room.AmbiguousColumnResolver$ResultColumn: java.lang.String component1()
androidx.room.BuiltInTypeConverters: androidx.room.BuiltInTypeConverters$State byteBuffer()
androidx.room.RoomDatabase$endTransaction$1: java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition greater(com.kiosoft2.api.Property,java.util.Date)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeUpdateDelete$1: <clinit>()
androidx.room.InvalidationTracker$ObservedTableTracker$Companion: InvalidationTracker$ObservedTableTracker$Companion()
androidx.room.paging.LimitOffsetDataSource$1: LimitOffsetDataSource$1(androidx.room.paging.LimitOffsetDataSource,java.lang.String[])
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder createFromFile(java.io.File,androidx.room.RoomDatabase$PrepackagedDatabaseCallback)
androidx.room.AutoClosingRoomOpenHelper: void close()
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: int getColumnIndexOrThrow(java.lang.String)
com.kiosoft2.common.task.util.TaskInfoRepository$updateTaskInfoList$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.ubix.kiosoft2.db.DBOperator_Impl: DBOperator_Impl()
androidx.room.RoomOpenHelper: void onDowngrade(androidx.sqlite.db.SupportSQLiteDatabase,int,int)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$update$1: java.lang.Object invoke(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$reStartTask$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
com.kiosoft2.api.builder.JoinBuilder: com.kiosoft2.api.builder.QueryBuilder query(java.util.List)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isWriteAheadLoggingEnabled$1: <clinit>()
androidx.room.migration.MigrationImpl: kotlin.jvm.functions.Function1 getMigrateCallback()
com.kiosoft2.common.thead.utils.AppExecutors: java.util.concurrent.Executor getDiskIO()
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
com.kiosoft2.api.builder.BasicConditionRelationBuilder: com.kiosoft2.api.builder.BasicConditionRelationBuilder or()
androidx.room.RoomDatabase$MigrationContainer: java.util.List findMigrationPath(int,int)
com.google.common.collect.MapMakerInternalMap$Strength: com.google.common.collect.MapMakerInternalMap$Strength valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: int getAutoSizeStepGranularity(android.widget.TextView)
androidx.room.RoomTrackingLiveData: void onActive()
androidx.room.QueryInterceptorDatabase: void beginTransaction()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: long getPageSize()
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
com.kiosoft2.api.builder.OpBuilder: com.kiosoft2.api.builder.QueryBuilder query(java.util.List)
androidx.room.Junction: java.lang.String entityColumn()
androidx.room.SQLiteCopyOpenHelperFactory: androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration)
com.kiosoft2.common.task.annotions.RecurringTask: long initialDelay()
androidx.core.util.ObjectsCompat$Api19Impl: int hash(java.lang.Object[])
androidx.room.AutoCloser: java.lang.Runnable getOnAutoCloseCallback$room_runtime_release()
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager: void navigation(androidx.fragment.app.Fragment,java.lang.Integer)
androidx.room.util.ViewInfo$Companion: ViewInfo$Companion()
com.kiosoft2.api.builder.OpBuilder: java.lang.Long[] save(java.lang.Object[])
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition less(com.kiosoft2.api.Property,com.kiosoft2.api.builder.ChildQuery)
androidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement getStmt()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition startWith(com.kiosoft2.api.Property,java.lang.String)
androidx.room.migration.AutoMigrationSpec: void onPostMigrate(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase(androidx.room.AutoCloser)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: android.os.Bundle getExtras()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: androidx.room.EntityDeletionOrUpdateAdapter access$400(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.kiosoft2.api.builder.OpBuilder: long count()
com.kiosoft2.common.autoservice.impl.TaskServiceImpl: void access$start(com.kiosoft2.common.autoservice.impl.TaskServiceImpl,java.lang.Object,com.kiosoft2.common.task.model.TaskInfo)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.kiosoft2.common.autoservice.impl.TaskServiceImpl: void cancelTask(java.lang.Object)
androidx.room.RenameColumn: java.lang.String tableName()
com.kiosoft2.common.thead.aspect.InterceptMainThreadAspectJ: void requestRunInMianMethod(com.kiosoft2.common.thead.annotions.RunInMainThread)
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale addLikelySubtags(java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDbLockedByCurrentThread$1: <clinit>()
androidx.room.MultiInstanceInvalidationService$binder$1: int registerCallback(androidx.room.IMultiInstanceInvalidationCallback,java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
androidx.room.RoomDatabase: java.lang.ThreadLocal getSuspendingTransactionId()
com.kiosoft2.common.cache.TaskCacheManager$getCacheTaskListByOwerClassName$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
com.kiosoft2.api.builder.Query: double min(com.kiosoft2.api.Property)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
com.kiosoft2.encrypt.EncryptServiceImpl: EncryptServiceImpl()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
androidx.room.RoomDatabaseKt: java.lang.Object withTransaction(androidx.room.RoomDatabase,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
com.kiosoft2.api.statement.SelectSQL: java.util.List getColumns()
kotlin.jvm.internal.MutablePropertyReference: MutablePropertyReference(java.lang.Object)
com.kiosoft2.common.task.model.TaskInfo: long component15()
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property access$getSex$cp()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: long setMaximumSize(long)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: void bindDouble(int,double)
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
kotlin.jvm.internal.MutablePropertyReference1: kotlin.reflect.KMutableProperty1$Setter getSetter()
androidx.room.util.TableInfo$Column: <clinit>()
androidx.appcompat.widget.AppCompatTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.room.util.DBUtil: android.os.CancellationSignal createCancellationSignal()
kotlinx.coroutines.android.HandlerContext: void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setMaximumSize$1: java.lang.Object invoke(java.lang.Object)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition between(com.kiosoft2.api.builder.ChildQuery,java.util.Date,java.util.Date)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedCallback registerOnBackPressedCallback(java.lang.Object,androidx.appcompat.app.AppCompatDelegateImpl)
androidx.room.util.TableInfo$Index: int hashCode()
com.kiosoft2.api.utils.Utils: java.util.List toObjectList(java.lang.Object,java.lang.Class)
com.kiosoft2.api.builder.OpBuilder: java.lang.Object findById(long)
androidx.core.view.ViewCompat$Api17Impl: int generateViewId()
com.kiosoft2.api.aparameter.AParameterManager$Companion$instance$2: AParameterManager$Companion$instance$2()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
androidx.room.ForeignKey: java.lang.String[] parentColumns()
com.kiosoft2.testdemo.activity.TestActivity05: TestActivity05()
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
androidx.room.InvalidationLiveDataContainer: androidx.lifecycle.LiveData create(java.lang.String[],boolean,java.util.concurrent.Callable)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean moveToFirst()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.kiosoft2.common.task.util.TaskInfoRepository$insertTaskInfo$2: TaskInfoRepository$insertTaskInfo$2(com.kiosoft2.common.task.util.TaskInfoRepository,com.kiosoft2.common.task.model.TaskInfo,kotlin.coroutines.Continuation)
com.kiosoft2.api.statement.DeleteSQL: java.lang.String getSql()
com.kiosoft2.api.Entity: java.lang.String getTableName()
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
androidx.core.provider.FontProvider$Api16Impl: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object)
androidx.room.util.ViewInfo: ViewInfo(java.lang.String,java.lang.String)
androidx.lifecycle.MutableLiveData: MutableLiveData()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition lessOrEqual(com.kiosoft2.api.Property,java.util.Date)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: java.lang.String getPath()
androidx.room.util.TableInfoKt: java.util.Map readColumns(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.DropDownListView$Api21Impl: void drawableHotspotChanged(android.view.View,float,float)
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.view.ContextThemeWrapper$Api17Impl: android.content.Context createConfigurationContext(androidx.appcompat.view.ContextThemeWrapper,android.content.res.Configuration)
androidx.room.EntityDeletionOrUpdateAdapter: int handleMultiple(java.lang.Object[])
com.kiosoft2.testdemo.db.model.User_: void bindDeleteAdapterValue(androidx.sqlite.db.SupportSQLiteStatement,com.kiosoft2.testdemo.db.model.User)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
com.kiosoft2.common.cache.db.dao.TaskInfoDao: java.lang.Object removeTaskInfoByTaskId(java.lang.String,kotlin.coroutines.Continuation)
androidx.room.RoomDatabase: void endTransaction()
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1$job$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.rxjava3.RxRoom: RxRoom()
org.aspectj.lang.NoAspectBoundException: NoAspectBoundException()
androidx.room.util.TableInfoKt: java.util.Set readForeignKeys(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)
androidx.room.util.FileUtil: void copy(java.nio.channels.ReadableByteChannel,java.nio.channels.FileChannel)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$execute$1: <clinit>()
androidx.room.util.CursorUtil: android.database.Cursor wrapMappedColumns(android.database.Cursor,java.lang.String[],int[])
androidx.room.AutoCloser: void autoCloser$lambda$3(androidx.room.AutoCloser)
androidx.room.RoomDatabase: android.database.Cursor query(java.lang.String,java.lang.Object[])
androidx.room.MultiInstanceInvalidationService$binder$1: void unregisterCallback(androidx.room.IMultiInstanceInvalidationCallback,int)
com.kiosoft2.api.helper.SQLiteHelper: androidx.room.EntityDeletionOrUpdateAdapter newEntityDeleteAdapter(androidx.room.RoomDatabase,com.kiosoft2.api.Entity)
androidx.room.RoomOpenHelper$Companion: boolean hasRoomMasterTable$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.appcompat.resources.Compatibility$Api18Impl: void setAutoCancel(android.animation.ObjectAnimator,boolean)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
androidx.room.util.StringUtil: java.lang.String joinIntoString(java.util.List)
com.kiosoft2.common.task.util.TaskMethodUtil: TaskMethodUtil()
com.tencent.mmkv.MMKV: java.lang.String cryptKey()
com.kiosoft2.common.task.helper.DelayedTaskHelper$start$1: void onComplete()
com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager: void navigation(android.app.Activity)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: java.lang.String access$100(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl,java.util.concurrent.TimeUnit)
androidx.room.InvalidationTracker$Observer: InvalidationTracker$Observer(java.lang.String[])
androidx.core.app.ActivityCompat$Api16Impl: void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$reStartTask$1: TaskServiceImpl$reStartTask$1(java.lang.Object,com.kiosoft2.common.autoservice.impl.TaskServiceImpl,kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)
androidx.room.RoomOpenHelper$Delegate: void onPostMigrate(androidx.sqlite.db.SupportSQLiteDatabase)
com.kiosoft2.api.builder.BasicConditionRelationBuilder: com.kiosoft2.api.builder.BasicConditionRelationBuilder and(com.kiosoft2.api.condition.PropertyCondition)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: boolean isReadOnly()
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
androidx.room.CoroutinesRoom: java.lang.Object execute(androidx.room.RoomDatabase,boolean,java.util.concurrent.Callable,kotlin.coroutines.Continuation)
androidx.room.util.ViewInfo: <clinit>()
androidx.room.CoroutinesRoom$Companion$createFlow$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.appcompat.widget.AppCompatToggleButton: void setFilters(android.text.InputFilter[])
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition lessOrEqual(byte[])
com.kiosoft2.common.task.util.TaskManager: void cacheTask(java.lang.Object,com.kiosoft2.common.task.model.TaskInfo)
androidx.room.QueryInterceptorStatement: void clearBindings()
androidx.room.AutoClosingRoomOpenHelper: androidx.sqlite.db.SupportSQLiteOpenHelper getDelegate()
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0: java.util.concurrent.TimeUnit unit()
androidx.room.CoroutinesRoom$Companion$execute$4$1: CoroutinesRoom$Companion$execute$4$1(android.os.CancellationSignal,kotlinx.coroutines.Job)
com.kiosoft2.api.statement.DeleteSQL: int getArgumentCount()
com.kiosoft2.api.builder.Query: Query(androidx.room.RoomDatabase,com.kiosoft2.api.statement.SelectSQL)
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: boolean onSearchRequested(android.view.Window$Callback,android.view.SearchEvent)
androidx.room.RoomDatabase: androidx.room.InvalidationTracker getInvalidationTracker()
androidx.room.CoroutinesRoom: CoroutinesRoom()
androidx.room.MultiInstanceInvalidationClient$callback$1: void onInvalidation(java.lang.String[])
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int)
com.kiosoft2.api.type.ExpressionType: java.lang.String getExp()
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0: long initialDelay()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$18: <clinit>()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: void bindNull(int)
com.kiosoft2.common.task.model.TaskInfo: int getId()
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
com.kiosoft2.common.autoservice.impl.TaskServiceImpl: TaskServiceImpl()
com.kiosoft2.common.thead.aspect.InterceptMainThreadAspectJ: InterceptMainThreadAspectJ()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
androidx.appcompat.widget.AppCompatCheckBox: void setFilters(android.text.InputFilter[])
androidx.appcompat.widget.DropDownListView$Api33Impl: void setSelectedChildViewEnabled(android.widget.AbsListView,boolean)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition in(com.kiosoft2.api.Property,java.lang.String[])
com.kiosoft2.common.task.util.TaskReLoadUtil$reLoadStart$1: void run()
androidx.room.migration.MigrationImpl: MigrationImpl(int,int,kotlin.jvm.functions.Function1)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder createFromAsset(java.lang.String,androidx.room.RoomDatabase$PrepackagedDatabaseCallback)
com.kiosoft2.api.statement.SQL: int getArgumentCount()
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken getParameterized(java.lang.reflect.Type,java.lang.reflect.Type[])
androidx.room.RenameTable: java.lang.String toTableName()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatButton: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
com.kiosoft2.api.statement.DeleteSQL: DeleteSQL(com.kiosoft2.api.Entity)
androidx.room.Relation: java.lang.String parentColumn()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: boolean isDatabaseIntegrityOk()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
androidx.appcompat.widget.SearchView: int getPreferredWidth()
androidx.room.IMultiInstanceInvalidationService$Stub$Proxy: void unregisterCallback(androidx.room.IMultiInstanceInvalidationCallback,int)
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notIn(com.kiosoft2.api.builder.ChildQuery,java.lang.Integer[])
androidx.room.IMultiInstanceInvalidationService: int registerCallback(androidx.room.IMultiInstanceInvalidationCallback,java.lang.String)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
com.kiosoft2.api.builder.JoinBuilder: com.kiosoft2.api.builder.JoinBuilder lessOrEqual(com.kiosoft2.api.Property,com.kiosoft2.api.Property)
androidx.room.PrimaryKey: boolean autoGenerate()
androidx.room.RoomDatabase: androidx.sqlite.db.SupportSQLiteOpenHelper getOpenHelper()
com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper: void onActivityResumed(android.app.Activity)
com.kiosoft2.common.task.util.TaskManager: TaskManager()
androidx.core.view.ViewCompat$Api16Impl: int getWindowSystemUiVisibility(android.view.View)
com.kiosoft2.testdemo.db.model.User_: java.util.List getCompositePK()
com.kiosoft2.common.task.util.TaskInfoRepository: void setTaskInfoDao(com.kiosoft2.common.cache.db.dao.TaskInfoDao)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.room.InvalidationTracker: androidx.room.AutoCloser access$getAutoCloser$p(androidx.room.InvalidationTracker)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.kiosoft2.common.task.util.TaskMethodUtil: <clinit>()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
kotlin.jvm.internal.FunctionReference: boolean isExternal()
androidx.room.RoomDatabase: java.lang.Object runInTransaction(java.util.concurrent.Callable)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.kiosoft2.common.task.util.TaskInfoRepository$getCacheTaskListByOwerClassName$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.kiosoft2.api.statement.element.Condition: Condition(com.kiosoft2.api.type.ConditionRelation,java.util.List)
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_DelayedTask$0: TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_DelayedTask$0(int,long,com.kiosoft2.common.task.annotions.TaskThread,java.util.concurrent.TimeUnit,boolean,boolean,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.tencent.mmkv.MMKV: java.lang.String[] decodeStringSet(long,java.lang.String)
androidx.room.IMultiInstanceInvalidationCallback$Default: android.os.IBinder asBinder()
androidx.room.AmbiguousColumnResolver$Solution: int getOverlaps()
androidx.core.content.res.ResourcesCompat$Api15Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: float getFloat(int)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition in(com.kiosoft2.api.builder.ChildQuery,java.lang.String[])
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notEqual(com.kiosoft2.api.Property,double)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: androidx.room.SharedSQLiteStatement access$600(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl)
androidx.room.TransactionElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
com.google.gson.reflect.TypeToken: TypeToken(java.lang.reflect.Type)
com.tencent.mmkv.MMKV: int writeValueToNB(long,java.lang.String,long,int)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
androidx.room.RoomDatabaseKt: kotlin.coroutines.CoroutineContext access$createTransactionContext(androidx.room.RoomDatabase,kotlin.coroutines.ContinuationInterceptor)
androidx.room.RoomOpenHelper$Delegate: void validateMigration(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.AmbiguousColumnResolver$Solution: int compareTo(java.lang.Object)
com.kiosoft2.common.cache.TaskCacheManager$cacheTask$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.util.CursorUtil: java.lang.Object useCursor(android.database.Cursor,kotlin.jvm.functions.Function1)
com.kiosoft2.api.EntityManager$Companion: com.kiosoft2.api.Entity getEntity(java.lang.Class)
com.kiosoft2.common.router.ARouterOperator$FragmentBundleManager: ARouterOperator$FragmentBundleManager(com.kiosoft2.common.router.ARouterOperator,java.lang.Class)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
kotlinx.coroutines.android.HandlerDispatcherKt: kotlinx.coroutines.android.HandlerDispatcher from$default(android.os.Handler,java.lang.String,int,java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
com.kiosoft2.common.cache.TaskCacheManager$cacheTask$1: TaskCacheManager$cacheTask$1(com.kiosoft2.common.task.model.TaskInfo,kotlin.coroutines.Continuation)
com.kiosoft2.api.builder.JoinBuilder: com.kiosoft2.api.builder.JoinBuilder between(com.kiosoft2.api.Property,com.kiosoft2.api.Property)
com.kiosoft2.common.task.util.TaskManager: void setTaskActivityLifecycleHelper(com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
androidx.room.Fts3: java.lang.String[] tokenizerArgs()
androidx.room.CoroutinesRoom$Companion$createFlow$1$1: CoroutinesRoom$Companion$createFlow$1$1(boolean,androidx.room.RoomDatabase,kotlinx.coroutines.flow.FlowCollector,java.lang.String[],java.util.concurrent.Callable,kotlin.coroutines.Continuation)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.kiosoft2.common.task.util.TaskInfoRepository: java.lang.Object insertOrUpdateTaskInfo(com.kiosoft2.common.task.model.TaskInfo,kotlin.coroutines.Continuation)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager: com.kiosoft2.common.router.BundleManager withParcelableArrayList(java.lang.String,java.util.ArrayList)
androidx.appcompat.widget.SearchView: int getInputType()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDatabaseIntegrityOk$1: java.lang.Boolean invoke(androidx.sqlite.db.SupportSQLiteDatabase)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition equal(com.kiosoft2.api.Property,boolean)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$2: java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper$onActivityCreated$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder setTransactionExecutor(java.util.concurrent.Executor)
androidx.room.util.CursorUtil$wrapMappedColumns$2: CursorUtil$wrapMappedColumns$2(android.database.Cursor,java.lang.String[],int[])
com.google.gson.reflect.TypeToken: boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map)
com.kiosoft2.common.router.BundleManager: java.lang.Class getPage()
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
androidx.core.os.CancellationSignal$Api16Impl: void cancel(java.lang.Object)
com.kiosoft2.common.router.BundleManager: void setPage(java.lang.Class)
com.kiosoft2.api.utils.Utils: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void setMaxSqlCacheSize(int)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.room.ColumnInfo: <clinit>()
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.os.BundleApi21ImplKt: void putSizeF(android.os.Bundle,java.lang.String,android.util.SizeF)
com.kiosoft2.common.task.model.TaskInfo: void setTime(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1: HandlerContext$scheduleResumeAfterDelay$1(kotlinx.coroutines.android.HandlerContext,java.lang.Runnable)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
com.kiosoft2.api.builder.JoinBuilder: com.kiosoft2.api.builder.JoinBuilder contains(com.kiosoft2.api.Property,com.kiosoft2.api.Property)
androidx.room.DatabaseView: java.lang.String viewName()
androidx.room.OnConflictStrategy$Companion: void getROLLBACK$annotations()
androidx.sqlite.db.framework.FrameworkSQLiteDatabase$Api30Impl: void execPerConnectionSQL(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Object[])
com.kiosoft2.apt.AParameter$$TestActivity05: void getParameter(java.lang.Object)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper: void onActivityPaused(android.app.Activity)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition less(com.kiosoft2.api.builder.ChildQuery,double)
androidx.appcompat.widget.AppCompatEditText: void setKeyListener(android.text.method.KeyListener)
com.kiosoft2.testdemo.db.model.User_: User_()
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet)
androidx.room.IMultiInstanceInvalidationService$Stub: android.os.IBinder asBinder()
com.kiosoft2.common.task.model.TaskInfo: void setAnnotationClassName(java.lang.String)
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.room.SharedSQLiteStatement: java.lang.String createQuery()
com.kiosoft2.api.builder.Query: java.lang.String findFirstId()
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
com.kiosoft2.common.task.helper.RecurringTaskHelper$start$1: void onNext(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,android.os.CancellationSignal)
androidx.room.RoomOpenHelper$Delegate: void dropAllTables(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.RoomSQLiteQuery$Companion: void prunePoolLocked$room_runtime_release()
com.kiosoft2.common.router.ARouterOperator: androidx.fragment.app.Fragment navigationFragment(com.kiosoft2.common.router.ARouterOperator$FragmentBundleManager)
com.kiosoft2.api.type.ConditionRelation: <clinit>()
kotlin.jvm.internal.PropertyReference1Impl: PropertyReference1Impl(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition greater(com.kiosoft2.api.builder.ChildQuery,java.util.Date)
com.kiosoft2.api.EntityManager: void access$setEntityMap$cp(java.util.HashMap)
androidx.room.SQLiteCopyOpenHelper: androidx.sqlite.db.SupportSQLiteOpenHelper createFrameworkOpenHelper(java.io.File)
androidx.room.QueryInterceptorDatabase: void query$lambda$9(androidx.room.QueryInterceptorDatabase,androidx.sqlite.db.SupportSQLiteQuery,androidx.room.QueryInterceptorProgram)
kotlin.jvm.internal.MutablePropertyReference1Impl: void set(java.lang.Object,java.lang.Object)
com.tencent.mmkv.MMKV: long getMMKVWithID(java.lang.String,int,java.lang.String,java.lang.String)
androidx.room.AmbiguousColumnResolver$resolve$1$2: AmbiguousColumnResolver$resolve$1$2(java.util.List,int)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notExists(com.kiosoft2.api.builder.ChildQuery)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition equal(byte[])
com.kiosoft2.api.Property: com.kiosoft2.api.Property date()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$2: java.lang.Object invoke(java.lang.Object)
com.kiosoft2.common.task.model.TaskInfo: boolean isReStart()
com.kiosoft2.common.bus.LiveDataBus: <clinit>()
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
kotlin.jvm.internal.MutablePropertyReference1: MutablePropertyReference1(java.lang.Object)
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property access$getAge$cp()
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder createFromFile(java.io.File)
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
androidx.lifecycle.LiveData: java.lang.Object getValue()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.room.util.FtsTableInfo: FtsTableInfo(java.lang.String,java.util.Set,java.util.Set)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
com.kiosoft2.common.task.annotions.TaskThread: TaskThread(java.lang.String,int)
com.kiosoft2.common.R: R()
com.tencent.mmkv.MMKV: boolean encodeSet(long,java.lang.String,java.lang.String[])
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
androidx.room.rxjava3.RxRoom: void lambda$createObservable$3(androidx.room.RoomDatabase,androidx.room.InvalidationTracker$Observer)
com.kiosoft2.api.aparameter.AParameterManager: AParameterManager()
com.kiosoft2.testdemo.db.model.Book: java.lang.Long getId()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$update$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$update$1(java.lang.String,int,android.content.ContentValues,java.lang.String,java.lang.Object[])
androidx.room.MultiInstanceInvalidationService: void setMaxClientId$room_runtime_release(int)
androidx.room.R: R()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeInsert$1: <clinit>()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
androidx.room.util.ViewInfo$Companion: androidx.room.util.ViewInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)
com.kiosoft2.common.router.ARouterOperator$FragmentBundleManager: com.kiosoft2.common.router.BundleManager withBoolean(java.lang.String,boolean)
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.Continuation interceptContinuation(kotlin.coroutines.Continuation)
androidx.room.ForeignKey: java.lang.String[] childColumns()
androidx.room.RoomTrackingLiveData: void invalidationRunnable$lambda$1(androidx.room.RoomTrackingLiveData)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: java.lang.Object updateTaskInfo(com.kiosoft2.common.task.model.TaskInfo,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: long getLong(int)
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlin.jvm.internal.CallableReference: boolean isSuspend()
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.room.RoomSQLiteQuery$Companion$copyFrom$1: RoomSQLiteQuery$Companion$copyFrom$1(androidx.room.RoomSQLiteQuery)
com.tencent.mmkv.MMKV: long totalSize(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$14: java.lang.Object call()
androidx.room.RoomDatabase: void getMCallbacks$annotations()
com.kiosoft2.common.task.util.TaskManager: void bindLifecycle(androidx.lifecycle.LifecycleOwner,com.kiosoft2.common.task.model.TaskInfo)
com.kiosoft2.common.cache.db.dao.TaskInfoDao: java.lang.Object getCacheTaskListByOwerClassNameAndTaskId(java.lang.String,java.lang.String,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelperFactory: androidx.room.AutoClosingRoomOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration)
com.kiosoft2.testdemo.db.model.User_: java.util.List getAllProperties()
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
com.kiosoft2.api.type.ExpressionType: ExpressionType(java.lang.String,int,java.lang.String,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
com.kiosoft2.common.click.utils.ClickUtil: void setLastClickTime(long)
androidx.appcompat.widget.AppCompatTextHelper$Api28Impl: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
kotlinx.coroutines.android.HandlerDispatcherKt: android.os.Handler asHandler(android.os.Looper,boolean)
com.kiosoft2.testdemo.db.model.User: java.lang.Short getA9()
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition notIn(java.lang.Integer[])
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedDispatcher findOnBackInvokedDispatcher(android.view.View)
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
com.kiosoft2.common.click.ClickExe: void setSafeOnClickListener$lambda$0(kotlin.jvm.functions.Function1,android.view.View)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition in(java.lang.String[])
com.kiosoft2.testdemo.db.model.User: boolean isSex()
androidx.room.InvalidationTracker$refreshRunnable$1: void run()
com.kiosoft2.common.thead.aspect.InterceptMainThreadAspectJ$Companion: InterceptMainThreadAspectJ$Companion()
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$start$2: void bindDisposable(com.kiosoft2.common.task.model.TaskInfo)
androidx.room.RoomSQLiteQuery: RoomSQLiteQuery(int)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition like(com.kiosoft2.api.builder.ChildQuery)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$2: java.lang.Boolean invoke(androidx.sqlite.db.SupportSQLiteDatabase)
com.kiosoft2.common.task.aspect.TaskAspectJ$Companion: com.kiosoft2.common.task.aspect.TaskAspectJ aspectOf()
androidx.room.AutoCloser: androidx.sqlite.db.SupportSQLiteDatabase getDelegateDatabase$room_runtime_release()
com.kiosoft2.testdemo.db.model.User_: void bindInsertionAdapterValue(androidx.sqlite.db.SupportSQLiteStatement,com.kiosoft2.testdemo.db.model.User)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
androidx.room.RoomDatabaseKt$withTransaction$transactionBlock$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setLocale$1: java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.QueryInterceptorOpenHelper: void close()
androidx.core.view.ViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$7: kotlin.Unit call()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notIn(com.kiosoft2.api.builder.ChildQuery,java.lang.String[])
androidx.room.RoomDatabase: java.util.Map getRequiredTypeConverters()
androidx.room.QueryInterceptorDatabase: void endTransaction()
androidx.core.view.ViewCompat$Api16Impl: void setBackground(android.view.View,android.graphics.drawable.Drawable)
com.kiosoft2.common.task.util.TaskManager$isExistTask$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.room.RoomDatabase: RoomDatabase()
com.kiosoft2.api.R: R()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notEqual(com.kiosoft2.api.builder.ChildQuery,java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
com.kiosoft2.api.RoomOperator: java.lang.Object runInTx(java.util.concurrent.Callable)
androidx.room.RoomSQLiteQuery$Companion: RoomSQLiteQuery$Companion()
com.kiosoft2.testdemo.db.model.User: int getAge()
androidx.room.QueryInterceptorDatabase: void setTransactionSuccessful$lambda$5(androidx.room.QueryInterceptorDatabase)
com.kiosoft2.common.task.model.TaskInfo: TaskInfo()
androidx.room.RoomWarnings$Companion: RoomWarnings$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.kiosoft2.testdemo.db.model.User: void setA7(java.lang.Long)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
com.alibaba.fastjson2.JSONReader$Feature: com.alibaba.fastjson2.JSONReader$Feature valueOf(java.lang.String)
com.kiosoft2.common.task.model.TaskInfo: boolean isCacheResumeStart()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.kiosoft2.api.builder.QueryBuilder: QueryBuilder(androidx.room.RoomDatabase,com.kiosoft2.api.Entity,java.util.List,java.util.List)
androidx.room.RoomDatabase$MigrationContainer: java.util.List findUpMigrationPath(java.util.List,boolean,int,int)
com.kiosoft2.common.task.model.MethodInfo: java.util.List getArgs()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: void bindBlob(int,byte[])
androidx.room.RoomSQLiteQuery: void bindDouble(int,double)
com.kiosoft2.api.type.ExpressionType: com.kiosoft2.api.type.ExpressionType valueOf(java.lang.String)
androidx.room.RoomSQLiteQuery: void init(java.lang.String,int)
androidx.appcompat.resources.Compatibility$Api15Impl: void getValueForDensity(android.content.res.Resources,int,int,android.util.TypedValue,boolean)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition less(com.kiosoft2.api.Property,double)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity)
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
com.kiosoft2.common.task.util.TaskInfoRepository$insertTaskInfo$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: int getTextDirection(android.view.View)
com.kiosoft2.common.task.util.TaskInfoRepository$updateTaskInfoList$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.util.TableInfo$Column: TableInfo$Column(java.lang.String,java.lang.String,boolean,int,java.lang.String,int)
androidx.room.InvalidationTracker: androidx.sqlite.db.SupportSQLiteStatement getCleanupStatement$room_runtime_release()
androidx.appcompat.widget.TooltipCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
androidx.room.QueryInterceptorDatabase: java.util.List getAttachedDbs()
androidx.room.CoroutinesRoom$Companion$execute$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
com.kiosoft2.api.statement.element.Page: Page()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$12: kotlin.Unit call()
com.kiosoft2.common.task.model.TaskInfo: void setId(int)
androidx.room.MultiInstanceInvalidationService: MultiInstanceInvalidationService()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])
com.kiosoft2.testdemo.db.model.User_: java.lang.Class access$getEntityClass_$cp()
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: android.net.Uri getNotificationUri()
com.kiosoft2.api.builder.Query: long count()
androidx.room.RoomDatabase: void getMDatabase$annotations()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$8: java.lang.Object call()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForString$1: AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForString$1()
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$1: <clinit>()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notIn(com.kiosoft2.api.builder.ChildQuery,java.lang.Long[])
androidx.room.AutoClosingRoomOpenHelperFactory: AutoClosingRoomOpenHelperFactory(androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.AutoCloser)
kotlin.jvm.internal.MutablePropertyReference1Impl: MutablePropertyReference1Impl(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
androidx.room.InvalidationTracker$Companion: void getSELECT_UPDATED_TABLES_SQL$room_runtime_release$annotations()
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object)
androidx.room.CoroutinesRoom$Companion$createFlow$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.kiosoft2.common.task.util.TaskManager$WhenMappings: <clinit>()
androidx.sqlite.db.SupportSQLiteOpenHelper$Callback: void deleteDatabaseFile(java.lang.String)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isWriteAheadLoggingEnabled$1: java.lang.Boolean invoke(androidx.sqlite.db.SupportSQLiteDatabase)
com.kiosoft2.common.task.util.TaskManager$removeTask$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.room.IMultiInstanceInvalidationCallback$Stub$Proxy: java.lang.String getInterfaceDescriptor()
androidx.room.CoroutinesRoom$Companion$execute$4$job$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.kiosoft2.common.task.util.TaskManager: void init(android.app.Application)
com.kiosoft2.api.statement.element.Condition: com.kiosoft2.api.type.ConditionRelation whereRelation()
com.kiosoft2.common.task.util.TaskInfoRepository$insertTaskInfo$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition greaterOrEqual(com.kiosoft2.api.builder.ChildQuery,java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.kiosoft2.api.builder.BasicConditionRelationBuilder: com.kiosoft2.api.builder.BasicConditionRelationBuilder and()
com.kiosoft2.api.dao.Dao: int delete(java.lang.Object[])
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean getWantsAllOnMoveCalls()
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
com.kiosoft2.api.helper.SQLiteHelper: androidx.room.EntityInsertionAdapter getEntityInsertionAdapter(androidx.room.RoomDatabase,com.kiosoft2.api.Entity,int)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$10: TaskInfoDao_Impl$10(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl,com.kiosoft2.common.task.model.TaskInfo)
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.kiosoft2.common.task.model.TaskInfo: void setAnnotationClass(java.lang.Class)
androidx.core.os.CancellationSignal$Api16Impl: android.os.CancellationSignal createCancellationSignal()
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void setPageSize(long)
com.kiosoft2.common.task.aspect.DelayedTaskAspectJ$aroundJoinPoint$1: void run()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isReadOnly$1: java.lang.Object invoke(java.lang.Object)
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0: boolean equals(java.lang.Object)
androidx.room.InvalidationTracker: void addObserver(androidx.room.InvalidationTracker$Observer)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isWriteAheadLoggingEnabled$1: java.lang.Object invoke(java.lang.Object)
androidx.room.EntityDeletionOrUpdateAdapter: int handle(java.lang.Object)
androidx.room.QueryInterceptorDatabase: void close()
com.alibaba.fastjson2.JSONWriter$Feature: com.alibaba.fastjson2.JSONWriter$Feature valueOf(java.lang.String)
androidx.room.RoomDatabaseKt$withTransaction$transactionBlock$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notNull(com.kiosoft2.api.Property)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: TaskInfoDao_Impl(androidx.room.RoomDatabase)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void disableWriteAheadLogging()
androidx.appcompat.widget.AppCompatEditText: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.room.RoomSQLiteQuery$Companion$copyFrom$1: void bindLong(int,long)
com.kiosoft2.common.click.utils.ClickUtil: long getClick_interval_time()
androidx.room.InvalidationTracker: void addWeakObserver(androidx.room.InvalidationTracker$Observer)
kotlinx.coroutines.android.HandlerContext: void cancelOnRejection(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
com.kiosoft2.api.utils.Utils: com.alibaba.fastjson2.JSONArray toJSONArray(java.lang.Object)
com.kiosoft2.common.thead.aspect.InterceptMainThreadAspectJ: <clinit>()
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
com.kiosoft2.api.builder.DeleteBuilder: DeleteBuilder(androidx.room.RoomDatabase,com.kiosoft2.api.Entity)
androidx.core.os.LocaleListCompat$Api21Impl: boolean matchesLanguageAndScript(java.util.Locale,java.util.Locale)
androidx.room.TransactionElement: TransactionElement(kotlin.coroutines.ContinuationInterceptor)
com.kiosoft2.common.cache.db.dao.TaskInfoDao: java.lang.Object removeCacheTaskList(java.util.List,kotlin.coroutines.Continuation)
com.kiosoft2.common.task.aspect.TaskAspectJ: TaskAspectJ()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$7: java.lang.Object call()
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$1()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: BaseContinuationImpl(kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: java.util.List getAttachedDbs()
androidx.room.QueryInterceptorDatabase: void beginTransaction$lambda$0(androidx.room.QueryInterceptorDatabase)
com.kiosoft2.testdemo.db.model.User_: void bindUpdateAdapterValue(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)
com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper$onActivityCreated$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.kiosoft2.common.task.helper.RecurringTaskHelper$start$1: RecurringTaskHelper$start$1(kotlin.jvm.internal.Ref$ObjectRef,com.kiosoft2.common.task.model.TaskInfo,java.lang.Object,com.kiosoft2.common.task.interfaces.JoinPointRunCallback)
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: int getVersion()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.kiosoft2.common.task.util.TaskManager: void removeTask(java.lang.Object,com.kiosoft2.common.task.model.TaskInfo)
com.kiosoft2.common.task.util.TaskReLoadUtil$reLoadStart$2: TaskReLoadUtil$reLoadStart$2(com.kiosoft2.common.task.interfaces.TaskReLoadCallback,com.kiosoft2.common.task.model.TaskInfo)
androidx.room.DatabaseConfiguration: DatabaseConfiguration(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$MigrationContainer,java.util.List,boolean,androidx.room.RoomDatabase$JournalMode,java.util.concurrent.Executor,java.util.concurrent.Executor,boolean,boolean,boolean,java.util.Set,java.lang.String,java.io.File,java.util.concurrent.Callable,androidx.room.RoomDatabase$PrepackagedDatabaseCallback)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
com.kiosoft2.api.builder.JoinBuilder: com.kiosoft2.api.builder.JoinBuilder notIn(com.kiosoft2.api.Property,com.kiosoft2.api.Property[])
com.kiosoft2.common.cache.db.dao.TaskInfoDao$insertOrUpdateTaskInfo$1: TaskInfoDao$insertOrUpdateTaskInfo$1(kotlin.coroutines.Continuation)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$5: java.lang.String createQuery()
androidx.room.TransactionExecutor: TransactionExecutor(java.util.concurrent.Executor)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
com.kiosoft2.api.utils.Utils: java.lang.String getStrDefault(java.lang.String,java.lang.String)
com.kiosoft2.api.builder.Query: com.kiosoft2.api.builder.Query orderBy(com.kiosoft2.api.Property,com.kiosoft2.api.type.OrderByType)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.room.MultiInstanceInvalidationClient$callback$1: void onInvalidation$lambda$0(androidx.room.MultiInstanceInvalidationClient,java.lang.String[])
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean isAfterLast()
kotlin.TypeCastException: TypeCastException()
com.kiosoft2.api.statement.SelectSQL: boolean isHasColumn()
androidx.room.rxjava3.RxRoom: java.util.concurrent.Executor getExecutor(androidx.room.RoomDatabase,boolean)
com.kiosoft2.common.task.interfaces.JoinPointRunCallback: void run()
com.kiosoft2.api.builder.Query: double sum(com.kiosoft2.api.Property)
androidx.room.util.DBUtil: void dropFtsSyncTriggers(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
androidx.lifecycle.MutableLiveData: MutableLiveData(java.lang.Object)
androidx.room.util.TableInfo$Column: int findAffinity(java.lang.String)
androidx.room.util.TableInfo$Index: <clinit>()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.kiosoft2.common.thead.aspect.InterceptIOThreadAspectJ$Companion: com.kiosoft2.common.thead.aspect.InterceptIOThreadAspectJ aspectOf()
com.kiosoft2.common.cache.TaskCacheManager$getCacheTaskListByOwerClassNameAndTaskId$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.Relation: java.lang.Class entity()
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
com.kiosoft2.common.task.model.TaskInfo: void setUnit(java.util.concurrent.TimeUnit)
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$reStartTask$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void pokeOpen()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1: HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1(kotlinx.coroutines.CancellableContinuation,kotlinx.coroutines.android.HandlerContext)
androidx.room.CoroutinesRoom$Companion$createFlow$1: CoroutinesRoom$Companion$createFlow$1(boolean,androidx.room.RoomDatabase,java.lang.String[],java.util.concurrent.Callable,kotlin.coroutines.Continuation)
com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager: com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager withParcelableArrayList(java.lang.String,java.util.ArrayList)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper: TaskActivityLifecycleHelper(com.kiosoft2.common.task.util.TaskManager)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextView$SuperCaller getSuperCaller()
androidx.appcompat.app.AppLocalesMetadataHolderService$Api24Impl: int getDisabledComponentFlag()
androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
com.kiosoft2.api.condition.BasicCondition: void applyWhere(com.kiosoft2.api.statement.element.Condition)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$1: java.lang.Object get(java.lang.Object)
com.kiosoft2.common.task.model.TaskInfo: boolean component10()
com.kiosoft2.testdemo.db.model.Book_: com.kiosoft2.api.Property access$getName$cp()
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
androidx.lifecycle.LiveData: LiveData(java.lang.Object)
com.kiosoft2.common.task.model.TaskInfo: long getInitialDelay()
androidx.fragment.app.FragmentActivity: FragmentActivity()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition between(com.kiosoft2.api.Property,long,long)
androidx.room.InvalidationTracker$Observer: boolean isRemote$room_runtime_release()
androidx.room.util.TableInfo$Index$Companion: TableInfo$Index$Companion()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition contains(com.kiosoft2.api.builder.ChildQuery,java.lang.String)
com.kiosoft2.common.thead.aspect.InterceptMainThreadAspectJ: com.kiosoft2.common.thead.aspect.InterceptMainThreadAspectJ aspectOf()
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
com.kiosoft2.api.RoomOperator: com.kiosoft2.api.builder.OpBuilder op(java.lang.Class)
androidx.room.IMultiInstanceInvalidationService: void broadcastInvalidation(int,java.lang.String[])
androidx.room.RoomTrackingLiveData: androidx.room.InvalidationTracker$Observer getObserver()
kotlin.jvm.internal.CallableReference: boolean isOpen()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String,boolean)
com.kiosoft2.api.statement.element.Condition$1: <clinit>()
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition equal(com.kiosoft2.api.builder.ChildQuery)
com.kiosoft2.common.bus.LiveDataBus: com.kiosoft2.common.bus.LiveDataBus access$getLiveDataBus$cp()
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.kiosoft2.common.router.ARouterOperator$Companion: com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager op(java.lang.Class)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$6: TaskInfoDao_Impl$6(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl,com.kiosoft2.common.task.model.TaskInfo)
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition greater(com.kiosoft2.api.Property,byte[])
androidx.room.InvalidationTracker$Observer: InvalidationTracker$Observer(java.lang.String,java.lang.String[])
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition lessOrEqual(com.kiosoft2.api.builder.ChildQuery,java.lang.String)
androidx.core.app.ComponentActivity: ComponentActivity()
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_DelayedTask$0: java.util.concurrent.TimeUnit unit()
io.reactivex.rxjava3.exceptions.MissingBackpressureException: MissingBackpressureException()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$insert$1: java.lang.Long invoke(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
androidx.room.AutoCloser$Companion: AutoCloser$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition greater(com.kiosoft2.api.Property,long)
com.kiosoft2.api.builder.JoinBuilder: com.kiosoft2.api.builder.QueryBuilder query(com.kiosoft2.api.Property[])
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setIsClippedToScreen(android.widget.PopupWindow,boolean)
androidx.room.InvalidationTracker$WeakObserver: androidx.room.InvalidationTracker getTracker()
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
androidx.room.RoomTrackingLiveData: java.util.concurrent.atomic.AtomicBoolean getComputing()
com.kiosoft2.common.thead.aspect.InterceptMainThreadAspectJ$Companion: InterceptMainThreadAspectJ$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notEqual(com.kiosoft2.api.builder.ChildQuery,com.kiosoft2.api.builder.ChildQuery)
androidx.room.MultiInstanceInvalidationClient$callback$1: MultiInstanceInvalidationClient$callback$1(androidx.room.MultiInstanceInvalidationClient)
androidx.room.AmbiguousColumnResolver$Match: kotlin.ranges.IntRange getResultRange()
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
com.kiosoft2.common.task.util.TaskInfoRepository$getCacheTaskListByOwerClassName$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
androidx.room.InvalidationTracker$ObservedTableTracker: long[] getTableObservers()
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean move(int)
androidx.room.Index$Order: <clinit>()
androidx.room.Entity: java.lang.String tableName()
com.kiosoft2.common.cache.TaskCacheManager$getCacheTaskListByOwerClassNameAndTaskId$2: TaskCacheManager$getCacheTaskListByOwerClassNameAndTaskId$2(java.lang.String,java.lang.String,kotlin.coroutines.Continuation)
com.kiosoft2.common.click.aspect.InterceptSingleTimeAspectJ: com.kiosoft2.common.click.aspect.InterceptSingleTimeAspectJ aspectOf()
androidx.room.QueryInterceptorDatabase: void beginTransactionWithListenerNonExclusive$lambda$3(androidx.room.QueryInterceptorDatabase)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat)
com.kiosoft2.api.aparameter.AParameterManager$Companion$instance$2: <clinit>()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void beginTransactionWithListenerNonExclusive(android.database.sqlite.SQLiteTransactionListener)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$16: TaskInfoDao_Impl$16(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl,androidx.room.RoomSQLiteQuery)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
androidx.core.view.ViewCompat$Api17Impl: void setLayoutDirection(android.view.View,int)
com.kiosoft2.testdemo.db.model.Book_: com.kiosoft2.api.Property access$getUid$cp()
com.kiosoft2.common.task.model.TaskInfo: androidx.lifecycle.LifecycleOwner getLifecycleOwner()
androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
com.kiosoft2.api.builder.ChildQuery: ChildQuery(com.kiosoft2.api.statement.SelectSQL)
androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName: androidx.sqlite.db.framework.FrameworkSQLiteOpenHelper$OpenHelper$CallbackName[] values()
androidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement createNewStatement()
com.kiosoft2.api.helper.SQLiteHelper: java.lang.String generateSelectSql(com.kiosoft2.api.statement.SelectSQL)
androidx.room.util.TableInfo$ForeignKeyWithSequence: java.lang.String getFrom()
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
com.google.gson.reflect.TypeToken: boolean equals(java.lang.Object)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition greaterOrEqual(com.kiosoft2.api.Property,double)
com.kiosoft2.common.bus.LiveDataBus: void remove(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property access$getAddress$cp()
androidx.room.RoomDatabase$Builder: RoomDatabase$Builder(android.content.Context,java.lang.Class,java.lang.String)
com.kiosoft2.api.statement.SQL: java.util.List getArgumentList()
com.kiosoft2.api.helper.SQLiteHelper: void generatePKWhere(com.kiosoft2.api.Entity,int,java.lang.StringBuilder)
androidx.room.QueryInterceptorDatabase: void execSQL(java.lang.String,java.lang.Object[])
com.kiosoft2.common.task.model.TaskInfo: int hashCode()
androidx.room.InvalidationTracker$ObserverWrapper: int[] getTableIds$room_runtime_release()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
com.kiosoft2.testdemo.db.model.User: void setA5(short)
com.kiosoft2.testdemo.db.model.Book_: void bindInsertionAdapterValue(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.kiosoft2.api.aparameter.AParameterManager: AParameterManager(kotlin.jvm.internal.DefaultConstructorMarker)
com.kiosoft2.api.builder.JoinBuilder: com.kiosoft2.api.builder.JoinBuilder greaterOrEqual(com.kiosoft2.api.Property,com.kiosoft2.api.Property)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition lessOrEqual(java.lang.String)
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
com.kiosoft2.api.statement.element.Expression: Expression(com.kiosoft2.api.Property,com.kiosoft2.api.type.ExpressionType,java.lang.Object[],boolean)
androidx.room.IMultiInstanceInvalidationService$Stub$Proxy: java.lang.String getInterfaceDescriptor()
com.tencent.mmkv.MMKV: void unlock()
androidx.room.Fts4: java.lang.String tokenizer()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
androidx.room.RoomDatabase: java.util.Map getBackingFieldMap()
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
com.kiosoft2.common.autoservice.impl.TaskServiceImpl: void cancelTask(java.lang.Object,java.lang.String)
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_DelayedTask$0: boolean isRepeat()
androidx.room.SQLiteCopyOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase()
com.tencent.mmkv.MMKV: void mmkvLogImp(int,java.lang.String,int,java.lang.String,java.lang.String)
androidx.room.IMultiInstanceInvalidationCallback$Stub$Proxy: IMultiInstanceInvalidationCallback$Stub$Proxy(android.os.IBinder)
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingStart(android.view.View)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDatabaseIntegrityOk$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDatabaseIntegrityOk$1()
com.kiosoft2.api.type.ConditionRelation: com.kiosoft2.api.type.ConditionRelation[] values()
com.kiosoft2.api.EntityManager: <clinit>()
androidx.room.AmbiguousColumnResolver$Solution$Companion: androidx.room.AmbiguousColumnResolver$Solution getNO_SOLUTION()
androidx.room.QueryInterceptorDatabase: void setVersion(int)
com.kiosoft2.common.cache.TaskCacheManager: void setGson(com.google.gson.Gson)
androidx.room.EntityInsertionAdapter: void insert(java.lang.Iterable)
com.kiosoft2.api.helper.SQLiteHelper: int execUpdateSql(androidx.room.RoomDatabase,com.kiosoft2.api.statement.UpdateSQL)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition contains(com.kiosoft2.api.Property,java.lang.String)
androidx.core.widget.TextViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode[] values()
androidx.room.RoomDatabase$endTransaction$1: java.lang.Object invoke(java.lang.Object)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition equal(java.util.Date)
com.kiosoft2.api.builder.BasicConditionRelationBuilder: BasicConditionRelationBuilder()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.room.RoomDatabase$Callback: RoomDatabase$Callback()
androidx.room.paging.LimitOffsetDataSource: void registerObserverIfNecessary()
androidx.sqlite.db.SupportSQLiteOpenHelper$Callback: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property access$getName$cp()
com.kiosoft2.common.cache.TaskCacheManager: java.lang.Object removeCacheTask(com.kiosoft2.common.task.model.TaskInfo,kotlin.coroutines.Continuation)
kotlin.jvm.internal.MutablePropertyReference1: kotlin.reflect.KMutableProperty$Setter getSetter()
androidx.room.MapInfo: java.lang.String keyColumn()
androidx.room.RoomTrackingLiveData: RoomTrackingLiveData(androidx.room.RoomDatabase,androidx.room.InvalidationLiveDataContainer,boolean,java.util.concurrent.Callable,java.lang.String[])
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition in(com.kiosoft2.api.builder.ChildQuery)
com.kiosoft2.api.builder.OpBuilder: OpBuilder(androidx.room.RoomDatabase,com.kiosoft2.api.Entity)
com.tencent.mmkv.MMKV: long createNB(int)
com.kiosoft2.common.task.annotions.RecurringTask: com.kiosoft2.common.task.annotions.TaskThread threadType()
com.kiosoft2.testdemo.bus.impl.ILifecycleOwner: ILifecycleOwner()
androidx.room.CoroutinesRoom$Companion$execute$2: java.lang.Object invokeSuspend(java.lang.Object)
com.kiosoft2.api.builder.ChildQuery: com.kiosoft2.api.builder.ChildQuery orderBy(com.kiosoft2.api.Property[],com.kiosoft2.api.type.OrderByType)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
com.kiosoft2.common.task.model.TaskInfo: java.lang.ref.WeakReference component9()
androidx.room.RoomSQLiteQuery: void close()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$2: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$2()
androidx.room.RoomSQLiteQuery: void bindNull(int)
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
com.kiosoft2.api.type.FuncType: com.kiosoft2.api.type.FuncType valueOf(java.lang.String)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: java.lang.String __TaskThread_enumToString(com.kiosoft2.common.task.annotions.TaskThread)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$11: kotlin.Unit call()
kotlin.jvm.internal.FunctionReference: FunctionReference(int)
androidx.room.AmbiguousColumnResolver$Solution: int getCoverageOffset()
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition notNull()
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition notIn(com.kiosoft2.api.builder.ChildQuery)
androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery copyFrom(androidx.sqlite.db.SupportSQLiteQuery)
androidx.room.IMultiInstanceInvalidationService$Stub: androidx.room.IMultiInstanceInvalidationService asInterface(android.os.IBinder)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.EntityUpsertionAdapter: EntityUpsertionAdapter(androidx.room.EntityInsertionAdapter,androidx.room.EntityDeletionOrUpdateAdapter)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition startWith(com.kiosoft2.api.builder.ChildQuery)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.room.BuiltInTypeConverters: androidx.room.BuiltInTypeConverters$State uuid()
com.kiosoft2.api.type.ConditionRelation: com.kiosoft2.api.type.ConditionRelation valueOf(java.lang.String)
com.kiosoft2.api.builder.QueryBuilder: com.kiosoft2.api.builder.Query build()
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition less(double)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition less(com.kiosoft2.api.builder.ChildQuery,byte[])
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$delete$1: java.lang.Object invoke(java.lang.Object)
androidx.room.paging.LimitOffsetDataSource: int countItems()
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
androidx.room.OnConflictStrategy$Companion: OnConflictStrategy$Companion()
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
com.kiosoft2.api.dao.Dao: int resultRowNum(androidx.sqlite.db.SupportSQLiteQuery)
com.kiosoft2.common.task.model.TaskInfo: java.lang.String component2()
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition greaterOrEqual(java.util.Date)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition equal(com.kiosoft2.api.builder.ChildQuery,com.kiosoft2.api.builder.ChildQuery)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.room.AutoClosingRoomOpenHelper: AutoClosingRoomOpenHelper(androidx.sqlite.db.SupportSQLiteOpenHelper,androidx.room.AutoCloser)
androidx.room.Junction: java.lang.Class value()
kotlinx.coroutines.CoroutineDispatcher: <clinit>()
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$cancelTask$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
com.kiosoft2.common.task.model.TaskInfo: void setRepeat(boolean)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: int getCount()
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: void setTextDirection(android.view.View,int)
com.kiosoft2.common.click.aspect.InterceptSingleTimeAspectJ: void aroundJoinPoint(org.aspectj.lang.ProceedingJoinPoint,com.kiosoft2.common.click.annotions.SingleTime)
androidx.room.AutoCloser: void setLastDecrementRefCountTimeStamp$room_runtime_release(long)
androidx.room.util.StringUtil: void getEMPTY_STRING_ARRAY$annotations()
com.kiosoft2.common.task.model.ParameterInfo: java.lang.String getValue()
androidx.room.CoroutinesRoom: kotlinx.coroutines.flow.Flow createFlow(androidx.room.RoomDatabase,boolean,java.lang.String[],java.util.concurrent.Callable)
com.kiosoft2.common.task.model.TaskInfo: com.kiosoft2.common.task.annotions.TaskThread getThreadType()
androidx.room.IMultiInstanceInvalidationCallback$Stub: androidx.room.IMultiInstanceInvalidationCallback asInterface(android.os.IBinder)
androidx.room.rxjava3.RxRoom$2: RxRoom$2(java.lang.String[],io.reactivex.rxjava3.core.ObservableEmitter)
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
androidx.room.QueryInterceptorDatabase: int delete(java.lang.String,java.lang.String,java.lang.Object[])
kotlin.jvm.internal.PropertyReference1: java.lang.Object getDelegate(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
androidx.room.util.FtsTableInfo: java.lang.String toString()
com.kiosoft2.api.builder.Query: java.util.List findIds()
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
androidx.room.DatabaseConfiguration: DatabaseConfiguration(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$MigrationContainer,java.util.List,boolean,androidx.room.RoomDatabase$JournalMode,java.util.concurrent.Executor,java.util.concurrent.Executor,boolean,boolean,boolean,java.util.Set,java.lang.String,java.io.File,java.util.concurrent.Callable,androidx.room.RoomDatabase$PrepackagedDatabaseCallback,java.util.List)
com.kiosoft2.testdemo.db.model.Book_: java.util.List access$getCompositePK_$cp()
com.kiosoft2.common.model.BaseLifecycleOwnerImpl$sam$androidx_lifecycle_Observer$0: int hashCode()
com.kiosoft2.common.click.ClickExe: ClickExe()
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
com.kiosoft2.common.cache.db.database.AppDataBase_Impl: java.util.List access$400(com.kiosoft2.common.cache.db.database.AppDataBase_Impl)
com.kiosoft2.api.builder.JoinBuilder: com.kiosoft2.api.builder.JoinBuilder leftJoin(com.kiosoft2.api.Entity)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$2: TaskInfoDao_Impl$2(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl,androidx.room.RoomDatabase)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition equal(com.kiosoft2.api.Property,byte[])
androidx.room.rxjava3.RxRoom$1: void onInvalidated(java.util.Set)
com.kiosoft2.api.Property: java.lang.String getTimeFormat()
com.kiosoft2.common.task.model.TaskInfo: int component7()
com.kiosoft2.api.statement.SelectSQL: java.util.List getArgumentList()
com.kiosoft2.common.task.helper.DelayedTaskHelper$start$1: void onNext(java.lang.Object)
androidx.room.QueryInterceptorStatement: void simpleQueryForLong$lambda$3(androidx.room.QueryInterceptorStatement)
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property access$getA1$cp()
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.room.QueryInterceptorOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase()
androidx.core.view.ViewCompat$Api16Impl: int getMinimumWidth(android.view.View)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: long insert(java.lang.String,int,android.content.ContentValues)
androidx.room.AutoCloser: void setAutoCloseCallback(java.lang.Runnable)
androidx.room.EntityInsertionAdapter: void insert(java.lang.Object)
com.kiosoft2.testdemo.db.model.Book_: void access$setAllProperties_$cp(java.util.List)
com.kiosoft2.common.task.util.TaskReLoadUtil: void reLoadStart(java.lang.Object,com.kiosoft2.common.task.model.TaskInfo,com.kiosoft2.common.task.interfaces.TaskReLoadCallback)
com.kiosoft2.common.cache.db.database.AppDataBase_Impl: java.util.List getAutoMigrations(java.util.Map)
androidx.appcompat.widget.SearchView: int getMaxWidth()
com.kiosoft2.common.bus.LiveDataBus: void LiveDataBus()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
androidx.appcompat.widget.AppCompatTextView: void setEmojiCompatEnabled(boolean)
com.kiosoft2.api.statement.element.Join: Join(com.kiosoft2.api.type.JoinType,com.kiosoft2.api.Entity,com.kiosoft2.api.statement.element.Condition)
androidx.room.paging.LimitOffsetDataSource: java.util.List convertRows(android.database.Cursor)
com.kiosoft2.testdemo.db.model.User: void setAddress(java.lang.String)
androidx.room.CoroutinesRoom$Companion$createFlow$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.kiosoft2.common.task.aspect.DelayedTaskAspectJ: com.kiosoft2.common.task.aspect.DelayedTaskAspectJ aspectOf()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
com.kiosoft2.api.statement.SQL: java.lang.String toString()
com.kiosoft2.common.thead.aspect.InterceptIOThreadAspectJ: void aroundJoinPoint$lambda$0(org.aspectj.lang.ProceedingJoinPoint)
androidx.room.QueryInterceptorDatabase: long getPageSize()
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1$1: void invoke()
com.kiosoft2.common.cache.TaskCacheManager$removeCacheTask$2: TaskCacheManager$removeCacheTask$2(com.kiosoft2.common.task.model.TaskInfo,kotlin.coroutines.Continuation)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
androidx.room.util.ViewInfo: androidx.room.util.ViewInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)
androidx.startup.InitializationProvider: InitializationProvider()
com.kiosoft2.api.statement.element.Expression: Expression(com.kiosoft2.api.statement.SelectSQL,com.kiosoft2.api.type.ExpressionType)
com.kiosoft2.common.task.model.TaskInfo: boolean isRepeat()
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.room.AutoClosingRoomOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getWritableDatabase()
com.tencent.mmkv.MMKV: void setLogReDirecting(boolean)
com.kiosoft2.common.task.util.TaskInfoRepository$insertTaskInfoList$2: TaskInfoRepository$insertTaskInfoList$2(com.kiosoft2.common.task.util.TaskInfoRepository,java.util.List,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
com.kiosoft2.common.thead.aspect.InterceptIOThreadAspectJ: <clinit>()
com.kiosoft2.api.builder.JoinBuilder: com.kiosoft2.api.condition.BasicCondition notIn(com.kiosoft2.api.Property,java.util.Collection)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
com.kiosoft2.common.task.util.TaskReLoadUtil$reLoadStart$1: TaskReLoadUtil$reLoadStart$1(com.kiosoft2.common.task.interfaces.TaskReLoadCallback,com.kiosoft2.common.task.model.TaskInfo)
androidx.room.SharedSQLiteStatement$stmt$2: androidx.sqlite.db.SupportSQLiteStatement invoke()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.kiosoft2.api.builder.SetBuilder: com.kiosoft2.api.builder.SetBuilder set(com.kiosoft2.api.Property,long)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: void setTextAlignment(android.view.View,int)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder setQueryCallback(androidx.room.RoomDatabase$QueryCallback,java.util.concurrent.Executor)
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
kotlin.jvm.internal.MutablePropertyReference1: MutablePropertyReference1()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1: RoomDatabaseKt$startTransactionCoroutine$2$1(kotlin.coroutines.CoroutineContext,kotlinx.coroutines.CancellableContinuation,androidx.room.RoomDatabase,kotlin.jvm.functions.Function2)
com.tencent.mmkv.MMKV: int pageSize()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.kiosoft2.api.helper.SQLiteHelper: java.lang.String generateUpdateSql(com.kiosoft2.api.statement.UpdateSQL)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition greaterOrEqual(com.kiosoft2.api.Property,long)
kotlin.jvm.internal.PropertyReference: boolean equals(java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
androidx.core.widget.TextViewCompat$Api16Impl: int getMaxLines(android.widget.TextView)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean isNull(int)
androidx.room.util.FtsTableInfo: java.lang.String[] access$getFTS_OPTIONS$cp()
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
androidx.room.QueryInterceptorOpenHelperFactory: QueryInterceptorOpenHelperFactory(androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,java.util.concurrent.Executor,androidx.room.RoomDatabase$QueryCallback)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.room.ColumnInfo$Companion: ColumnInfo$Companion()
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.room.RoomDatabase: void internalInitInvalidationTracker(androidx.sqlite.db.SupportSQLiteDatabase)
com.kiosoft2.common.router.ARouterOperator$Companion$instance$2: <clinit>()
androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
androidx.room.rxjava3.RxRoom: <clinit>()
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property access$getA2$cp()
com.kiosoft2.api.dao.Dao: java.util.List save(java.util.List)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$9: java.lang.Object call()
androidx.room.AutoCloser: int getRefCountForTest$room_runtime_release()
androidx.room.Database: java.lang.Class[] views()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
androidx.room.QueryInterceptorStatement: void execute$lambda$0(androidx.room.QueryInterceptorStatement)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
androidx.room.DeleteTable: java.lang.String tableName()
androidx.room.RoomSQLiteQuery: <clinit>()
com.kiosoft2.testdemo.db.model.User_: java.lang.String getTableName()
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean isLast()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition in(com.kiosoft2.api.builder.ChildQuery,com.kiosoft2.api.builder.ChildQuery)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setLocale$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setLocale$1(java.util.Locale)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager: com.kiosoft2.common.router.BundleManager withString(java.lang.String,java.lang.String)
com.kiosoft2.api.statement.element.GroupBy: GroupBy()
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
com.kiosoft2.common.thead.utils.AppExecutors$InstanceHolder: AppExecutors$InstanceHolder()
kotlin.jvm.internal.PropertyReference1: PropertyReference1(java.lang.Object)
kotlin.jvm.internal.PropertyReference1Impl: PropertyReference1Impl(kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
com.kiosoft2.api.builder.ChildQuery: com.kiosoft2.api.builder.ChildQuery max(com.kiosoft2.api.Property)
androidx.room.EntityUpsertionAdapter: void checkUniquenessException(android.database.sqlite.SQLiteConstraintException)
com.kiosoft2.common.task.model.TaskInfo: void setTaskId(java.lang.String)
androidx.room.InvalidationLiveDataContainer: void onActive(androidx.lifecycle.LiveData)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.kiosoft2.api.aparameter.AParameterManager$Companion: AParameterManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.room.AmbiguousColumnResolver: void dfs(java.util.List,java.util.List,int,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$5: TaskInfoDao_Impl$5(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl,androidx.room.RoomDatabase)
com.kiosoft2.common.cache.db.database.AppDataBase_Impl$1: void onPreMigrate(androidx.sqlite.db.SupportSQLiteDatabase)
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$start$1: TaskServiceImpl$start$1(com.kiosoft2.common.task.model.TaskInfo,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.kiosoft2.common.click.ClickExe: <clinit>()
com.kiosoft2.api.dao.Dao: int update(java.lang.Object)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition notIn(java.util.Collection)
com.kiosoft2.api.builder.ChildQuery: com.kiosoft2.api.statement.SelectSQL getSql()
com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager: com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager withBoolean(java.lang.String,boolean)
androidx.room.Room: Room()
androidx.room.InvalidationTracker$Companion: void getRESET_UPDATED_TABLES_SQL$room_runtime_release$annotations()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: java.lang.Object insertTaskInfo(com.kiosoft2.common.task.model.TaskInfo,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
androidx.room.ktx.R: R()
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
com.kiosoft2.api.statement.element.Expression: Expression(com.kiosoft2.api.type.ExpressionType,com.kiosoft2.api.statement.SelectSQL)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$8: TaskInfoDao_Impl$8(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl,com.kiosoft2.common.task.model.TaskInfo)
kotlinx.coroutines.android.HandlerDispatcher: HandlerDispatcher()
com.kiosoft2.common.task.helper.DelayedTaskHelper$start$1: DelayedTaskHelper$start$1(kotlin.jvm.internal.Ref$ObjectRef,com.kiosoft2.common.task.model.TaskInfo,java.lang.Object,com.kiosoft2.common.task.interfaces.JoinPointRunCallback)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition in(java.lang.Long[])
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0: boolean isCacheResumeStart()
com.kiosoft2.api.builder.ChildQuery: com.kiosoft2.api.builder.ChildQuery page(int,int)
androidx.room.RoomSQLiteQuery: void getDoubleBindings$annotations()
androidx.room.InvalidationTracker$ObservedTableTracker$Companion: InvalidationTracker$ObservedTableTracker$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kiosoft2.common.task.model.TaskInfo: long component13()
androidx.room.RoomSQLiteQuery$Companion$copyFrom$1: void clearBindings()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: long simpleQueryForLong()
com.kiosoft2.common.bus.LiveDataBus$BusMutableLiveData: void observeForever(androidx.lifecycle.Observer)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: EmptyActivityLifecycleCallbacks()
androidx.room.RoomDatabase$beginTransaction$1: java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase)
com.tencent.mmkv.MMKV: void lock()
com.tencent.mmkv.MMKV: java.lang.String decodeString(long,java.lang.String,java.lang.String)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notEqual(com.kiosoft2.api.Property,long)
com.kiosoft2.common.task.util.TimeUtil: TimeUtil()
androidx.room.TransactionElement$Key: TransactionElement$Key(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.fragment.app.Fragment: Fragment()
io.reactivex.rxjava3.core.BackpressureStrategy: io.reactivex.rxjava3.core.BackpressureStrategy[] values()
androidx.room.QueryInterceptorDatabase: void setPageSize(long)
com.kiosoft2.api.builder.Query: com.kiosoft2.api.builder.Query distinct()
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_DelayedTask$0: int taskCode()
com.kiosoft2.common.cache.TaskCacheManager: TaskCacheManager()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
androidx.appcompat.widget.AppCompatRadioButton: void setFilters(android.text.InputFilter[])
androidx.room.util.UUIDUtil: java.util.UUID convertByteToUUID(byte[])
androidx.room.QueryInterceptorDatabase: boolean isExecPerConnectionSQLSupported()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
androidx.room.util.RelationUtil: void recursiveFetchArrayMap(androidx.collection.ArrayMap,boolean,kotlin.jvm.functions.Function1)
androidx.sqlite.db.SupportSQLiteOpenHelper$Callback: <clinit>()
androidx.room.BuiltInTypeConverters$State: <clinit>()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition like(com.kiosoft2.api.builder.ChildQuery,java.lang.String)
com.kiosoft2.api.builder.QueryBuilder: com.kiosoft2.api.builder.ChildQuery buildChildQuery()
androidx.room.RoomWarnings: <clinit>()
com.kiosoft2.common.task.util.TaskManager: void setLifecycleMap(java.util.concurrent.ConcurrentHashMap)
androidx.room.IMultiInstanceInvalidationService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
androidx.room.TransactionExecutor: void execute$lambda$1$lambda$0(java.lang.Runnable,androidx.room.TransactionExecutor)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean moveToLast()
kotlin.jvm.internal.FunctionReference: boolean isOperator()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
com.kiosoft2.api.statement.SelectSQL: void setResultType(java.lang.Class)
androidx.room.CoroutinesRoom$Companion$execute$4$job$1: java.lang.Object invokeSuspend(java.lang.Object)
com.kiosoft2.common.task.model.TaskInfo: com.kiosoft2.common.task.model.TaskInfo copy$default(com.kiosoft2.common.task.model.TaskInfo,int,java.lang.String,java.lang.Class,java.lang.String,androidx.lifecycle.LifecycleOwner,java.lang.String,int,long,java.lang.ref.WeakReference,boolean,boolean,com.kiosoft2.common.task.annotions.TaskThread,long,long,long,java.util.concurrent.TimeUnit,boolean,int,java.lang.Object)
androidx.room.InvalidationTracker: void syncTriggers$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase)
com.kiosoft2.api.builder.OpBuilder: int deleteById(long)
androidx.room.EntityInsertionAdapter: java.lang.Long[] insertAndReturnIdsArrayBox(java.lang.Object[])
com.kiosoft2.testdemo.bus.impl.ILifecycleOwner: void onResume()
androidx.room.QueryInterceptorStatement: void bindNull(int)
androidx.room.rxjava3.RxRoom: io.reactivex.rxjava3.core.MaybeSource lambda$createObservable$5(io.reactivex.rxjava3.core.Maybe,java.lang.Object)
androidx.room.migration.MigrationKt: androidx.room.migration.Migration Migration(int,int,kotlin.jvm.functions.Function1)
com.kiosoft2.common.task.helper.DelayedTaskHelper: void start(java.lang.Object,com.kiosoft2.common.task.annotions.DelayedTask,com.kiosoft2.common.task.model.TaskInfo,com.kiosoft2.common.task.interfaces.JoinPointRunCallback)
com.kiosoft2.api.helper.SQLiteHelper: androidx.room.EntityDeletionOrUpdateAdapter getEntityUpdateAdapter(androidx.room.RoomDatabase,com.kiosoft2.api.Entity,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
io.reactivex.rxjava3.internal.disposables.DisposableHelper: io.reactivex.rxjava3.internal.disposables.DisposableHelper valueOf(java.lang.String)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$execute$1: java.lang.Object invoke(java.lang.Object)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
androidx.room.rxjava3.RxRoom: io.reactivex.rxjava3.core.Single createSingle(java.util.concurrent.Callable)
androidx.room.BuiltInTypeConverters: androidx.room.BuiltInTypeConverters$State enums()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.Object[])
androidx.room.QueryInterceptorStatement: int executeUpdateDelete()
com.kiosoft2.common.autoservice.ServiceLoad: <clinit>()
androidx.room.RoomTrackingLiveData: androidx.room.RoomDatabase getDatabase()
androidx.room.MultiInstanceInvalidationClient: void setService(androidx.room.IMultiInstanceInvalidationService)
com.kiosoft2.common.task.util.TaskInfoRepository$getCacheTaskListByOwerClassName$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.kiosoft2.api.statement.element.Condition: void applyWhereRelation(com.kiosoft2.api.type.ConditionRelation)
com.kiosoft2.common.task.util.TaskInfoRepository$getTaskInfoByTaskId$2: TaskInfoRepository$getTaskInfoByTaskId$2(com.kiosoft2.common.task.util.TaskInfoRepository,java.lang.String,kotlin.coroutines.Continuation)
com.kiosoft2.common.task.util.TaskInfoRepository: java.lang.Object getTaskList(kotlin.coroutines.Continuation)
androidx.room.util.TableInfo$ForeignKey: boolean equals(java.lang.Object)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$update$1: java.lang.Integer invoke(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.AmbiguousColumnResolver$Solution$Companion: AmbiguousColumnResolver$Solution$Companion()
com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager: com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager withSerializable(java.lang.String,java.io.Serializable)
androidx.room.EntityInsertionAdapter: java.util.List insertAndReturnIdsList(java.lang.Object[])
com.kiosoft2.api.statement.element.Condition: int argumentCount(com.kiosoft2.api.statement.element.Condition)
androidx.room.RoomDatabase: void close()
com.kiosoft2.common.task.model.TaskInfo: java.lang.Class component3()
com.kiosoft2.common.task.helper.DelayedTaskHelper$start$1: void onError(java.lang.Throwable)
com.kiosoft2.api.builder.SetBuilder: com.kiosoft2.api.builder.SetBuilder set(com.kiosoft2.api.Property,byte[])
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
kotlinx.coroutines.android.HandlerDispatcherKt: void access$updateChoreographerAndPostFrameCallback(kotlinx.coroutines.CancellableContinuation)
androidx.appcompat.widget.Toolbar: java.util.ArrayList getCurrentMenuItems()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: ProcessLifecycleOwner$attach$1(androidx.lifecycle.ProcessLifecycleOwner)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.kiosoft2.common.cache.TaskCacheManager: void setTaskInfoRepository(com.kiosoft2.common.task.util.TaskInfoRepository)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
androidx.room.util.StringUtil: java.util.List splitToIntList(java.lang.String)
androidx.room.AmbiguousColumnResolver$ResultColumn: AmbiguousColumnResolver$ResultColumn(java.lang.String,int)
androidx.room.QueryInterceptorDatabase: boolean needUpgrade(int)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
androidx.room.Relation: java.lang.String[] projection()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityStopped(android.app.Activity)
kotlinx.coroutines.android.HandlerContext: void invokeOnTimeout$lambda$3(kotlinx.coroutines.android.HandlerContext,java.lang.Runnable)
androidx.room.SQLiteCopyOpenHelper$createFrameworkOpenHelper$configuration$1: void onUpgrade(androidx.sqlite.db.SupportSQLiteDatabase,int,int)
androidx.room.AutoCloser: void setRefCount$room_runtime_release(int)
androidx.core.widget.TextViewCompat$Api17Impl: void setTextDirection(android.view.View,int)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
com.kiosoft2.common.task.model.MethodInfo: java.lang.String getMethouName()
androidx.room.ForeignKey$Companion: <clinit>()
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
androidx.room.InvalidationTracker: java.lang.String[] getTablesNames$room_runtime_release()
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.jvm.internal.MutablePropertyReference1Impl: MutablePropertyReference1Impl(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
com.kiosoft2.common.task.util.TimeUtil$WhenMappings: <clinit>()
com.kiosoft2.api.dao.Dao: java.lang.Long save(java.lang.Object)
com.kiosoft2.api.statement.element.Condition: java.util.List getConditionList()
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
com.kiosoft2.api.builder.ChildQuery: com.kiosoft2.api.builder.ChildQuery offset(int)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
androidx.room.QueryInterceptorProgram: void clearBindings()
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition equal(boolean)
com.kiosoft2.common.task.model.MethodInfo: void setOwerClassName(java.lang.Class)
com.kiosoft2.api.type.ExpressionType: com.kiosoft2.api.type.ExpressionType[] values()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition in(com.kiosoft2.api.builder.ChildQuery,java.lang.Long[])
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeUpdateDelete$1: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
androidx.room.MultiInstanceInvalidationClient: java.util.concurrent.Executor getExecutor()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property access$getA6$cp()
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
com.kiosoft2.common.thead.aspect.InterceptIOThreadAspectJ: void aroundJoinPoint(org.aspectj.lang.ProceedingJoinPoint,com.kiosoft2.common.thead.annotions.RunInIO)
androidx.room.AutoCloser: AutoCloser(long,java.util.concurrent.TimeUnit,java.util.concurrent.Executor)
androidx.lifecycle.LiveData: void changeActiveCounter(int)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$15: java.lang.Object call()
androidx.room.QueryInterceptorDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery)
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
com.kiosoft2.testdemo.db.model.Book_: void bindDeleteAdapterValue(androidx.sqlite.db.SupportSQLiteStatement,com.kiosoft2.testdemo.db.model.Book)
com.kiosoft2.common.router.BundleManager: com.kiosoft2.common.router.BundleManager withBoolean(java.lang.String,boolean)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
androidx.activity.ComponentActivity$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$cancelTask$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: java.lang.Object removeCacheTask(com.kiosoft2.common.task.model.TaskInfo,kotlin.coroutines.Continuation)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition less(long)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.kiosoft2.common.task.helper.DelayedTaskHelper: DelayedTaskHelper()
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.testdemo.db.model.User_ access$get_instance$cp()
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition greaterOrEqual(com.kiosoft2.api.builder.ChildQuery)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$15: TaskInfoDao_Impl$15(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl,androidx.room.RoomSQLiteQuery)
com.kiosoft2.common.task.interfaces.TaskInterface: void bindDisposable(com.kiosoft2.common.task.model.TaskInfo)
androidx.room.QueryInterceptorProgram: void saveArgsToCache(int,java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$attachedDbs$1: <clinit>()
androidx.room.QueryInterceptorDatabase: int update(java.lang.String,int,android.content.ContentValues,java.lang.String,java.lang.Object[])
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean moveToPrevious()
com.kiosoft2.common.cache.TaskCacheManager$removeCacheTask$2: java.lang.Object invokeSuspend(java.lang.Object)
com.kiosoft2.api.builder.OpBuilder: java.util.List find(java.lang.String[])
androidx.room.RoomSQLiteQuery: void bindString(int,java.lang.String)
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1: void onInvalidated(java.util.Set)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition notIn(java.lang.Long[])
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: boolean yieldIfContendedSafely()
androidx.room.EntityDeletionOrUpdateAdapter: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
com.tencent.mmkv.MMKV: void removeValueForKey(long,java.lang.String)
com.kiosoft2.testdemo.db.model.User: java.lang.Integer getA10()
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition notIn(java.lang.String[])
com.kiosoft2.common.click.aspect.InterceptSingleTimeAspectJ: <clinit>()
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
androidx.room.Update: java.lang.Class entity()
androidx.room.util.TableInfo$Column: void getAffinity$annotations()
com.tencent.mmkv.MMKVLogLevel: com.tencent.mmkv.MMKVLogLevel[] values()
androidx.sqlite.db.SupportSQLiteOpenHelper$Callback: void onDowngrade(androidx.sqlite.db.SupportSQLiteDatabase,int,int)
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(com.google.gson.reflect.TypeToken)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
com.kiosoft2.api.statement.element.Condition: java.util.List conditionList(com.kiosoft2.api.statement.element.Condition)
com.kiosoft2.common.thead.utils.AppExecutors$Companion: AppExecutors$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kiosoft2.apt.AParameter$$TestActivity05: AParameter$$TestActivity05()
com.kiosoft2.common.click.ClickExe: void setSafeOnClickListener$lambda$1(android.view.View$OnClickListener,android.view.View)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager: com.kiosoft2.common.router.BundleManager withBoolean(java.lang.String,boolean)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$2: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$2(int)
com.kiosoft2.common.task.util.TaskManager$taskActivityLifecycleHelper$1: com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper invoke()
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: void setNotificationUris(android.content.ContentResolver,java.util.List)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryRegisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
androidx.room.MapInfo: java.lang.String valueTable()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition greater(com.kiosoft2.api.Property,com.kiosoft2.api.builder.ChildQuery)
androidx.appcompat.widget.AppCompatSpinner$Api17Impl: int getTextAlignment(android.view.View)
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
androidx.room.Update: int onConflict()
kotlinx.coroutines.CoroutineDispatcher: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
androidx.room.QueryInterceptorProgram: java.util.List getBindArgsCache$room_runtime_release()
androidx.room.CoroutinesRoom$Companion$execute$4$job$1: CoroutinesRoom$Companion$execute$4$job$1(java.util.concurrent.Callable,kotlinx.coroutines.CancellableContinuation,kotlin.coroutines.Continuation)
androidx.room.InvalidationTracker: java.lang.String[] resolveViews(java.lang.String[])
androidx.room.util.DBUtil: int readVersion(java.io.File)
com.kiosoft2.api.statement.element.Condition: com.kiosoft2.api.statement.element.Condition inId(com.kiosoft2.api.Property,java.lang.Object[])
com.kiosoft2.common.thead.utils.AppExecutors: AppExecutors(java.util.concurrent.Executor,java.util.concurrent.Executor,java.util.concurrent.Executor,java.util.concurrent.ScheduledExecutorService)
androidx.room.MultiInstanceInvalidationClient$serviceConnection$1: MultiInstanceInvalidationClient$serviceConnection$1(androidx.room.MultiInstanceInvalidationClient)
com.kiosoft2.api.BuildConfig: <clinit>()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.kiosoft2.api.builder.JoinBuilder: com.kiosoft2.api.builder.JoinBuilder like(com.kiosoft2.api.Property,com.kiosoft2.api.Property)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
androidx.room.MultiInstanceInvalidationService$callbackList$1: void onCallbackDied(android.os.IInterface,java.lang.Object)
androidx.core.widget.TextViewCompat$Api17Impl: int getTextDirection(android.view.View)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.kiosoft2.common.cache.TaskCacheManager: <clinit>()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: long getMaximumSize()
com.kiosoft2.common.cache.TaskCacheManager: com.kiosoft2.common.cache.db.database.AppDataBase getDb()
androidx.core.view.ViewCompat$Api16Impl: boolean hasTransientState(android.view.View)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.kiosoft2.common.click.utils.ClickUtil: boolean isFastDoubleClick()
androidx.room.AmbiguousColumnResolver$ResultColumn: androidx.room.AmbiguousColumnResolver$ResultColumn copy$default(androidx.room.AmbiguousColumnResolver$ResultColumn,java.lang.String,int,int,java.lang.Object)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
kotlinx.coroutines.android.HandlerDispatcherKt: void postFrameCallback$lambda$6(kotlinx.coroutines.CancellableContinuation,long)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeUpdateDelete$1: java.lang.Integer invoke(androidx.sqlite.db.SupportSQLiteStatement)
com.kiosoft2.testdemo.db.model.User: java.lang.Byte getA8()
androidx.room.MapInfo: java.lang.String valueColumn()
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0: TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0(int,com.kiosoft2.common.task.annotions.TaskThread,long,long,long,java.util.concurrent.TimeUnit,boolean,boolean,boolean)
kotlinx.coroutines.android.HandlerContext: int hashCode()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition lessOrEqual(com.kiosoft2.api.builder.ChildQuery,double)
com.kiosoft2.api.statement.SelectSQL: int getArgumentCount()
com.kiosoft2.common.thead.utils.AppExecutors$DiskIOThreadExecutor: void execute(java.lang.Runnable)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.activity.OnBackPressedDispatcher$Api33Impl: void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object)
androidx.room.paging.LimitOffsetDataSource: java.util.List loadRange(int,int)
androidx.room.InvalidationTracker: <clinit>()
androidx.core.view.ViewCompat$Api17Impl: void setLabelFor(android.view.View,int)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
com.kiosoft2.api.EntityManager$Companion: void setEntityMap(java.util.HashMap)
com.kiosoft2.api.dao.Dao: int update(java.lang.Object[])
androidx.room.util.TableInfoKt: androidx.room.util.TableInfo readTableInfo(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setEnterTransition(android.widget.PopupWindow,android.transition.Transition)
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType[] values()
androidx.room.RoomDatabase: java.util.concurrent.Executor getTransactionExecutor()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$9: kotlin.Unit call()
com.kiosoft2.api.builder.JoinBuilder: com.kiosoft2.api.builder.QueryBuilder query()
androidx.room.CoroutinesRoomKt: kotlinx.coroutines.CoroutineDispatcher getTransactionDispatcher(androidx.room.RoomDatabase)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: java.lang.Object insertTaskInfoList(java.util.List,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatCheckedTextView: void setEmojiCompatEnabled(boolean)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$1(java.lang.String)
com.kiosoft2.api.builder.ChildQuery: com.kiosoft2.api.builder.ChildQuery min(com.kiosoft2.api.Property)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: int getColumnCount()
androidx.room.TransactionElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)
com.kiosoft2.testdemo.activity.OverLineEdixView: void setOnOverLineChangerListener(com.kiosoft2.testdemo.activity.OverLineEdixView$OnOverLineChangerListener)
androidx.room.TransactionElement: kotlin.coroutines.CoroutineContext$Key getKey()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getDefault()
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_DelayedTask$0: java.lang.String toString()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
androidx.core.widget.TextViewCompat$Api16Impl: boolean getIncludeFontPadding(android.widget.TextView)
com.kiosoft2.api.Entity: com.kiosoft2.api.Property getIdProperty()
androidx.room.util.TableInfo$Column: int hashCode()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.alibaba.fastjson2.PropertyNamingStrategy: com.alibaba.fastjson2.PropertyNamingStrategy valueOf(java.lang.String)
androidx.room.IMultiInstanceInvalidationCallback$Default: IMultiInstanceInvalidationCallback$Default()
androidx.room.EntityUpsertionAdapter: java.util.List upsertAndReturnIdsList(java.util.Collection)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notIn(com.kiosoft2.api.Property,java.lang.Long[])
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
androidx.room.SQLiteCopyOpenHelperFactory: SQLiteCopyOpenHelperFactory(java.lang.String,java.io.File,java.util.concurrent.Callable,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory)
com.kiosoft2.api.builder.OpBuilder: int delete(java.lang.Object)
androidx.room.EntityInsertionAdapter: java.util.List insertAndReturnIdsList(java.util.Collection)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: java.util.concurrent.TimeUnit __TimeUnit_stringToEnum(java.lang.String)
androidx.room.MultiInstanceInvalidationClient$1: void onInvalidated(java.util.Set)
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
androidx.room.IMultiInstanceInvalidationService$Stub$Proxy: void broadcastInvalidation(int,java.lang.String[])
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
kotlin.jvm.internal.MutablePropertyReference1Impl: MutablePropertyReference1Impl(java.lang.Class,java.lang.String,java.lang.String,int)
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notEqual(com.kiosoft2.api.Property,boolean)
androidx.room.AmbiguousColumnResolver: void dfs$default(androidx.room.AmbiguousColumnResolver,java.util.List,java.util.List,int,kotlin.jvm.functions.Function1,int,java.lang.Object)
com.kiosoft2.api.statement.element.Condition: boolean isValid()
androidx.room.AmbiguousColumnResolver: <clinit>()
androidx.core.view.ViewPropertyAnimatorCompat$Api19Impl: android.view.ViewPropertyAnimator setUpdateListener(android.view.ViewPropertyAnimator,android.animation.ValueAnimator$AnimatorUpdateListener)
com.kiosoft2.api.helper.SQLiteHelper: androidx.room.EntityInsertionAdapter newEntityInsertionAdapter(androidx.room.RoomDatabase,com.kiosoft2.api.Entity,int)
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$start$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.room.RoomDatabase$MigrationContainer: java.util.Map getMigrations()
com.tencent.mmkv.MMKV: byte[] decodeBytes(long,java.lang.String)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition lessOrEqual(com.kiosoft2.api.builder.ChildQuery)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$13: TaskInfoDao_Impl$13(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl,java.lang.String)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setForeignKeyConstraintsEnabled$1: java.lang.Object invoke(java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: void setExtras(android.os.Bundle)
androidx.room.IMultiInstanceInvalidationService$Default: void broadcastInvalidation(int,java.lang.String[])
com.kiosoft2.common.task.aspect.DelayedTaskAspectJ: void aroundJoinPoint(org.aspectj.lang.ProceedingJoinPoint,com.kiosoft2.common.task.annotions.DelayedTask)
com.kiosoft2.api.builder.OpBuilder: int update(java.lang.Object)
com.kiosoft2.common.click.aspect.InterceptSingleTimeAspectJ: void requestSingleTimeMethod(com.kiosoft2.common.click.annotions.SingleTime)
androidx.room.DatabaseConfiguration: DatabaseConfiguration(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$MigrationContainer,java.util.List,boolean,androidx.room.RoomDatabase$JournalMode,java.util.concurrent.Executor,java.util.concurrent.Executor,android.content.Intent,boolean,boolean,java.util.Set,java.lang.String,java.io.File,java.util.concurrent.Callable,androidx.room.RoomDatabase$PrepackagedDatabaseCallback,java.util.List,java.util.List)
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_DelayedTask$0: java.lang.Class annotationType()
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken get(java.lang.reflect.Type)
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
androidx.room.OnConflictStrategy$Companion: <clinit>()
com.kiosoft2.common.cache.TaskCacheManager$cacheTask$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.kiosoft2.api.type.ConditionRelation: ConditionRelation(java.lang.String,int)
kotlin.jvm.internal.PropertyReference: PropertyReference(java.lang.Object)
com.kiosoft2.common.task.model.TaskInfo: java.lang.String component6()
com.kiosoft2.api.dao.Dao: int delete(java.lang.Object)
com.kiosoft2.common.task.model.TaskInfo: void cancleTask()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition notEqual(double)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder createFromAsset(java.lang.String)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition regExp(com.kiosoft2.api.builder.ChildQuery)
com.kiosoft2.api.Entity: java.lang.Class getEntityClass()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
com.kiosoft2.common.router.BundleManager: com.kiosoft2.common.router.BundleManager withString(java.lang.String,java.lang.String)
androidx.room.QueryInterceptorDatabase: void setMaxSqlCacheSize(int)
com.kiosoft2.api.builder.JoinBuilder: com.kiosoft2.api.builder.JoinBuilder less(com.kiosoft2.api.Property,com.kiosoft2.api.Property)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_DelayedTask$0: com.kiosoft2.common.task.annotions.TaskThread threadType()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$12: java.lang.Object call()
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
kotlin.jvm.internal.CallableReference: <clinit>()
com.kiosoft2.testdemo.db.model.Book_: java.lang.Class getEntityClass()
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.room.RoomSQLiteQuery: RoomSQLiteQuery(int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.room.util.TableInfo$ForeignKeyWithSequence: int compareTo(java.lang.Object)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
com.kiosoft2.api.utils.Utils: java.lang.Object toObject(java.lang.Object,java.lang.Class)
com.kiosoft2.common.cache.TaskCacheManager: void refreshCacheTaskList(java.util.concurrent.CopyOnWriteArrayList)
androidx.room.QueryInterceptorDatabase: boolean inTransaction()
com.kiosoft2.common.task.util.TaskInfoRepository$insertOrUpdateTaskInfo$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder fallbackToDestructiveMigrationFrom(int[])
androidx.room.RoomSQLiteQuery: void release()
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean)
androidx.room.InvalidationTracker: void syncTriggers$room_runtime_release()
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.view.ViewCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
com.kiosoft2.common.task.util.TaskInfoRepository$updateTaskInfo$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale forLocale(java.util.Locale)
com.kiosoft2.common.autoservice.aspect.TaskServiceBindAspect$Companion: TaskServiceBindAspect$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.room.Entity: boolean inheritSuperIndices()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
com.kiosoft2.api.builder.ChildQuery: com.kiosoft2.api.builder.ChildQuery orderBy(com.kiosoft2.api.Property)
androidx.room.Index$Order: androidx.room.Index$Order valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.room.InvalidationTracker: InvalidationTracker(androidx.room.RoomDatabase,java.util.Map,java.util.Map,java.lang.String[])
com.ubix.kiosoft2.db.DBOperator: DBOperator()
com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager: void navigation(android.app.Activity,boolean)
androidx.room.util.TableInfoKt: androidx.room.util.TableInfo$Index readIndex(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String,boolean)
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
kotlinx.coroutines.CoroutineDispatcher: java.lang.String toString()
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.room.AutoCloser: void closeDatabaseIfOpen()
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: int getMaxLines(android.widget.TextView)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
androidx.room.Entity: androidx.room.Index[] indices()
androidx.room.rxjava3.RxRoom: void lambda$createObservable$4(java.lang.String[],androidx.room.RoomDatabase,io.reactivex.rxjava3.core.ObservableEmitter)
androidx.room.RoomTrackingLiveData: void onInactive()
com.kiosoft2.common.task.aspect.DelayedTaskAspectJ$Companion: com.kiosoft2.common.task.aspect.DelayedTaskAspectJ aspectOf()
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.kiosoft2.common.task.util.TaskManager$removeTask$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
com.kiosoft2.common.task.model.TaskInfo: long component14()
com.kiosoft2.common.router.BundleManager: com.kiosoft2.common.router.BundleManager withSerializable(java.lang.String,java.io.Serializable)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1$job$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notEqual(com.kiosoft2.api.builder.ChildQuery,double)
kotlin.jvm.internal.Lambda: java.lang.String toString()
com.kiosoft2.common.task.model.TaskInfo: java.lang.Class getAnnotationClass()
androidx.room.MultiInstanceInvalidationClient: void setUpRunnable$lambda$1(androidx.room.MultiInstanceInvalidationClient)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition lessOrEqual(com.kiosoft2.api.Property,long)
androidx.room.InvalidationTracker$ObservedTableTracker: <clinit>()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
com.kiosoft2.api.dao.Dao: Dao()
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
com.kiosoft2.common.router.ARouterOperator: ARouterOperator()
com.kiosoft2.common.router.ARouterOperator$Companion: com.kiosoft2.common.router.ARouterOperator getInstance()
com.kiosoft2.common.task.util.TaskInfoRepository$insertTaskInfo$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.kiosoft2.api.helper.SQLiteHelper: void bindPropertyValue(com.kiosoft2.api.Property,androidx.sqlite.db.SupportSQLiteProgram,int,java.lang.Object)
androidx.room.QueryInterceptorProgram: void close()
com.kiosoft2.api.Property: com.kiosoft2.api.Property dateTime()
com.kiosoft2.common.task.annotions.DelayedTask: boolean isReStart()
androidx.room.EntityInsertionAdapter: long[] insertAndReturnIdsArray(java.lang.Object[])
org.checkerframework.checker.formatter.qual.ConversionCategory: org.checkerframework.checker.formatter.qual.ConversionCategory valueOf(java.lang.String)
androidx.room.util.ViewInfo: int hashCode()
androidx.appcompat.widget.SearchView$Api29Impl: void setInputMethodMode(androidx.appcompat.widget.SearchView$SearchAutoComplete,int)
com.kiosoft2.common.cache.db.database.AppDataBase_Impl: AppDataBase_Impl()
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.room.AutoCloser: void init(androidx.sqlite.db.SupportSQLiteOpenHelper)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition isNull()
com.kiosoft2.common.task.util.TaskInfoRepository: java.lang.Object getCacheTaskListByOwerClassName(java.lang.String,kotlin.coroutines.Continuation)
com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager: java.lang.Object navigation(androidx.fragment.app.Fragment,boolean)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable getReflected()
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
androidx.room.MultiInstanceInvalidationClient$1: MultiInstanceInvalidationClient$1(androidx.room.MultiInstanceInvalidationClient,java.lang.String[])
com.tencent.mmkv.MMKV: boolean encodeString(long,java.lang.String,java.lang.String)
androidx.sqlite.db.SupportSQLiteOpenHelper$Callback: void onConfigure(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
androidx.room.SQLiteCopyOpenHelper: void verifyDatabaseFile(boolean)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.kiosoft2.api.utils.Utils: com.alibaba.fastjson2.JSONObject toJSONObject(java.lang.Object)
androidx.room.InvalidationTracker$ObservedTableTracker: boolean onAdded(int[])
com.kiosoft2.testdemo.db.model.User: java.lang.Long getA7()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: void bindLong(int,long)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: java.lang.Object executeSqliteStatementWithRefCount(kotlin.jvm.functions.Function1)
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0: boolean isReStart()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0: int hashCode()
com.kiosoft2.common.router.ARouterOperator$Companion$instance$2: ARouterOperator$Companion$instance$2()
androidx.core.os.LocaleListCompat$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
com.kiosoft2.api.aparameter.AParameterManager: <clinit>()
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.kiosoft2.testdemo.db.model.User_: void access$setCompositePK_$cp(java.util.List)
com.kiosoft2.common.task.util.TaskInfoRepository$insertTaskInfoList$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.RoomSQLiteQuery$Companion: RoomSQLiteQuery$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.room.TransactionExecutor: void execute(java.lang.Runnable)
androidx.room.QueryInterceptorDatabase: boolean yieldIfContendedSafely(long)
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$inTransaction$1: java.lang.Object invoke(java.lang.Object)
com.kiosoft2.common.task.model.TaskInfo: long getPeriod()
com.kiosoft2.common.thead.aspect.InterceptMainThreadAspectJ$Companion: com.kiosoft2.common.thead.aspect.InterceptMainThreadAspectJ aspectOf()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: void unregisterDataSetObserver(android.database.DataSetObserver)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
androidx.room.CoroutinesRoom$Companion$execute$2: CoroutinesRoom$Companion$execute$2(java.util.concurrent.Callable,kotlin.coroutines.Continuation)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: java.util.List getRequiredConverters()
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_DelayedTask$0: int hashCode()
androidx.room.Database: androidx.room.AutoMigration[] autoMigrations()
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.room.IMultiInstanceInvalidationService$Stub$Proxy: int registerCallback(androidx.room.IMultiInstanceInvalidationCallback,java.lang.String)
com.kiosoft2.api.BuildConfig: BuildConfig()
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: void registerContentObserver(android.database.ContentObserver)
androidx.room.QueryInterceptorProgram: void bindDouble(int,double)
com.tencent.mmkv.MMKV: int onMMKVFileLengthError(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
androidx.room.OnConflictStrategy$Companion: void getFAIL$annotations()
androidx.lifecycle.SavedStateHandlesVM: SavedStateHandlesVM()
androidx.room.EntityUpsertionAdapter: java.lang.Long[] upsertAndReturnIdsArrayBox(java.lang.Object[])
androidx.room.RoomSQLiteQuery$Companion$copyFrom$1: void bindDouble(int,double)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: boolean needUpgrade(int)
com.kiosoft2.testdemo.db.model.Book_: java.util.List getAllProperties()
com.kiosoft2.api.RoomOperator: RoomOperator()
androidx.room.QueryInterceptorDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal)
androidx.room.FtsOptions: <clinit>()
kotlinx.coroutines.MainCoroutineDispatcher: MainCoroutineDispatcher()
androidx.room.SQLiteCopyOpenHelper$createFrameworkOpenHelper$configuration$1: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
com.kiosoft2.common.task.model.TaskInfo: long getTime()
com.kiosoft2.api.builder.OpBuilder: int deleteAll()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
com.kiosoft2.common.cache.TaskCacheManager: java.lang.Object getCacheTaskListByOwerClassName(java.lang.String,kotlin.coroutines.Continuation)
androidx.room.RoomDatabase: void beginTransaction()
androidx.room.AutoCloser: <clinit>()
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: void postFrameCallback(java.lang.Runnable)
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
com.kiosoft2.api.builder.OpBuilder: com.kiosoft2.api.builder.JoinBuilder leftJoin(com.kiosoft2.api.Entity)
androidx.appcompat.widget.Toolbar: void setTitle(int)
androidx.room.RenameTable$Entries: androidx.room.RenameTable[] value()
com.kiosoft2.common.model.BaseLifecycleOwnerImpl$1: <clinit>()
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
androidx.lifecycle.LiveData: int getVersion()
com.kiosoft2.api.type.FuncType: com.kiosoft2.api.type.FuncType[] values()
androidx.lifecycle.MutableLiveData: void postValue(java.lang.Object)
com.kiosoft2.common.task.util.TaskInfoRepository$insertTaskInfo$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlinx.coroutines.android.HandlerDispatcherKt$awaitFrameSlowPath$lambda$3$$inlined$Runnable$1: HandlerDispatcherKt$awaitFrameSlowPath$lambda$3$$inlined$Runnable$1(kotlinx.coroutines.CancellableContinuation)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.room.RoomDatabase$Companion: RoomDatabase$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
kotlin.jvm.internal.FunctionReference: int getArity()
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$1: java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase)
com.kiosoft2.common.click.aspect.InterceptSingleTimeAspectJ$Companion: com.kiosoft2.common.click.aspect.InterceptSingleTimeAspectJ aspectOf()
androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)
com.kiosoft2.common.task.util.TaskInfoRepository$updateTaskInfo$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.lifecycle.LifecycleDestroyedException: LifecycleDestroyedException()
androidx.room.util.TableInfo$Column$Companion: boolean containsSurroundingParenthesis(java.lang.String)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isReadOnly$1: <clinit>()
com.kiosoft2.common.task.model.TaskInfo: boolean component17()
kotlin.jvm.internal.PropertyReference: kotlin.reflect.KProperty getReflected()
com.kiosoft2.common.task.util.TaskInfoRepository$getTaskList$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.room.CoroutinesRoom$Companion$createFlow$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable computeReflected()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getChild(android.graphics.drawable.DrawableContainer$DrawableContainerState,int)
com.kiosoft2.common.task.util.TaskManager$removeTask$2$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
kotlin.jvm.internal.FunctionReference: boolean isInline()
androidx.room.util.TableInfoKt: java.util.List readForeignKeyFieldMappings(android.database.Cursor)
androidx.room.TransactionExecutor: void scheduleNext()
androidx.core.view.ViewCompat$Api17Impl: int getLabelFor(android.view.View)
androidx.room.util.FtsTableInfo: androidx.room.util.FtsTableInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
kotlinx.coroutines.android.HandlerDispatcherKt: void postFrameCallback(android.view.Choreographer,kotlinx.coroutines.CancellableContinuation)
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
androidx.room.RoomOpenHelper: RoomOpenHelper(androidx.room.DatabaseConfiguration,androidx.room.RoomOpenHelper$Delegate,java.lang.String,java.lang.String)
com.kiosoft2.common.task.util.TaskInfoRepository$insertOrUpdateTaskInfo$2: TaskInfoRepository$insertOrUpdateTaskInfo$2(com.kiosoft2.common.task.util.TaskInfoRepository,com.kiosoft2.common.task.model.TaskInfo,kotlin.coroutines.Continuation)
androidx.room.util.FtsTableInfo$Companion: FtsTableInfo$Companion()
com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager: java.lang.Object navigation(androidx.fragment.app.Fragment)
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1: void run()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
androidx.room.AmbiguousColumnResolver$Solution: AmbiguousColumnResolver$Solution(java.util.List,int,int)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$1: TaskInfoDao_Impl$1(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl,androidx.room.RoomDatabase)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: java.lang.Object removeTaskInfoByTaskId(java.lang.String,kotlin.coroutines.Continuation)
com.kiosoft2.common.task.util.TaskInfoRepository$updateTaskInfoList$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDbLockedByCurrentThread$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDbLockedByCurrentThread$1()
androidx.room.RenameColumn: java.lang.String toColumnName()
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
com.kiosoft2.testdemo.db.model.Book: Book()
com.kiosoft2.api.dao.Dao: java.lang.Long insert(java.lang.Object)
com.kiosoft2.common.cache.db.database.AppDataBase_Impl: void clearAllTables()
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
kotlinx.coroutines.android.HandlerDispatcherKt: void getMain$annotations()
androidx.room.FtsOptions$Order: <clinit>()
com.kiosoft2.api.helper.SQLiteHelper: androidx.room.EntityDeletionOrUpdateAdapter newEntityUpdateAdapter(androidx.room.RoomDatabase,com.kiosoft2.api.Entity,int)
androidx.appcompat.widget.AppCompatButton: void setAllCaps(boolean)
com.kiosoft2.common.cache.db.dao.TaskInfoDao$DefaultImpls: java.lang.Object insertOrUpdateTaskInfo(com.kiosoft2.common.cache.db.dao.TaskInfoDao,com.kiosoft2.common.task.model.TaskInfo,kotlin.coroutines.Continuation)
androidx.room.rxjava3.RxRoom: void lambda$createFlowable$0(androidx.room.RoomDatabase,androidx.room.InvalidationTracker$Observer)
com.kiosoft2.common.cache.db.database.AppDataBase_Impl: androidx.sqlite.db.SupportSQLiteOpenHelper createOpenHelper(androidx.room.DatabaseConfiguration)
androidx.room.QueryInterceptorDatabase: long insert(java.lang.String,int,android.content.ContentValues)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
com.kiosoft2.common.thead.utils.AppExecutors: java.util.concurrent.Executor networkIO()
kotlin.jvm.internal.FunctionReference: int hashCode()
androidx.room.Database: java.lang.Class[] entities()
androidx.appcompat.widget.AppCompatImageButton: void setImageLevel(int)
androidx.room.IMultiInstanceInvalidationCallback$Stub$Proxy: android.os.IBinder asBinder()
androidx.room.Room: java.lang.Object getGeneratedImplementation(java.lang.Class,java.lang.String)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$17: java.lang.Object call()
androidx.room.InvalidationTracker: InvalidationTracker(androidx.room.RoomDatabase,java.lang.String[])
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
kotlin.jvm.internal.MutablePropertyReference: MutablePropertyReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.room.FtsOptions$MatchInfo: androidx.room.FtsOptions$MatchInfo[] $values()
com.kiosoft2.common.task.model.TaskInfo: java.lang.String getTaskId()
com.kiosoft2.api.builder.Query: com.kiosoft2.api.builder.Query offset(int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
androidx.room.MultiInstanceInvalidationClient: java.lang.String getName()
androidx.room.paging.LimitOffsetDataSource: LimitOffsetDataSource(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,java.lang.String[])
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$needUpgrade$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$needUpgrade$1(int)
androidx.room.util.TableInfo$Column: boolean equals(java.lang.Object)
com.kiosoft2.testdemo.db.model.User: java.lang.String getAddress()
androidx.room.migration.Migration: Migration(int,int)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition equal(com.kiosoft2.api.Property,double)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
androidx.room.InvalidationTracker$ObserverWrapper: void notifyByTableNames$room_runtime_release(java.lang.String[])
com.tencent.mmkv.MMKV: int onMMKVCRCCheckFail(java.lang.String)
com.kiosoft2.common.cache.TaskCacheManager$getCacheTaskListByOwerClassNameAndTaskId$2: java.lang.Object invokeSuspend(java.lang.Object)
com.kiosoft2.common.cache.db.dao.TaskInfoDao: java.lang.Object insertOrUpdateTaskInfo(com.kiosoft2.common.task.model.TaskInfo,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$attachedDbs$1: java.util.List invoke(androidx.sqlite.db.SupportSQLiteDatabase)
com.kiosoft2.common.cache.db.dao.TaskInfoDao: java.lang.Object updateTaskInfo(com.kiosoft2.common.task.model.TaskInfo,kotlin.coroutines.Continuation)
com.kiosoft2.common.cache.db.dao.TaskInfoDao: java.lang.Object insertTaskInfoList(java.util.List,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pokeOpen$1: java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addAutoMigrationSpec(androidx.room.migration.AutoMigrationSpec)
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0: boolean isRepeat()
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase build()
androidx.room.AmbiguousColumnResolver$Solution: int compareTo(androidx.room.AmbiguousColumnResolver$Solution)
androidx.room.IMultiInstanceInvalidationCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
androidx.room.RoomDatabaseKt: kotlin.coroutines.CoroutineContext createTransactionContext(androidx.room.RoomDatabase,kotlin.coroutines.ContinuationInterceptor)
androidx.room.CoroutinesRoom: java.lang.Object execute(androidx.room.RoomDatabase,boolean,android.os.CancellationSignal,java.util.concurrent.Callable,kotlin.coroutines.Continuation)
kotlin.jvm.internal.PropertyReference: kotlin.reflect.KCallable getReflected()
com.kiosoft2.common.task.util.TaskManager$removeTask$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.InvalidationTracker$Companion: InvalidationTracker$Companion()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: java.util.concurrent.TimeUnit access$900(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl,java.lang.String)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
com.kiosoft2.api.builder.JoinBuilder: com.kiosoft2.api.builder.JoinBuilder in(com.kiosoft2.api.Property,java.util.Collection)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setMaximumSize$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setMaximumSize$1(long)
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$start$2: void onReLoadStart(com.kiosoft2.common.task.model.TaskInfo)
androidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement access$createNewStatement(androidx.room.SharedSQLiteStatement)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
androidx.room.RoomSQLiteQuery: void clearBindings()
com.kiosoft2.api.type.ExpressionType: <clinit>()
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement(java.lang.String,androidx.room.AutoCloser)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notIn(com.kiosoft2.api.Property,java.lang.String[])
com.kiosoft2.api.builder.OpBuilder: com.kiosoft2.api.builder.DeleteBuilder deleteBuilder()
com.kiosoft2.common.task.util.TaskManager$isExistTask$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlinx.coroutines.android.HandlerDispatcher: void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation)
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
androidx.room.OnConflictStrategy: <clinit>()
androidx.room.rxjava3.RxRoom: io.reactivex.rxjava3.core.MaybeSource lambda$createFlowable$2(io.reactivex.rxjava3.core.Maybe,java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$maximumSize$1: java.lang.Object get(java.lang.Object)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition less(java.lang.String)
androidx.room.MultiInstanceInvalidationService: java.util.Map getClientNames$room_runtime_release()
androidx.room.InvalidationTracker$ObserverWrapper: InvalidationTracker$ObserverWrapper(androidx.room.InvalidationTracker$Observer,int[],java.lang.String[])
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: double getDouble(int)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
androidx.core.widget.PopupWindowCompat$Api19Impl: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager: void navigation(android.app.Activity,java.lang.Integer,boolean)
com.kiosoft2.common.task.model.TaskInfo: void setLifecycleOwner(androidx.lifecycle.LifecycleOwner)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.os.TraceCompat$Api18Impl: void endSection()
com.kiosoft2.api.Property: com.kiosoft2.api.type.FuncType getFuncType()
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0: long time()
com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper$onActivityCreated$1$1$1: TaskActivityLifecycleHelper$onActivityCreated$1$1$1(android.app.Activity)
com.kiosoft2.testdemo.db.model.User: void setA2(long)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
androidx.room.Entity: java.lang.String[] ignoredColumns()
androidx.appcompat.widget.AppCompatTextHelper$Api17Impl: void setTextLocale(android.widget.TextView,java.util.Locale)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
androidx.room.AutoCloser: java.lang.Object executeRefCountingFunction(kotlin.jvm.functions.Function1)
androidx.room.RoomSQLiteQuery: java.lang.String getSql()
com.kiosoft2.api.builder.OpBuilder: com.kiosoft2.api.builder.QueryBuilder query(com.kiosoft2.api.Property[])
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.room.RoomTrackingLiveData: void refreshRunnable$lambda$0(androidx.room.RoomTrackingLiveData)
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int,android.widget.TextView,android.text.TextPaint,androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl)
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
androidx.lifecycle.LiveData: void postValue(java.lang.Object)
com.kiosoft2.api.statement.element.Expression: Expression(com.kiosoft2.api.Property,com.kiosoft2.api.type.ExpressionType,com.kiosoft2.api.statement.SelectSQL)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: java.lang.String access$getSql$p(androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement)
com.kiosoft2.common.task.util.TaskManager$taskActivityLifecycleHelper$1: <clinit>()
com.kiosoft2.common.cache.db.dao.TaskInfoDao: java.lang.Object insertTaskInfo(com.kiosoft2.common.task.model.TaskInfo,kotlin.coroutines.Continuation)
com.kiosoft2.common.cache.TaskCacheManager: java.util.List getCacheTaskList()
com.kiosoft2.api.helper.SQLiteHelper$1: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)
com.kiosoft2.api.statement.element.Condition: com.kiosoft2.api.statement.element.Condition equalId(com.kiosoft2.api.Property,java.lang.Object)
com.kiosoft2.common.task.annotions.DelayedTask: com.kiosoft2.common.task.annotions.TaskThread threadType()
androidx.room.TypeConverters: java.lang.Class[] value()
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addMigrations(androidx.room.migration.Migration[])
androidx.room.MultiInstanceInvalidationClient: java.util.concurrent.atomic.AtomicBoolean getStopped()
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode[] values()
androidx.room.BuiltInTypeConverters$State: androidx.room.BuiltInTypeConverters$State valueOf(java.lang.String)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
com.tencent.mmkv.MMKV: void onExit()
com.kiosoft2.common.cache.db.database.AppDataBase_Impl: java.util.List access$000(com.kiosoft2.common.cache.db.database.AppDataBase_Impl)
com.kiosoft2.api.type.OpType: <clinit>()
androidx.room.RoomTrackingLiveData: java.lang.Runnable getInvalidationRunnable()
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
com.alibaba.fastjson2.time.DateTimeFormatter$PatternType: com.alibaba.fastjson2.time.DateTimeFormatter$PatternType valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.room.RoomSQLiteQuery: void bindBlob(int,byte[])
androidx.room.MultiInstanceInvalidationClient: androidx.room.IMultiInstanceInvalidationCallback getCallback()
androidx.room.QueryInterceptorDatabase: void execSQL(java.lang.String)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void beginTransaction()
com.kiosoft2.common.thead.utils.AppExecutors$Companion: AppExecutors$Companion()
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
com.kiosoft2.testdemo.db.model.User_: void access$setAllProperties_$cp(java.util.List)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$4: java.lang.String createQuery()
androidx.room.RoomSQLiteQuery: void getStringBindings$annotations()
com.kiosoft2.common.router.ARouterOperator$FragmentBundleManager: com.kiosoft2.common.router.ARouterOperator$FragmentBundleManager withParcelableArrayList(java.lang.String,java.util.ArrayList)
com.tencent.mmkv.MMKV: java.lang.String mmapID()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.room.EntityUpsertionAdapter: long[] upsertAndReturnIdsArray(java.util.Collection)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$1()
com.kiosoft2.common.bus.LiveDataBus$BusMutableLiveData: void hook(androidx.lifecycle.Observer)
androidx.room.util.CursorUtil: int findColumnIndexBySuffix(java.lang.String[],java.lang.String)
com.kiosoft2.common.cache.TaskCacheManager$cacheTask$1$1: TaskCacheManager$cacheTask$1$1(com.kiosoft2.common.task.model.TaskInfo,kotlin.coroutines.Continuation)
androidx.sqlite.db.SupportSQLiteOpenHelper$Callback: void onUpgrade(androidx.sqlite.db.SupportSQLiteDatabase,int,int)
androidx.room.RoomDatabase: java.util.concurrent.Executor getQueryExecutor()
com.kiosoft2.common.cache.TaskCacheManager: com.kiosoft2.common.task.util.TaskInfoRepository getTaskInfoRepository()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notEqual(com.kiosoft2.api.Property,com.kiosoft2.api.builder.ChildQuery)
com.kiosoft2.common.task.annotions.RecurringTask: boolean isRepeat()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
androidx.room.QueryInterceptorOpenHelper: androidx.sqlite.db.SupportSQLiteOpenHelper getDelegate()
androidx.core.widget.TextViewCompat$Api16Impl: int getMinLines(android.widget.TextView)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: int getAlpha(android.graphics.drawable.Drawable)
com.kiosoft2.api.builder.Query: com.kiosoft2.api.builder.Query orderBy(com.kiosoft2.api.Property)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.Upsert: java.lang.Class entity()
com.kiosoft2.common.cache.db.dao.TaskInfoDao: java.lang.Object removeTaskInfoByOwerClassName(java.lang.String,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.room.rxjava3.RxRoom: io.reactivex.rxjava3.core.Observable createObservable(androidx.room.RoomDatabase,java.lang.String[])
androidx.room.DeleteColumn: java.lang.String columnName()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$2: java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
androidx.room.MapColumn: java.lang.String tableName()
com.kiosoft2.api.builder.OpBuilder: com.kiosoft2.api.builder.QueryBuilder query()
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition greater(com.kiosoft2.api.builder.ChildQuery,double)
com.kiosoft2.api.statement.element.Condition: com.kiosoft2.api.statement.element.Condition newChildWhere()
androidx.room.TransactionElement: <clinit>()
androidx.room.RoomDatabase: android.database.Cursor query$default(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal,int,java.lang.Object)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
androidx.room.AmbiguousColumnResolver$Solution: <clinit>()
com.kiosoft2.common.task.model.TaskInfo: void setThreadType(com.kiosoft2.common.task.annotions.TaskThread)
androidx.room.util.TableInfo$ForeignKeyWithSequence: int compareTo(androidx.room.util.TableInfo$ForeignKeyWithSequence)
androidx.lifecycle.LiveData: void assertMainThread(java.lang.String)
com.google.gson.reflect.TypeToken: java.lang.reflect.Type getType()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$delete$1: java.lang.Integer invoke(androidx.sqlite.db.SupportSQLiteDatabase)
com.kiosoft2.api.Entity: void bindUpdateAdapterValue(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: java.lang.Object getTaskInfoByTaskId(java.lang.String,kotlin.coroutines.Continuation)
com.kiosoft2.common.autoservice.ServiceLoad: java.lang.Object load(java.lang.Class)
com.tencent.mmkv.MMKV: long getMMKVWithIDAndSize(java.lang.String,int,int,java.lang.String)
com.kiosoft2.api.condition.PropertyCondition: void applyWhere(com.kiosoft2.api.statement.element.Condition)
androidx.emoji2.text.EmojiCompatInitializer: EmojiCompatInitializer()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: boolean isOpen()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: void saveBinds(int,java.lang.Object)
androidx.room.AutoCloser: androidx.sqlite.db.SupportSQLiteDatabase incrementCountAndEnsureDbIsOpen()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.room.EntityUpsertionAdapter: void upsert(java.lang.Iterable)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)
androidx.room.QueryInterceptorDatabase: void query$lambda$7(androidx.room.QueryInterceptorDatabase,java.lang.String,java.lang.Object[])
androidx.room.SQLiteCopyOpenHelper: void dispatchOnOpenPrepackagedDatabase(java.io.File,boolean)
com.kiosoft2.common.router.ARouterOperator$FragmentBundleManager: androidx.fragment.app.Fragment navigation()
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$cancelTask$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.room.RoomSQLiteQuery$Companion: void getDESIRED_POOL_SIZE$annotations()
androidx.room.InvalidationTracker: void startMultiInstanceInvalidation$room_runtime_release(android.content.Context,java.lang.String,android.content.Intent)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeInsert$1: java.lang.Long invoke(androidx.sqlite.db.SupportSQLiteStatement)
com.kiosoft2.common.cache.TaskCacheManager: java.lang.Object getCacheTaskListByOwerClassNameAndTaskId(java.lang.String,java.lang.String,kotlin.coroutines.Continuation)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
com.kiosoft2.api.condition.PropertyCondition: PropertyCondition(com.kiosoft2.api.Property,com.kiosoft2.api.type.ExpressionType)
androidx.room.MultiInstanceInvalidationClient: int getClientId()
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
com.kiosoft2.api.dao.Dao: java.lang.Object resultOne(androidx.sqlite.db.SupportSQLiteQuery)
androidx.room.QueryInterceptorDatabase: void beginTransactionNonExclusive$lambda$1(androidx.room.QueryInterceptorDatabase)
com.kiosoft2.common.thead.utils.AppExecutors$MainThreadExecutor: android.os.Handler getMainThreadHandler()
com.kiosoft2.testdemo.db.model.User: void setA11(java.lang.Boolean)
com.kiosoft2.api.builder.JoinBuilder: com.kiosoft2.api.builder.JoinBuilder endWith(com.kiosoft2.api.Property,com.kiosoft2.api.Property)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notEqual(com.kiosoft2.api.builder.ChildQuery,long)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
com.kiosoft2.api.builder.Query: com.kiosoft2.api.builder.Query limit(int)
com.kiosoft2.common.model.BaseLifecycleOwnerImpl$1: BaseLifecycleOwnerImpl$1()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: com.kiosoft2.common.task.annotions.TaskThread __TaskThread_stringToEnum(java.lang.String)
com.kiosoft2.common.task.util.TaskInfoRepository$updateTaskInfo$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: android.database.Cursor query(java.lang.String)
com.kiosoft2.common.task.model.TaskInfo: void setInitialDelay(long)
com.kiosoft2.common.autoservice.aspect.TaskServiceBindAspect$Companion: TaskServiceBindAspect$Companion()
androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)
com.kiosoft2.testdemo.db.model.User: User()
androidx.room.SQLiteCopyOpenHelper$createFrameworkOpenHelper$configuration$1: SQLiteCopyOpenHelper$createFrameworkOpenHelper$configuration$1(int,int)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition greaterOrEqual(java.lang.String)
androidx.room.util.DBUtil: android.database.Cursor query(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean)
com.kiosoft2.api.type.OrderByType: OrderByType(java.lang.String,int)
androidx.room.RoomSQLiteQuery$Companion$copyFrom$1: void close()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition lessOrEqual(com.kiosoft2.api.Property,double)
com.kiosoft2.common.thead.utils.AppExecutors$Companion: com.kiosoft2.common.thead.utils.AppExecutors getInstance()
com.kiosoft2.common.router.BundleManager: com.kiosoft2.common.router.BundleManager withBundle(java.lang.String,android.os.Bundle)
com.kiosoft2.api.helper.SQLiteHelper: void handleValuePropertyCondition(com.kiosoft2.api.statement.element.Expression,java.lang.StringBuilder)
com.kiosoft2.common.cache.db.dao.TaskInfoDao: java.lang.Object removeCacheTask(com.kiosoft2.common.task.model.TaskInfo,kotlin.coroutines.Continuation)
androidx.room.util.FtsTableInfo: java.util.Set parseOptions(java.lang.String)
androidx.room.util.TableInfo$Column$Companion: boolean defaultValueEquals(java.lang.String,java.lang.String)
androidx.room.RoomDatabase: void setAutoMigrationSpecs(java.util.Map)
androidx.room.util.TableInfo$ForeignKey: java.lang.String toString()
androidx.room.util.StringUtil: <clinit>()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setMaximumSize$1: java.lang.Long invoke(androidx.sqlite.db.SupportSQLiteDatabase)
com.kiosoft2.common.thead.utils.AppExecutors: java.util.concurrent.Executor mainThread()
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
androidx.room.DatabaseConfiguration: DatabaseConfiguration(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$MigrationContainer,java.util.List,boolean,androidx.room.RoomDatabase$JournalMode,java.util.concurrent.Executor,java.util.concurrent.Executor,boolean,boolean,boolean,java.util.Set,java.lang.String,java.io.File,java.util.concurrent.Callable,androidx.room.RoomDatabase$PrepackagedDatabaseCallback,java.util.List,java.util.List)
androidx.room.util.CursorUtil$wrapMappedColumns$2: int getColumnIndex(java.lang.String)
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$cancelTask$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.kiosoft2.common.task.model.MethodInfo: void setMethouName(java.lang.String)
com.kiosoft2.api.builder.OpBuilder: java.util.List find(java.lang.Integer[])
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
kotlin.jvm.internal.PropertyReference1: kotlin.reflect.KProperty$Getter getGetter()
androidx.room.util.TableInfo: TableInfo(java.lang.String,java.util.Map,java.util.Set)
com.kiosoft2.common.cache.TaskCacheManager$cacheTask$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.util.TableInfo$Index: java.lang.String toString()
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition notEqual(com.kiosoft2.api.builder.ChildQuery)
androidx.room.QueryInterceptorProgram: QueryInterceptorProgram()
com.kiosoft2.testdemo.db.model.Book_: <clinit>()
androidx.room.RoomDatabase: void clearAllTables()
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_DelayedTask$0: boolean isCacheResumeStart()
com.google.common.util.concurrent.UncheckedExecutionException: UncheckedExecutionException()
com.kiosoft2.common.task.model.TaskInfo: void setPeriod(long)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery)
com.kiosoft2.api.builder.OpBuilder: int deleteByIds(java.lang.String[])
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition startWith(com.kiosoft2.api.builder.ChildQuery,java.lang.String)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition less(com.kiosoft2.api.builder.ChildQuery)
androidx.room.QueryInterceptorOpenHelperFactory: androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration)
androidx.room.BuiltInTypeConverters$State: androidx.room.BuiltInTypeConverters$State[] $values()
androidx.room.QueryInterceptorOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getReadableDatabase()
kotlin.jvm.internal.PropertyReference: boolean isConst()
com.kiosoft2.api.Property: com.kiosoft2.api.Property min()
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition contains(com.kiosoft2.api.builder.ChildQuery)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
androidx.room.util.ViewInfo: boolean equals(java.lang.Object)
com.kiosoft2.common.task.model.TaskInfo: int getTaskCode()
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: java.lang.String getString(int)
androidx.appcompat.view.WindowCallbackWrapper$Api24Impl: void onProvideKeyboardShortcuts(android.view.Window$Callback,java.util.List,android.view.Menu,int)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: java.lang.Object insertOrUpdateTaskInfo(com.kiosoft2.common.task.model.TaskInfo,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api17Impl: boolean isPaddingRelative(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
androidx.room.RoomDatabase: boolean inTransaction()
androidx.room.CoroutinesRoom$Companion$execute$4$1: java.lang.Object invoke(java.lang.Object)
com.kiosoft2.testdemo.db.model.Book_: void bindDeleteAdapterValue(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)
androidx.room.RoomSQLiteQuery$Companion: void getQueryPool$annotations()
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatButton: void setEmojiCompatEnabled(boolean)
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
com.kiosoft2.api.builder.OpBuilder: java.lang.Object findById(java.lang.String)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition between(long,long)
com.kiosoft2.api.helper.SQLiteHelper$1: SQLiteHelper$1(androidx.room.RoomDatabase,java.lang.String,com.kiosoft2.api.Entity)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
com.kiosoft2.common.thead.utils.AppExecutors$InstanceHolder: com.kiosoft2.common.thead.utils.AppExecutors getInstance()
androidx.room.util.FtsTableInfo$Companion: java.util.Set parseOptions(java.lang.String)
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0: int taskCode()
com.kiosoft2.api.statement.element.Condition: boolean isChildCondition()
com.kiosoft2.common.task.annotions.DelayedTask: boolean isRepeat()
com.kiosoft2.common.task.model.TaskInfo: void setDisposable(io.reactivex.rxjava3.disposables.Disposable)
androidx.room.IMultiInstanceInvalidationService: void unregisterCallback(androidx.room.IMultiInstanceInvalidationCallback,int)
androidx.room.RoomSQLiteQuery: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)
com.tencent.mmkv.MMKV: boolean encodeBytes(long,java.lang.String,byte[])
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition less(com.kiosoft2.api.Property,long)
com.kiosoft2.common.cache.db.database.AppDataBase_Impl$1: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition less(byte[])
com.kiosoft2.api.Property: com.kiosoft2.api.Property upper()
com.kiosoft2.common.task.annotions.RecurringTask: long time()
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
com.kiosoft2.api.builder.Query: com.kiosoft2.api.builder.Query orderBy(com.kiosoft2.api.Property[],com.kiosoft2.api.type.OrderByType)
androidx.room.DeleteColumn$Entries: androidx.room.DeleteColumn[] value()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: boolean isExecPerConnectionSQLSupported()
com.kiosoft2.common.task.util.TaskMethodUtil: void invokeMethodTaskReLoad(java.lang.Object,com.kiosoft2.common.task.model.TaskInfo)
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property getIdProperty()
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.room.util.ViewInfo: java.lang.String toString()
androidx.room.EntityInsertionAdapter: long insertAndReturnId(java.lang.Object)
androidx.room.AmbiguousColumnResolver$resolve$4: void invoke(java.util.List)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition less(java.util.Date)
com.kiosoft2.testdemo.db.model.User: long getA2()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition lessOrEqual(com.kiosoft2.api.Property,com.kiosoft2.api.builder.ChildQuery)
com.kiosoft2.api.builder.OpBuilder: java.util.List save(java.util.Collection)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition endWith(com.kiosoft2.api.builder.ChildQuery)
androidx.room.RoomOpenHelper$ValidationResult: RoomOpenHelper$ValidationResult(boolean,java.lang.String)
androidx.room.migration.MigrationImpl: void migrate(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: java.util.List getNotificationUris()
kotlin.jvm.internal.MutablePropertyReference1: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
androidx.room.RoomOpenHelper$Delegate: androidx.room.RoomOpenHelper$ValidationResult onValidateSchema(androidx.sqlite.db.SupportSQLiteDatabase)
com.kiosoft2.api.builder.Query: double max(com.kiosoft2.api.Property)
androidx.room.util.FtsTableInfo: int hashCode()
com.kiosoft2.common.task.util.TaskInfoRepository$insertOrUpdateTaskInfo$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.jvm.internal.PropertyReference1: PropertyReference1(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
com.kiosoft2.api.Property: Property(java.lang.String,java.lang.String,java.lang.String,java.lang.Class,boolean,java.lang.String,boolean)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.statement.element.Condition getApplyWhere()
androidx.room.RoomDatabase: java.util.concurrent.locks.Lock getCloseLock$room_runtime_release()
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition lessOrEqual(double)
com.kiosoft2.api.type.OrderByType: com.kiosoft2.api.type.OrderByType[] values()
androidx.room.Fts4: java.lang.String[] tokenizerArgs()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition equal(com.kiosoft2.api.builder.ChildQuery,boolean)
androidx.room.AmbiguousColumnResolver$resolve$1$2: java.lang.Object invoke(java.lang.Object)
com.kiosoft2.common.thead.aspect.InterceptMainThreadAspectJ: void aroundJoinPoint$lambda$0(org.aspectj.lang.ProceedingJoinPoint)
com.kiosoft2.common.cache.TaskCacheManager: void removeCacheTaskList(java.util.List)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.room.RoomDatabase$JournalMode: RoomDatabase$JournalMode(java.lang.String,int)
androidx.room.AutoCloser: void setDelegateOpenHelper(androidx.sqlite.db.SupportSQLiteOpenHelper)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition greater(java.lang.String)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.room.util.TableInfo$Column: java.lang.String toString()
androidx.room.RoomDatabase: void assertNotMainThread()
com.kiosoft2.common.cache.db.database.AppDataBase_Impl: java.util.Set getRequiredAutoMigrationSpecs()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
com.kiosoft2.common.task.aspect.DelayedTaskAspectJ$Companion: DelayedTaskAspectJ$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
com.kiosoft2.api.type.JoinType: java.lang.String getExp()
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.kiosoft2.testdemo.db.model.User_: void bindInsertionAdapterValue(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)
com.kiosoft2.common.model.BaseLifecycleOwnerImpl$1: void invoke(java.lang.String)
androidx.room.InvalidationTracker: void removeObserver(androidx.room.InvalidationTracker$Observer)
com.kiosoft2.common.task.util.TaskInfoRepository$getTaskInfoByTaskId$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
kotlinx.coroutines.CoroutineDispatcher: void dispatchYield(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition greaterOrEqual(com.kiosoft2.api.Property,java.util.Date)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition greaterOrEqual(long)
com.kiosoft2.common.task.model.TaskInfo: void setEndTimeMillis(long)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.kiosoft2.api.condition.BasicCondition: BasicCondition()
androidx.room.DeleteColumn: java.lang.String tableName()
androidx.room.Fts4: androidx.room.FtsOptions$MatchInfo matchInfo()
com.kiosoft2.common.task.aspect.TaskAspectJ$Companion: TaskAspectJ$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kiosoft2.api.helper.SQLiteHelper: int execDeleteSql(androidx.room.RoomDatabase,com.kiosoft2.api.statement.DeleteSQL)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeInsert$1: java.lang.Object invoke(java.lang.Object)
com.kiosoft2.common.task.aspect.DelayedTaskAspectJ$Companion: DelayedTaskAspectJ$Companion()
com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper$onActivityCreated$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.TransactionElement: void acquire()
com.kiosoft2.api.builder.JoinBuilder: com.kiosoft2.api.condition.BasicCondition in(com.kiosoft2.api.Property,java.util.Collection)
kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()
com.kiosoft2.api.aparameter.AParameterManager$Companion$instance$2: java.lang.Object invoke()
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: boolean setFontVariationSettings(android.widget.TextView,java.lang.String)
androidx.room.RoomSQLiteQuery$Companion: void getPOOL_LIMIT$annotations()
com.kiosoft2.api.helper.SQLiteHelper: java.util.List execQuerySql(androidx.room.RoomDatabase,com.kiosoft2.api.statement.SelectSQL,boolean)
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property access$getA5$cp()
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$start$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notNull(com.kiosoft2.api.builder.ChildQuery)
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult[] values()
com.kiosoft2.testdemo.Test1Fragment: Test1Fragment()
com.kiosoft2.common.cache.TaskCacheManager$removeCacheTask$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.kiosoft2.testdemo.db.model.Book: long getUid()
androidx.room.ColumnInfo: java.lang.String name()
com.kiosoft2.api.builder.ChildQuery: com.kiosoft2.api.builder.ChildQuery orderBy(com.kiosoft2.api.Property,com.kiosoft2.api.type.OrderByType)
androidx.room.AmbiguousColumnResolver$resolve$4: java.lang.Object invoke(java.lang.Object)
androidx.room.AutoCloser$Companion: AutoCloser$Companion()
com.kiosoft2.common.bus.LiveDataBus: void clean()
androidx.room.QueryInterceptorStatement: void bindDouble(int,double)
com.kiosoft2.api.type.OrderByType: com.kiosoft2.api.type.OrderByType valueOf(java.lang.String)
com.kiosoft2.testdemo.db.model.Book: void setUid(long)
androidx.room.RoomDatabase$MigrationContainer: void addMigrations(androidx.room.migration.Migration[])
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
com.kiosoft2.common.router.ARouterOperator$FragmentBundleManager: com.kiosoft2.common.router.ARouterOperator$FragmentBundleManager withSerializable(java.lang.String,java.io.Serializable)
androidx.room.InvalidationTracker$Companion: InvalidationTracker$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.room.rxjava3.RxRoom: io.reactivex.rxjava3.core.Flowable createFlowable(androidx.room.RoomDatabase,java.lang.String[])
com.kiosoft2.common.bus.LiveDataBus$bus$2: <clinit>()
androidx.room.RoomTrackingLiveData$observer$1: RoomTrackingLiveData$observer$1(java.lang.String[],androidx.room.RoomTrackingLiveData)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition equal(long)
com.tencent.mmkv.MMKV: void clearAll()
androidx.room.RoomDatabase: boolean isOpen()
androidx.room.DatabaseConfiguration: DatabaseConfiguration(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$MigrationContainer,java.util.List,boolean,androidx.room.RoomDatabase$JournalMode,java.util.concurrent.Executor,java.util.concurrent.Executor,boolean,boolean,boolean,java.util.Set,java.lang.String,java.io.File,java.util.concurrent.Callable)
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_DelayedTask$0: boolean equals(java.lang.Object)
com.kiosoft2.apt.AParameter$$TestActivity04: void getParameter(java.lang.Object)
com.kiosoft2.api.aparameter.AParameterManager$Companion: AParameterManager$Companion()
androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
com.kiosoft2.common.task.model.TaskInfo: TaskInfo(int,java.lang.String,java.lang.Class,java.lang.String,androidx.lifecycle.LifecycleOwner,java.lang.String,int,long,java.lang.ref.WeakReference,boolean,boolean,com.kiosoft2.common.task.annotions.TaskThread,long,long,long,java.util.concurrent.TimeUnit,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.kiosoft2.common.task.util.TaskInfoRepository$updateTaskInfoList$2: TaskInfoRepository$updateTaskInfoList$2(com.kiosoft2.common.task.util.TaskInfoRepository,java.util.List,kotlin.coroutines.Continuation)
androidx.room.QueryInterceptorDatabase: void setLocale(java.util.Locale)
androidx.room.TransactionElement: kotlin.coroutines.ContinuationInterceptor getTransactionDispatcher$room_ktx_release()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type)
com.kiosoft2.common.task.model.TaskInfo: void setReStart(boolean)
com.kiosoft2.common.task.util.TaskInfoRepository$insertTaskInfoList$2: java.lang.Object invokeSuspend(java.lang.Object)
com.kiosoft2.testdemo.db.model.User_: void access$set_instance$cp(com.kiosoft2.testdemo.db.model.User_)
androidx.room.RawQuery: java.lang.Class[] observedEntities()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$6: kotlin.Unit call()
androidx.room.util.FtsTableInfo: boolean equals(java.lang.Object)
androidx.room.util.TableInfoKt: java.util.Set readIndices(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)
com.kiosoft2.common.click.aspect.InterceptSingleTimeAspectJ$Companion: void setLruCache(android.util.LruCache)
androidx.room.RoomDatabase$PrepackagedDatabaseCallback: void onOpenPrepackagedDatabase(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.Embedded: java.lang.String prefix()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition lessOrEqual(com.kiosoft2.api.builder.ChildQuery,long)
androidx.room.FtsOptions$MatchInfo: FtsOptions$MatchInfo(java.lang.String,int)
com.kiosoft2.common.task.util.TaskInfoRepository$updateTaskInfo$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.MultiInstanceInvalidationClient: androidx.room.IMultiInstanceInvalidationService getService()
androidx.lifecycle.LiveData: boolean isInitialized()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$2: java.lang.Object invoke(java.lang.Object)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.room.AmbiguousColumnResolver$resolve$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition greaterOrEqual(com.kiosoft2.api.builder.ChildQuery,com.kiosoft2.api.builder.ChildQuery)
androidx.room.IMultiInstanceInvalidationCallback: void onInvalidation(java.lang.String[])
com.kiosoft2.common.task.model.TaskInfo: java.lang.String component4()
androidx.room.AutoClosingRoomOpenHelper: java.lang.String getDatabaseName()
com.kiosoft2.common.task.aspect.DelayedTaskAspectJ$aroundJoinPoint$1: DelayedTaskAspectJ$aroundJoinPoint$1(org.aspectj.lang.ProceedingJoinPoint)
com.kiosoft2.common.click.aspect.ClickListenerAspect: com.kiosoft2.common.click.aspect.ClickListenerAspect aspectOf()
com.tencent.mmkv.MMKV: long getDefaultMMKV(int,java.lang.String)
com.kiosoft2.common.task.util.TaskInfoRepository: java.lang.Object insertTaskInfoList(java.util.List,kotlin.coroutines.Continuation)
androidx.room.EntityInsertionAdapter: java.lang.Long[] insertAndReturnIdsArrayBox(java.util.Collection)
com.kiosoft2.common.router.ARouterOperator$Companion: ARouterOperator$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
kotlin.jvm.internal.PropertyReference: int hashCode()
com.kiosoft2.api.helper.SQLiteHelper: java.lang.String generateDeleteSql(com.kiosoft2.api.statement.DeleteSQL)
com.kiosoft2.common.cache.db.database.AppDataBase_Impl: androidx.room.InvalidationTracker createInvalidationTracker()
com.kiosoft2.testdemo.db.model.User_: java.util.List access$getAllProperties_$cp()
androidx.room.RoomOpenHelper$Delegate: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.Object[])
androidx.room.QueryInterceptorDatabase: boolean isOpen()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
com.kiosoft2.api.builder.ChildQuery: com.kiosoft2.api.builder.ChildQuery limit(int)
androidx.room.QueryInterceptorStatement: void simpleQueryForString$lambda$4(androidx.room.QueryInterceptorStatement)
kotlinx.coroutines.CoroutineDispatcher: CoroutineDispatcher()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition endWith(com.kiosoft2.api.builder.ChildQuery,java.lang.String)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$1: void set(java.lang.Object,java.lang.Object)
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property access$getA8$cp()
androidx.core.view.ViewCompat$Api16Impl: android.view.ViewParent getParentForAccessibility(android.view.View)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
com.kiosoft2.common.task.util.TaskReLoadUtil$reLoadStart$2: void run()
com.tencent.mmkv.MMKVLogLevel: com.tencent.mmkv.MMKVLogLevel valueOf(java.lang.String)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isDatabaseIntegrityOk$1: java.lang.Object invoke(java.lang.Object)
androidx.room.DatabaseView: java.lang.String value()
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition notEqual(boolean)
androidx.appcompat.widget.AppCompatTextView: void setFilters(android.text.InputFilter[])
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getDrawable(android.graphics.drawable.InsetDrawable)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: void close()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: java.lang.Object getTaskList(kotlin.coroutines.Continuation)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition greaterOrEqual(com.kiosoft2.api.Property,com.kiosoft2.api.builder.ChildQuery)
kotlinx.coroutines.internal.ExceptionSuccessfullyProcessed: ExceptionSuccessfullyProcessed()
kotlinx.coroutines.android.HandlerDispatcherKt: java.lang.Object access$awaitFrameSlowPath(kotlin.coroutines.Continuation)
com.tencent.mmkv.MMKV: java.lang.String[] allKeys()
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
com.kiosoft2.api.type.OpType: OpType(java.lang.String,int)
androidx.room.MultiInstanceInvalidationClient: void setObserver(androidx.room.InvalidationTracker$Observer)
com.kiosoft2.api.statement.element.Function: Function(com.kiosoft2.api.type.FuncType,com.kiosoft2.api.Property)
com.kiosoft2.api.helper.SQLiteHelper: java.util.List execQuerySql(androidx.room.RoomDatabase,com.kiosoft2.api.statement.SelectSQL)
androidx.room.QueryInterceptorOpenHelper: QueryInterceptorOpenHelper(androidx.sqlite.db.SupportSQLiteOpenHelper,java.util.concurrent.Executor,androidx.room.RoomDatabase$QueryCallback)
androidx.room.RoomSQLiteQuery: int getCapacity()
com.kiosoft2.common.task.model.TaskInfo: void setCacheResumeStart(boolean)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
androidx.room.util.TableInfo$Column: TableInfo$Column(java.lang.String,java.lang.String,boolean,int)
androidx.room.TransactionElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
androidx.room.SharedSQLiteStatement$stmt$2: java.lang.Object invoke()
com.kiosoft2.api.builder.OpBuilder: java.util.List find(java.lang.Long[])
com.kiosoft2.common.thead.utils.AppExecutors: java.util.concurrent.Executor timeworkIO()
com.kiosoft2.common.router.ARouterOperator$Companion: com.kiosoft2.common.router.ARouterOperator$FragmentBundleManager op(java.lang.Class)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition lessOrEqual(java.util.Date)
com.kiosoft2.common.bus.LiveDataBus$Companion: LiveDataBus$Companion()
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition greater(double)
com.kiosoft2.testdemo.db.model.Book_: Book_()
androidx.room.IMultiInstanceInvalidationCallback$Default: void onInvalidation(java.lang.String[])
com.kiosoft2.api.condition.PropertyCondition: com.kiosoft2.api.statement.element.Condition getApplyWhere()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.kiosoft2.common.task.util.TaskInfoRepository$insertTaskInfoList$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.room.EntityDeletionOrUpdateAdapter: int handleMultiple(java.lang.Iterable)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager: com.kiosoft2.common.router.BundleManager withSerializable(java.lang.String,java.io.Serializable)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
androidx.room.AutoCloser: int getRefCount$room_runtime_release()
androidx.room.Fts4: androidx.room.FtsOptions$Order order()
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1$1: RoomDatabaseKt$invalidationTrackerFlow$1$1(kotlinx.coroutines.Job)
androidx.room.RoomDatabase: java.lang.Object getTypeConverter(java.lang.Class)
androidx.room.RoomDatabaseKt: kotlinx.coroutines.flow.Flow invalidationTrackerFlow(androidx.room.RoomDatabase,java.lang.String[],boolean)
com.kiosoft2.api.Property: com.kiosoft2.api.Property abs()
com.kiosoft2.common.thead.utils.AppExecutors: java.util.concurrent.Executor getNetworkIO()
com.kiosoft2.common.router.ARouterOperator$FragmentBundleManager: com.kiosoft2.common.router.ARouterOperator$FragmentBundleManager withBoolean(java.lang.String,boolean)
androidx.room.FtsOptions$MatchInfo: <clinit>()
com.kiosoft2.common.cache.db.database.AppDataBase_Impl$1: void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase)
com.tencent.mmkv.MMKV: void sync(boolean)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
com.kiosoft2.common.task.interfaces.TaskInterface: void onTaskComplete(com.kiosoft2.common.task.model.TaskInfo)
com.kiosoft2.common.bus.LiveDataBus: void access$setLiveDataBus$cp(com.kiosoft2.common.bus.LiveDataBus)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.room.Index: java.lang.String[] value()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
com.kiosoft2.common.cache.TaskCacheManager: void setTaskInfoDao(com.kiosoft2.common.cache.db.dao.TaskInfoDao)
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.room.util.TableInfo$Index: TableInfo$Index(java.lang.String,boolean,java.util.List)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
io.reactivex.rxjava3.internal.disposables.DisposableHelper: io.reactivex.rxjava3.internal.disposables.DisposableHelper[] values()
androidx.room.RoomWarnings: RoomWarnings()
androidx.room.Fts4: int[] prefix()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition between(com.kiosoft2.api.Property,double,double)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.room.RoomOpenHelper$Companion: RoomOpenHelper$Companion()
com.kiosoft2.api.helper.SQLiteHelper: java.lang.Object execQuerySqlReturnOne(androidx.room.RoomDatabase,com.kiosoft2.api.statement.SelectSQL)
com.kiosoft2.api.helper.SQLiteHelper: void logSql(java.lang.String,java.util.List)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
com.kiosoft2.common.task.aspect.TaskAspectJ$aroundJoinPoint$1: TaskAspectJ$aroundJoinPoint$1(org.aspectj.lang.ProceedingJoinPoint)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$3: java.lang.String createQuery()
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_DelayedTask$0: TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_DelayedTask$0(int,long,com.kiosoft2.common.task.annotions.TaskThread,java.util.concurrent.TimeUnit,boolean,boolean,boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$version$1: <clinit>()
com.kiosoft2.common.cache.db.database.AppDataBase_Impl: java.util.List access$100(com.kiosoft2.common.cache.db.database.AppDataBase_Impl)
com.kiosoft2.api.builder.OpBuilder: com.kiosoft2.api.builder.JoinBuilder innerJoin(com.kiosoft2.api.Entity)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition equal(com.kiosoft2.api.Property,java.util.Date)
androidx.room.QueryInterceptorOpenHelper: void setWriteAheadLoggingEnabled(boolean)
androidx.room.RoomDatabaseKt: java.lang.Object access$startTransactionCoroutine(androidx.room.RoomDatabase,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
kotlin.jvm.internal.PropertyReference: PropertyReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
com.kiosoft2.api.builder.OpBuilder: java.lang.Long insert(java.lang.Object)
androidx.room.InvalidationTracker: androidx.arch.core.internal.SafeIterableMap getObserverMap$room_runtime_release()
androidx.room.RenameColumn: java.lang.String fromColumnName()
kotlinx.coroutines.android.HandlerDispatcher: kotlinx.coroutines.DisposableHandle invokeOnTimeout(long,java.lang.Runnable,kotlin.coroutines.CoroutineContext)
androidx.room.AmbiguousColumnResolver$ResultColumn: int component2()
androidx.core.widget.NestedScrollView: int getScrollRange()
androidx.room.InvalidationLiveDataContainer: void onInactive(androidx.lifecycle.LiveData)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$17: TaskInfoDao_Impl$17(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl,androidx.room.RoomSQLiteQuery)
com.kiosoft2.common.cache.TaskCacheManager$cacheTask$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$1: void set(java.lang.Object,java.lang.Object)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
androidx.room.util.TableInfo$Column$Companion: TableInfo$Column$Companion()
com.tencent.mmkv.MMKV: int ashmemMetaFD()
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundResource(int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
com.kiosoft2.api.builder.JoinBuilder: com.kiosoft2.api.builder.JoinBuilder notEqual(com.kiosoft2.api.Property,com.kiosoft2.api.Property)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.room.IMultiInstanceInvalidationCallback: <clinit>()
androidx.lifecycle.LiveData: boolean hasObservers()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$attachedDbs$1: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
com.kiosoft2.common.task.model.TaskInfo: androidx.lifecycle.LifecycleOwner component5()
androidx.room.MultiInstanceInvalidationClient: androidx.room.InvalidationTracker$Observer getObserver()
androidx.activity.OnBackPressedDispatcher$Api33Impl: android.window.OnBackInvokedCallback createOnBackInvokedCallback(java.lang.Runnable)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
androidx.room.QueryInterceptorOpenHelper: java.lang.String getDatabaseName()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setForeignKeyConstraintsEnabled$1: java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.QueryInterceptorDatabase: android.database.Cursor query(java.lang.String,java.lang.Object[])
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: java.lang.Object updateTaskInfoList(java.util.List,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.core.widget.ListViewCompat$Api19Impl: void scrollListBy(android.widget.ListView,int)
com.tencent.mmkv.MMKV: void clearMemoryCache()
androidx.room.RoomDatabaseKt$withTransaction$transactionBlock$1: RoomDatabaseKt$withTransaction$transactionBlock$1(androidx.room.RoomDatabase,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.room.RoomTrackingLiveData: java.util.concurrent.Callable getComputeFunction()
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition equal(java.lang.String)
kotlin.jvm.internal.FunctionReference: boolean isInfix()
androidx.room.QueryInterceptorDatabase: boolean isDbLockedByCurrentThread()
androidx.core.app.ActivityCompat$Api16Impl: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
androidx.room.util.StringUtil: void appendPlaceholders(java.lang.StringBuilder,int)
com.kiosoft2.common.cache.TaskCacheManager: void setDb(com.kiosoft2.common.cache.db.database.AppDataBase)
androidx.room.RoomDatabase: void internalBeginTransaction()
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
com.kiosoft2.common.task.util.TaskManager: void putTask(java.lang.Object,com.kiosoft2.common.task.model.TaskInfo)
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
androidx.room.InvalidationTracker: java.util.Map getTableIdLookup$room_runtime_release()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.room.InvalidationTracker$ObservedTableTracker: void setNeedsSync(boolean)
androidx.room.RoomSQLiteQuery$Companion: androidx.room.RoomSQLiteQuery acquire(java.lang.String,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
androidx.room.AmbiguousColumnResolver$resolve$1$2: void invoke(java.util.List)
androidx.room.AmbiguousColumnResolver$Solution$Companion: androidx.room.AmbiguousColumnResolver$Solution build(java.util.List)
androidx.lifecycle.LiveData: void observeForever(androidx.lifecycle.Observer)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property access$getA11$cp()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition between(com.kiosoft2.api.builder.ChildQuery,double,double)
com.kiosoft2.api.statement.element.OrderBy: OrderBy()
androidx.room.Fts4: java.lang.String[] notIndexed()
androidx.room.RoomDatabase: void isOpenInternal$annotations()
androidx.room.QueryInterceptorDatabase: long getMaximumSize()
androidx.room.RoomDatabase: void internalEndTransaction()
com.kiosoft2.api.statement.element.Condition: Condition(com.kiosoft2.api.type.ConditionRelation,java.util.List,java.util.List,boolean)
com.kiosoft2.testdemo.db.model.Book_: void bindUpdateAdapterValue(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)
com.kiosoft2.common.model.BaseLifecycleOwnerImpl: BaseLifecycleOwnerImpl()
androidx.room.ColumnInfo: int collate()
androidx.room.InvalidationTracker: java.util.concurrent.atomic.AtomicBoolean getPendingRefresh()
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.DropDownListView$Api33Impl: boolean isSelectedChildViewEnabled(android.widget.AbsListView)
com.kiosoft2.common.task.util.TaskInfoRepository: java.lang.Object updateTaskInfo(com.kiosoft2.common.task.model.TaskInfo,kotlin.coroutines.Continuation)
androidx.room.MultiInstanceInvalidationClient: android.content.ServiceConnection getServiceConnection()
com.kiosoft2.common.bus.LiveDataBus$BusMutableLiveData: void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)
androidx.room.Junction: java.lang.String parentColumn()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$7: TaskInfoDao_Impl$7(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl,java.util.List)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal)
com.kiosoft2.testdemo.db.model.User: java.lang.Boolean isA11()
com.kiosoft2.common.task.model.TaskInfo: long getEndTimeMillis()
com.kiosoft2.api.builder.OpBuilder: com.kiosoft2.api.builder.JoinBuilder crossJoin(com.kiosoft2.api.Entity)
com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper$onActivityCreated$1: TaskActivityLifecycleHelper$onActivityCreated$1(android.app.Activity,kotlin.coroutines.Continuation)
androidx.room.Insert: java.lang.Class entity()
androidx.room.RoomOpenHelper: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)
com.kiosoft2.api.aparameter.AParameterManager: java.lang.String getPARAMETE_FILE_NAME()
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.kiosoft2.common.task.util.TaskInfoRepository$getTaskList$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewCompat$Api17Impl: android.view.Display getDisplay(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notIn(com.kiosoft2.api.Property,java.lang.Integer[])
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setMaxSqlCacheSize$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setMaxSqlCacheSize$1(int)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryUnregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
androidx.room.InvalidationTracker$Observer: void onInvalidated(java.util.Set)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder setAutoCloseTimeout(long,java.util.concurrent.TimeUnit)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$3: void bind(androidx.sqlite.db.SupportSQLiteStatement,com.kiosoft2.common.task.model.TaskInfo)
androidx.room.QueryInterceptorProgram: void bindBlob(int,byte[])
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity)
com.kiosoft2.common.thead.utils.AppExecutors: java.util.concurrent.Executor getMainThread()
com.kiosoft2.common.task.util.TaskInfoRepository$updateTaskInfoList$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.tencent.mmkv.MMKV: boolean encodeFloat(long,java.lang.String,float)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$14: java.util.List call()
com.kiosoft2.common.task.util.TaskManager$isExistTask$1$1: TaskManager$isExistTask$1$1(com.kiosoft2.common.task.model.TaskInfo,kotlin.coroutines.Continuation)
androidx.room.RoomDatabase$MigrationContainer: void addMigration(androidx.room.migration.Migration)
com.kiosoft2.common.bus.LiveDataBus: com.kiosoft2.common.bus.LiveDataBus$BusMutableLiveData with(java.lang.String,java.lang.Class)
androidx.room.IMultiInstanceInvalidationService$Stub: IMultiInstanceInvalidationService$Stub()
com.kiosoft2.api.builder.OpBuilder: java.util.List findPage(int,int)
androidx.room.InvalidationTracker: void refreshVersionsSync()
com.kiosoft2.testdemo.db.model.Book: void setId(java.lang.Long)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notIn(com.kiosoft2.api.Property,com.kiosoft2.api.builder.ChildQuery)
androidx.room.ColumnInfo: boolean index()
com.kiosoft2.common.autoservice.aspect.TaskServiceBindAspect: com.kiosoft2.common.autoservice.aspect.TaskServiceBindAspect aspectOf()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition lessOrEqual(com.kiosoft2.api.builder.ChildQuery,byte[])
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$6: java.lang.Object call()
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: void execute()
androidx.room.util.TableInfo: int hashCode()
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.appcompat.widget.AppCompatTextHelper$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
androidx.room.QueryInterceptorDatabase: long setMaximumSize(long)
com.kiosoft2.testdemo.db.model.Book_: void access$setEntityClass_$cp(java.lang.Class)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
com.kiosoft2.common.task.util.TaskInfoRepository$getTaskInfoByTaskId$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
androidx.appcompat.widget.AppCompatCheckedTextView: void setAllCaps(boolean)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.kiosoft2.common.cache.TaskCacheManager$getCacheTaskListByOwerClassName$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.kiosoft2.common.task.annotions.RecurringTask: java.util.concurrent.TimeUnit unit()
androidx.room.AmbiguousColumnResolver$ResultColumn: java.lang.String toString()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: androidx.room.EntityDeletionOrUpdateAdapter access$500(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl)
androidx.room.InvalidationTracker: java.lang.String[] validateAndResolveTableNames(java.lang.String[])
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition between(com.kiosoft2.api.Property,java.util.Date,java.util.Date)
androidx.room.QueryInterceptorDatabase: void beginTransactionWithListenerNonExclusive(android.database.sqlite.SQLiteTransactionListener)
androidx.room.paging.LimitOffsetDataSource: LimitOffsetDataSource(androidx.room.RoomDatabase,androidx.room.RoomSQLiteQuery,boolean,boolean,java.lang.String[])
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.kiosoft2.common.cache.db.database.AppDataBase_Impl: com.kiosoft2.common.cache.db.dao.TaskInfoDao getTaskInfoDao()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
com.kiosoft2.api.builder.OpBuilder: int deleteByIds(java.util.Collection)
com.kiosoft2.common.cache.TaskCacheManager$getCacheTaskList$1: TaskCacheManager$getCacheTaskList$1()
com.kiosoft2.common.task.util.TaskInfoRepository: com.kiosoft2.common.cache.db.dao.TaskInfoDao getTaskInfoDao()
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
androidx.room.RoomTrackingLiveData$observer$1: void onInvalidated(java.util.Set)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
com.kiosoft2.common.task.model.TaskInfo: int component1()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$delete$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$delete$1(java.lang.String,java.lang.String,java.lang.Object[])
androidx.room.RoomDatabase: void assertNotSuspendingTransaction()
com.kiosoft2.testdemo.db.model.Book: void setPage(int)
androidx.room.util.FtsTableInfo: FtsTableInfo(java.lang.String,java.util.Set,java.lang.String)
com.kiosoft2.common.cache.TaskCacheManager$getCacheTaskListByOwerClassName$2: TaskCacheManager$getCacheTaskListByOwerClassName$2(java.lang.String,kotlin.coroutines.Continuation)
com.kiosoft2.api.type.JoinType: com.kiosoft2.api.type.JoinType valueOf(java.lang.String)
com.tencent.mmkv.MMKV: void close()
com.tencent.mmkv.MMKV: boolean encodeDouble(long,java.lang.String,double)
androidx.core.view.ViewCompat$Api19Impl: boolean isLayoutDirectionResolved(android.view.View)
androidx.room.QueryInterceptorStatement: long simpleQueryForLong()
com.kiosoft2.common.thead.utils.AppExecutors$DiskIOThreadExecutor: AppExecutors$DiskIOThreadExecutor()
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_DelayedTask$0: boolean isReStart()
androidx.room.IMultiInstanceInvalidationService$Default: android.os.IBinder asBinder()
androidx.room.AmbiguousColumnResolver$resolve$1$1: AmbiguousColumnResolver$resolve$1$1(java.lang.String[],java.util.List,int)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition contains(java.lang.String)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
com.kiosoft2.api.aparameter.AParameterManager: android.util.LruCache getParameterCache()
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property access$getA3$cp()
com.kiosoft2.common.click.utils.ClickUtil: long getLastClickTime()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$1: void bind(androidx.sqlite.db.SupportSQLiteStatement,com.kiosoft2.common.task.model.TaskInfo)
com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager: ARouterOperator$ActivityBundleManager(com.kiosoft2.common.router.ARouterOperator,java.lang.Class)
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$cancelTask$1: TaskServiceImpl$cancelTask$1(java.lang.Object,java.lang.String,kotlin.coroutines.Continuation)
androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence getAccessibilityClassName()
com.alibaba.fastjson2.PropertyNamingStrategy: com.alibaba.fastjson2.PropertyNamingStrategy[] values()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
androidx.room.RoomDatabase$Companion: RoomDatabase$Companion()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition isNull(com.kiosoft2.api.Property)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: java.lang.String access$000(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl,com.kiosoft2.common.task.annotions.TaskThread)
androidx.room.rxjava3.RxRoom: void lambda$createSingle$6(java.util.concurrent.Callable,io.reactivex.rxjava3.core.SingleEmitter)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$16: java.lang.Object call()
androidx.room.InvalidationTracker$ObservedTableTracker: InvalidationTracker$ObservedTableTracker(int)
androidx.room.ForeignKey: int onUpdate()
androidx.appcompat.widget.Toolbar: android.view.View getNavButtonView()
com.kiosoft2.common.click.utils.ClickUtil: <clinit>()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition greater(java.util.Date)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: boolean isWriteAheadLoggingEnabled()
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.room.ColumnInfo$Companion: <clinit>()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.room.IMultiInstanceInvalidationService$Default: void unregisterCallback(androidx.room.IMultiInstanceInvalidationCallback,int)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition greaterOrEqual(byte[])
com.kiosoft2.testdemo.db.model.User: void setAge(int)
androidx.room.ColumnInfo: java.lang.String defaultValue()
androidx.room.QueryInterceptorDatabase: void setTransactionSuccessful()
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.kiosoft2.api.statement.element.Condition: int getArgumentCount()
com.kiosoft2.common.task.aspect.TaskAspectJ: com.kiosoft2.common.task.aspect.TaskAspectJ aspectOf()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$3: TaskInfoDao_Impl$3(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl,androidx.room.RoomDatabase)
com.kiosoft2.api.Property: java.lang.String toString()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
com.kiosoft2.api.statement.element.Condition: boolean isWhereEmpty()
com.kiosoft2.api.builder.Query: com.kiosoft2.api.builder.Query groupBy(com.kiosoft2.api.Property[])
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.kiosoft2.common.task.annotions.DelayedTask: boolean isCacheResumeStart()
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.RoomOpenHelper: void checkIdentity(androidx.sqlite.db.SupportSQLiteDatabase)
kotlinx.coroutines.CoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
com.kiosoft2.testdemo.db.model.User: void setA1(float)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
com.kiosoft2.common.task.annotions.TaskThread: kotlin.enums.EnumEntries getEntries()
com.kiosoft2.testdemo.bus.impl.ILifecycleOwner: void onStop()
com.kiosoft2.common.cache.TaskCacheManager: void init(android.app.Application)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
com.kiosoft2.api.builder.Query: com.kiosoft2.api.builder.Query page(int,int)
com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.kiosoft2.common.task.model.TaskInfo: java.lang.String getAnnotationClassName()
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: android.view.ActionMode onWindowStartingActionMode(android.view.Window$Callback,android.view.ActionMode$Callback,int)
com.alibaba.fastjson2.util.DateUtils$DateTimeFormatPattern: com.alibaba.fastjson2.util.DateUtils$DateTimeFormatPattern valueOf(java.lang.String)
androidx.room.RoomOpenHelper$Delegate: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.EntityInsertionAdapter: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)
com.kiosoft2.common.autoservice.impl.TaskServiceImpl: void reStartTask(java.lang.Object)
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
androidx.room.InvalidationTracker: void setAutoCloser$room_runtime_release(androidx.room.AutoCloser)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
kotlinx.coroutines.android.HandlerDispatcherKt: kotlinx.coroutines.android.HandlerDispatcher from(android.os.Handler,java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.kiosoft2.api.helper.SQLiteHelper: <clinit>()
com.kiosoft2.testdemo.MyApplication: MyApplication()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isWriteAheadLoggingEnabled$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isWriteAheadLoggingEnabled$1()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition less(com.kiosoft2.api.Property,java.util.Date)
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property access$getId$cp()
com.kiosoft2.api.statement.SelectSQL: java.lang.reflect.Type getResultType()
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)
androidx.room.util.CursorUtil: int getColumnIndexOrThrow(android.database.Cursor,java.lang.String)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addTypeConverter(java.lang.Object)
androidx.room.InvalidationTracker: void internalInit$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
androidx.room.util.TableInfo: TableInfo(java.lang.String,java.util.Map,java.util.Set,java.util.Set,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.room.InvalidationTracker: androidx.lifecycle.LiveData createLiveData(java.lang.String[],boolean,java.util.concurrent.Callable)
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
androidx.room.Insert: int onConflict()
androidx.room.util.CursorUtil: int findColumnIndexBySuffix(android.database.Cursor,java.lang.String)
com.google.common.util.concurrent.UncheckedTimeoutException: UncheckedTimeoutException()
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean moveToPosition(int)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
androidx.room.RoomDatabase: void runInTransaction(java.lang.Runnable)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$11: java.lang.Object call()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintList(android.content.res.ColorStateList)
androidx.room.InvalidationTracker: void refreshVersionsAsync()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
kotlin.jvm.internal.MutablePropertyReference1: java.lang.Object getDelegate(java.lang.Object)
com.kiosoft2.common.cache.TaskCacheManager: void setMmkv(com.tencent.mmkv.MMKV)
com.kiosoft2.common.cache.db.database.AppDataBase_Impl$1: AppDataBase_Impl$1(com.kiosoft2.common.cache.db.database.AppDataBase_Impl,int)
androidx.room.util.TableInfo$ForeignKeyWithSequence: int getSequence()
androidx.room.QueryInterceptorDatabase: void query$lambda$6(androidx.room.QueryInterceptorDatabase,java.lang.String)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$2: java.lang.Object invoke(java.lang.Object)
com.tencent.mmkv.MMKV: int decodeInt(long,java.lang.String,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
kotlin.jvm.internal.MutablePropertyReference1: MutablePropertyReference1(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.room.QueryInterceptorDatabase: boolean isReadOnly()
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType valueOf(java.lang.String)
androidx.room.AutoMigration: int from()
com.kiosoft2.common.task.model.ParameterInfo: void setValue(java.lang.String)
androidx.room.CoroutinesRoom$Companion$execute$4$job$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.RoomDatabase: java.lang.Object unwrapOpenHelper(java.lang.Class,androidx.sqlite.db.SupportSQLiteOpenHelper)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
androidx.room.AutoClosingRoomOpenHelperFactory: androidx.sqlite.db.SupportSQLiteOpenHelper create(androidx.sqlite.db.SupportSQLiteOpenHelper$Configuration)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
androidx.room.MultiInstanceInvalidationClient: java.lang.Runnable getRemoveObserverRunnable()
com.kiosoft2.testdemo.db.model.User_: void access$setEntityClass_$cp(java.lang.Class)
androidx.room.QueryInterceptorStatement: QueryInterceptorStatement(androidx.sqlite.db.SupportSQLiteStatement,java.lang.String,java.util.concurrent.Executor,androidx.room.RoomDatabase$QueryCallback)
androidx.core.view.ViewCompat$Api17Impl: void setLayerPaint(android.view.View,android.graphics.Paint)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
androidx.room.RoomDatabase: <clinit>()
androidx.room.FtsOptions$MatchInfo: androidx.room.FtsOptions$MatchInfo[] values()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: boolean inTransaction()
androidx.room.RoomTrackingLiveData: boolean getInTransaction()
com.kiosoft2.api.statement.UpdateSQL: java.util.List getArgumentList()
com.kiosoft2.testdemo.db.model.Book: int getPage()
androidx.room.Index: boolean unique()
com.kiosoft2.common.autoservice.aspect.TaskServiceBindAspect$Companion: com.kiosoft2.common.autoservice.aspect.TaskServiceBindAspect aspectOf()
androidx.room.RoomDatabase$beginTransaction$1: java.lang.Object invoke(java.lang.Object)
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1$job$1: RoomDatabaseKt$invalidationTrackerFlow$1$job$1(androidx.room.RoomDatabase,androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1$observer$1,boolean,kotlinx.coroutines.channels.ProducerScope,java.lang.String[],java.util.concurrent.atomic.AtomicBoolean,kotlin.coroutines.Continuation)
com.kiosoft2.common.task.model.TaskInfo: java.lang.String getOwerClassName()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: java.lang.Object removeCacheTaskList(java.util.List,kotlin.coroutines.Continuation)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: int getPosition()
com.kiosoft2.api.EntityManager: EntityManager()
androidx.room.RoomOpenHelper$Delegate: RoomOpenHelper$Delegate(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
androidx.core.app.NavUtils$Api16Impl: android.content.Intent getParentActivityIntent(android.app.Activity)
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.MainCoroutineDispatcher getImmediate()
com.kiosoft2.api.builder.Query: java.lang.Object findFirst(java.lang.Class)
androidx.room.FtsOptions$Order: androidx.room.FtsOptions$Order[] values()
androidx.room.RoomOpenHelper: RoomOpenHelper(androidx.room.DatabaseConfiguration,androidx.room.RoomOpenHelper$Delegate,java.lang.String)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api16Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,android.widget.TextView,android.text.TextPaint)
com.kiosoft2.common.router.ARouterOperator$FragmentBundleManager: com.kiosoft2.common.router.BundleManager withSerializable(java.lang.String,java.io.Serializable)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void execPerConnectionSQL(java.lang.String,java.lang.Object[])
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pokeOpen$1: <clinit>()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition greater(com.kiosoft2.api.Property,java.lang.String)
androidx.room.InvalidationTracker$WeakObserver: InvalidationTracker$WeakObserver(androidx.room.InvalidationTracker,androidx.room.InvalidationTracker$Observer)
com.kiosoft2.common.task.model.TaskInfo: java.lang.String toString()
com.kiosoft2.testdemo.db.model.Book_: java.util.List getCompositePK()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void beginTransactionNonExclusive()
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
com.kiosoft2.common.task.util.TaskMethodUtil: void invokeMethod(java.lang.Object,java.lang.Class,com.kiosoft2.common.task.model.TaskInfo)
androidx.room.SharedSQLiteStatement$stmt$2: SharedSQLiteStatement$stmt$2(androidx.room.SharedSQLiteStatement)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$15: com.kiosoft2.common.task.model.TaskInfo call()
com.kiosoft2.api.helper.SQLiteHelper$3: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)
com.kiosoft2.common.model.BaseLifecycleOwnerImpl$sam$androidx_lifecycle_Observer$0: void onChanged(java.lang.Object)
com.kiosoft2.common.task.util.TaskInfoRepository: TaskInfoRepository(com.kiosoft2.common.cache.db.dao.TaskInfoDao)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.room.DatabaseConfiguration: DatabaseConfiguration(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$MigrationContainer,java.util.List,boolean,androidx.room.RoomDatabase$JournalMode,java.util.concurrent.Executor,java.util.concurrent.Executor,boolean,boolean,boolean,java.util.Set,java.lang.String,java.io.File)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: boolean isDbLockedByCurrentThread()
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$reStartTask$2: TaskServiceImpl$reStartTask$2(java.lang.Object,java.lang.String,com.kiosoft2.common.autoservice.impl.TaskServiceImpl,kotlin.coroutines.Continuation)
com.kiosoft2.api.Property: com.kiosoft2.api.Property lower()
androidx.room.rxjava3.EmptyResultSetException: EmptyResultSetException(java.lang.String)
androidx.room.Fts3: java.lang.String tokenizer()
com.kiosoft2.common.task.util.TaskManager$removeTask$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String)
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$1: void invoke(java.lang.Throwable)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$13: kotlin.Unit call()
androidx.room.IMultiInstanceInvalidationService: <clinit>()
com.kiosoft2.common.router.ARouterOperator: void navigationActivity(android.app.Activity,com.kiosoft2.common.router.BundleManager,java.lang.Integer,boolean)
com.kiosoft2.testdemo.db.model.User: short getA5()
androidx.room.QueryInterceptorProgram: void bindNull(int)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$14: TaskInfoDao_Impl$14(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl,androidx.room.RoomSQLiteQuery)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notEqual(com.kiosoft2.api.builder.ChildQuery,byte[])
androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl: android.view.textclassifier.TextClassifier getTextClassifier(android.widget.TextView)
com.kiosoft2.api.dao.Dao: int delete(java.util.List)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.room.TransactionElement: void release()
androidx.room.QueryInterceptorDatabase: androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$1: java.lang.Object invoke(java.lang.Object)
androidx.room.DatabaseConfiguration: DatabaseConfiguration(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$MigrationContainer,java.util.List,boolean,androidx.room.RoomDatabase$JournalMode,java.util.concurrent.Executor,boolean,java.util.Set)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
androidx.room.util.TableInfo$Index: boolean equals(java.lang.Object)
androidx.room.ForeignKey: boolean deferred()
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.kiosoft2.common.cache.db.database.AppDataBase_Impl$1: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)
com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper$onActivityCreated$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.appcompat.app.AppCompatDelegate$Api33Impl: void localeManagerSetApplicationLocales(java.lang.Object,android.os.LocaleList)
kotlinx.coroutines.android.HandlerContext: HandlerContext(android.os.Handler,java.lang.String)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition greaterOrEqual(com.kiosoft2.api.builder.ChildQuery,byte[])
androidx.room.MultiInstanceInvalidationClient: void setClientId(int)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$maximumSize$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$maximumSize$1()
androidx.room.paging.LimitOffsetDataSource$1: void onInvalidated(java.util.Set)
androidx.room.MapColumn: java.lang.String columnName()
androidx.core.view.ViewCompat$Api31Impl: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
kotlin.jvm.internal.PropertyReference: kotlin.reflect.KCallable compute()
androidx.room.AutoCloser: void executeAutoCloser$lambda$0(androidx.room.AutoCloser)
com.kiosoft2.apt.AParameter$$Test1Fragment: AParameter$$Test1Fragment()
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition greaterOrEqual(com.kiosoft2.api.builder.ChildQuery,double)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder createFromInputStream(java.util.concurrent.Callable)
androidx.room.AmbiguousColumnResolver$Match: AmbiguousColumnResolver$Match(kotlin.ranges.IntRange,java.util.List)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: boolean yieldIfContendedSafely(long)
com.kiosoft2.common.task.util.TaskInfoRepository: java.lang.Object updateTaskInfoList(java.util.List,kotlin.coroutines.Continuation)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
com.kiosoft2.common.task.annotions.DelayedTask: int taskCode()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
androidx.sqlite.db.SupportSQLiteOpenHelper$Callback: void onCreate(androidx.sqlite.db.SupportSQLiteDatabase)
com.kiosoft2.common.cache.TaskCacheManager: com.tencent.mmkv.MMKV getMmkv()
androidx.room.SharedSQLiteStatement: void assertNotMainThread()
com.kiosoft2.common.task.util.TaskInfoRepository: java.lang.Object getTaskInfoByTaskId(java.lang.String,kotlin.coroutines.Continuation)
androidx.room.QueryInterceptorDatabase: void endTransaction$lambda$4(androidx.room.QueryInterceptorDatabase)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeInsert$1: AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeInsert$1()
androidx.lifecycle.LiveData: void setValue(java.lang.Object)
androidx.room.RoomOpenHelper: void createMasterTableIfNotExists(androidx.sqlite.db.SupportSQLiteDatabase)
com.tencent.mmkv.MMKV: int ashmemFD()
androidx.room.QueryInterceptorStatement: void bindLong(int,long)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
com.kiosoft2.api.type.JoinType: <clinit>()
androidx.core.view.ViewCompat$Api16Impl: boolean getFitsSystemWindows(android.view.View)
androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
androidx.room.util.TableInfo$Column$Companion: TableInfo$Column$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kiosoft2.common.task.util.TaskInfoRepository$insertOrUpdateTaskInfo$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.room.InvalidationTracker$ObservedTableTracker: boolean getNeedsSync()
com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager: com.kiosoft2.common.router.BundleManager withBundle(java.lang.String,android.os.Bundle)
androidx.room.SQLiteCopyOpenHelper: void setDatabaseConfiguration(androidx.room.DatabaseConfiguration)
com.kiosoft2.api.builder.OpBuilder: int deleteByIds(java.lang.Integer[])
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notIn(com.kiosoft2.api.builder.ChildQuery,java.util.Collection)
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$start$2: TaskServiceImpl$start$2(java.lang.Object)
com.google.common.collect.MapMakerInternalMap$Strength: com.google.common.collect.MapMakerInternalMap$Strength[] values()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView$Api17Impl: int getLayoutDirection(android.content.res.Configuration)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostResumed(android.app.Activity)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.kiosoft2.api.helper.SQLiteHelper: void generateWhereSql(com.kiosoft2.api.statement.element.Condition,java.lang.StringBuilder)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: int getInt(int)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: java.lang.String simpleQueryForString()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
kotlin.jvm.internal.CallableReference: boolean isFinal()
androidx.room.MultiInstanceInvalidationClient: java.lang.Runnable getSetUpRunnable()
com.kiosoft2.api.aparameter.api.AParameterGet: void getParameter(java.lang.Object)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder addCallback(androidx.room.RoomDatabase$Callback)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.room.AutoMigration: java.lang.Class spec()
com.kiosoft2.api.EntityManager$Companion: EntityManager$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kiosoft2.api.builder.OpBuilder: double sum(com.kiosoft2.api.Property)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setForeignKeyConstraintsEnabled$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setForeignKeyConstraintsEnabled$1(boolean)
androidx.room.QueryInterceptorStatement: void execute()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notEqual(com.kiosoft2.api.Property,java.util.Date)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition less(com.kiosoft2.api.builder.ChildQuery,java.util.Date)
com.tencent.mmkv.MMKV: long getMMKVWithAshmemFD(java.lang.String,int,int,java.lang.String)
com.kiosoft2.testdemo.db.model.User: void setA10(java.lang.Integer)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: void bindString(int,java.lang.String)
kotlin.jvm.internal.CallableReference: boolean isAbstract()
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
androidx.room.rxjava3.R: R()
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition notEqual(long)
com.kiosoft2.api.statement.DeleteSQL: java.util.List getArgumentList()
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl: java.lang.String toLanguageTag(java.util.Locale)
com.kiosoft2.common.router.ARouterOperator$FragmentBundleManager: com.kiosoft2.common.router.ARouterOperator$FragmentBundleManager withBundle(java.lang.String,android.os.Bundle)
com.kiosoft2.api.aparameter.AParameterManager: void load(java.lang.Object)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostStarted(android.app.Activity)
com.kiosoft2.api.aparameter.AParameterManager: java.lang.String getAPT_PACKAGE_DEFULT()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
kotlin.jvm.internal.Lambda: Lambda(int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: int getColumnIndex(java.lang.String)
androidx.lifecycle.LiveData: <clinit>()
com.kiosoft2.testdemo.db.model.User: void setA4(byte[])
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition in(com.kiosoft2.api.Property,java.lang.Integer[])
com.kiosoft2.testdemo.db.model.User_: void bindDeleteAdapterValue(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)
com.kiosoft2.common.encrypt.EncryptService: java.lang.String getEncrypt(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition greaterOrEqual(com.kiosoft2.api.builder.ChildQuery,long)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
com.kiosoft2.common.task.model.TaskInfo: boolean isRunning()
com.kiosoft2.api.statement.SelectSQL: SelectSQL(com.kiosoft2.api.Entity)
com.kiosoft2.common.autoservice.aspect.TaskServiceBindAspect: <clinit>()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
com.kiosoft2.testdemo.db.model.User_: java.util.List access$getCompositePK_$cp()
com.kiosoft2.common.thead.utils.AppExecutors$MainThreadExecutor: void execute(java.lang.Runnable)
androidx.profileinstaller.ProfileInstallReceiver: ProfileInstallReceiver()
androidx.room.AutoCloser: long getLastDecrementRefCountTimeStamp$room_runtime_release()
com.kiosoft2.api.helper.SQLiteHelper$1: java.lang.String createQuery()
kotlinx.coroutines.flow.internal.ChildCancelledException: ChildCancelledException()
com.kiosoft2.api.statement.element.Condition: boolean isConditionEmpty()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$2: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)
com.kiosoft2.common.task.util.TimeUtil: long conventTimeMillis(long,java.util.concurrent.TimeUnit)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: boolean enableWriteAheadLogging()
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
androidx.core.util.ObjectsCompat$Api19Impl: boolean equals(java.lang.Object,java.lang.Object)
com.kiosoft2.common.task.annotions.RecurringTask: int taskCode()
com.kiosoft2.api.type.FuncType: FuncType(java.lang.String,int)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$3: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
androidx.room.ForeignKey: <clinit>()
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
com.kiosoft2.api.builder.DeleteBuilder: int delete()
com.kiosoft2.common.bus.LiveDataBus$Companion: com.kiosoft2.common.bus.LiveDataBus getInstance()
androidx.room.EntityUpsertionAdapter: java.util.List upsertAndReturnIdsList(java.lang.Object[])
androidx.room.InvalidationTracker: void startTrackingTable(androidx.sqlite.db.SupportSQLiteDatabase,int)
com.alibaba.fastjson2.JSONWriter$Feature: com.alibaba.fastjson2.JSONWriter$Feature[] values()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
kotlin.jvm.internal.PropertyReference1Impl: java.lang.Object get(java.lang.Object)
androidx.core.graphics.TypefaceCompatUtil$Api19Impl: android.os.ParcelFileDescriptor openFileDescriptor(android.content.ContentResolver,android.net.Uri,java.lang.String,android.os.CancellationSignal)
com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper: void onActivityDestroyed(android.app.Activity)
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
androidx.room.MultiInstanceInvalidationService$callbackList$1: MultiInstanceInvalidationService$callbackList$1(androidx.room.MultiInstanceInvalidationService)
com.kiosoft2.testdemo.db.model.Book_: com.kiosoft2.api.Property access$getPage$cp()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
androidx.room.util.FtsTableInfo$Companion: java.util.Set readOptions(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.room.IMultiInstanceInvalidationService$Stub$Proxy: android.os.IBinder asBinder()
com.kiosoft2.common.model.BaseLifecycleOwnerImpl$WhenMappings: <clinit>()
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.kiosoft2.common.task.util.TaskInfoRepository$getTaskInfoByTaskId$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.kiosoft2.common.task.util.TaskManager: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.room.AutoCloser: void decrementCountAndScheduleClose()
com.kiosoft2.common.router.ARouterOperator$FragmentBundleManager: com.kiosoft2.common.router.ARouterOperator$FragmentBundleManager withString(java.lang.String,java.lang.String)
com.kiosoft2.common.bus.LiveDataBus$bus$2: LiveDataBus$bus$2()
androidx.room.paging.LimitOffsetDataSource: void loadInitial(androidx.paging.PositionalDataSource$LoadInitialParams,androidx.paging.PositionalDataSource$LoadInitialCallback)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder fallbackToDestructiveMigrationOnDowngrade()
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.kiosoft2.testdemo.bus.impl.ILifecycleOwner: void onPause()
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$reStartTask$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.room.RenameTable: java.lang.String fromTableName()
com.kiosoft2.api.statement.element.Condition: void add(com.kiosoft2.api.statement.element.Expression)
kotlinx.coroutines.CoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher plus(kotlinx.coroutines.CoroutineDispatcher)
androidx.profileinstaller.ProfileInstallerInitializer: ProfileInstallerInitializer()
com.kiosoft2.common.task.helper.RecurringTaskHelper$start$1: void onError(java.lang.Throwable)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
androidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement acquire()
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
androidx.room.QueryInterceptorDatabase: void execPerConnectionSQL(java.lang.String,java.lang.Object[])
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
com.kiosoft2.api.builder.OpBuilder: java.lang.Long save(java.lang.Object)
kotlin.jvm.internal.PropertyReference1Impl: PropertyReference1Impl(java.lang.Class,java.lang.String,java.lang.String,int)
com.kiosoft2.common.autoservice.impl.TaskServiceImpl: void reStartTask(java.lang.Object,java.lang.String)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder allowMainThreadQueries()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
kotlinx.coroutines.android.HandlerDispatcherKt: java.lang.Object awaitFrame(kotlin.coroutines.Continuation)
com.kiosoft2.common.click.aspect.InterceptSingleTimeAspectJ: android.util.LruCache access$getLruCache$cp()
androidx.room.rxjava3.RxRoom: void lambda$createFlowable$1(java.lang.String[],androidx.room.RoomDatabase,io.reactivex.rxjava3.core.FlowableEmitter)
androidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl: void rebase(android.content.res.Resources$Theme)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition endWith(com.kiosoft2.api.Property,java.lang.String)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition lessOrEqual(com.kiosoft2.api.builder.ChildQuery,java.util.Date)
com.kiosoft2.common.cache.TaskCacheManager$removeCacheTask$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.room.RoomMasterTable: RoomMasterTable()
com.kiosoft2.api.helper.SQLiteHelper: java.lang.String generateInsertSql(com.kiosoft2.api.Entity,int)
com.kiosoft2.api.builder.JoinBuilder: com.kiosoft2.api.builder.JoinBuilder regExp(com.kiosoft2.api.Property,com.kiosoft2.api.Property)
androidx.appcompat.widget.AppCompatSpinner$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
androidx.room.QueryInterceptorDatabase: boolean isWriteAheadLoggingEnabled()
androidx.room.RoomSQLiteQuery: void getLongBindings$annotations()
com.tencent.mmkv.MMKVRecoverStrategic: com.tencent.mmkv.MMKVRecoverStrategic[] values()
com.kiosoft2.common.task.aspect.TaskAspectJKt: io.reactivex.rxjava3.core.Observable threadType(io.reactivex.rxjava3.core.Observable,com.kiosoft2.common.task.annotions.TaskThread)
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken get(java.lang.Class)
androidx.room.SQLiteCopyOpenHelper: void copyDatabaseFile(java.io.File,boolean)
com.kiosoft2.api.builder.OpBuilder: double max(com.kiosoft2.api.Property)
androidx.room.Index: androidx.room.Index$Order[] orders()
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property access$getA9$cp()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
androidx.appcompat.app.AppCompatDelegate$Api24Impl: android.os.LocaleList localeListForLanguageTags(java.lang.String)
com.kiosoft2.common.task.aspect.TaskAspectJ: void requestTaskMethod(com.kiosoft2.common.task.annotions.RecurringTask)
com.kiosoft2.common.task.util.TaskManager: <clinit>()
com.kiosoft2.common.task.model.ParameterInfo: java.lang.Class getParameterType()
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
com.kiosoft2.api.builder.UpdateBuilder: UpdateBuilder(androidx.room.RoomDatabase,com.kiosoft2.api.statement.UpdateSQL)
androidx.room.BuiltInTypeConverters$State: androidx.room.BuiltInTypeConverters$State[] values()
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException()
androidx.room.util.RelationUtil: void recursiveFetchHashMap(java.util.HashMap,boolean,kotlin.jvm.functions.Function1)
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.room.RoomDatabaseKt: kotlinx.coroutines.flow.Flow invalidationTrackerFlow$default(androidx.room.RoomDatabase,java.lang.String[],boolean,int,java.lang.Object)
com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager: void navigation(androidx.fragment.app.Fragment,java.lang.Integer,boolean)
com.kiosoft2.testdemo.bus.impl.ILifecycleOwner: androidx.lifecycle.LifecycleRegistry getLifecycleRegistry()
com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager: com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager withBundle(java.lang.String,android.os.Bundle)
com.kiosoft2.api.EntityManager$Companion: EntityManager$Companion()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$2: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$2(long)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
kotlinx.coroutines.MainCoroutineDispatcher: java.lang.String toString()
com.kiosoft2.common.task.aspect.DelayedTaskAspectJ: <clinit>()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: java.lang.Object getCacheTaskListByOwerClassName(java.lang.String,kotlin.coroutines.Continuation)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition greater(com.kiosoft2.api.builder.ChildQuery,byte[])
androidx.room.rxjava3.RxRoom: io.reactivex.rxjava3.core.Observable createObservable(androidx.room.RoomDatabase,boolean,java.lang.String[],java.util.concurrent.Callable)
androidx.room.Index$Order: Index$Order(java.lang.String,int)
com.kiosoft2.api.builder.Query: double avg(com.kiosoft2.api.Property)
com.kiosoft2.api.statement.UpdateSQL: java.lang.String getSql()
com.kiosoft2.common.task.util.TaskInfoRepository$getCacheTaskListByOwerClassName$2: TaskInfoRepository$getCacheTaskListByOwerClassName$2(com.kiosoft2.common.task.util.TaskInfoRepository,java.lang.String,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeUpdateDelete$1: AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeUpdateDelete$1()
androidx.core.os.OperationCanceledException: OperationCanceledException()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$execute$1: AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$execute$1()
androidx.room.RoomOpenHelper: void onUpgrade(androidx.sqlite.db.SupportSQLiteDatabase,int,int)
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
androidx.room.RoomSQLiteQuery$Companion$copyFrom$1: void bindBlob(int,byte[])
com.kiosoft2.common.router.BundleManager: android.os.Bundle getBundle()
kotlin.NoWhenBranchMatchedException: NoWhenBranchMatchedException()
androidx.room.Index$Order: androidx.room.Index$Order[] values()
androidx.core.view.ViewCompat$Api16Impl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
com.kiosoft2.common.cache.TaskCacheManager$cacheTask$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.kiosoft2.api.builder.SetBuilder: com.kiosoft2.api.builder.SetBuilder set(com.kiosoft2.api.Property,java.util.Date)
com.kiosoft2.common.task.model.ParameterInfo: ParameterInfo()
androidx.room.RoomDatabase: boolean isMainThread$room_runtime_release()
androidx.room.DatabaseConfiguration: boolean isMigrationRequiredFrom(int)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notIn(com.kiosoft2.api.builder.ChildQuery,com.kiosoft2.api.builder.ChildQuery)
androidx.room.paging.LimitOffsetDataSource: LimitOffsetDataSource(androidx.room.RoomDatabase,androidx.sqlite.db.SupportSQLiteQuery,boolean,boolean,java.lang.String[])
com.kiosoft2.common.router.ARouterOperator: kotlin.Lazy access$getInstance$delegate$cp()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.room.AmbiguousColumnResolver$ResultColumn: java.lang.String getName()
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
androidx.room.InvalidationTracker: void stopTrackingTable(androidx.sqlite.db.SupportSQLiteDatabase,int)
androidx.room.InvalidationTracker$WeakObserver: java.lang.ref.WeakReference getDelegateRef()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition lessOrEqual(com.kiosoft2.api.builder.ChildQuery,com.kiosoft2.api.builder.ChildQuery)
com.alibaba.fastjson2.JSONReader$Feature: com.alibaba.fastjson2.JSONReader$Feature[] values()
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View)
kotlinx.coroutines.CoroutineDispatcher: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1$observer$1: void onInvalidated(java.util.Set)
com.kiosoft2.testdemo.bus.impl.ILifecycleOwner: void onDestroy()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
com.kiosoft2.api.type.FuncType: <clinit>()
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult valueOf(java.lang.String)
com.kiosoft2.api.statement.SelectSQL: java.lang.String getSql()
androidx.room.TypeConverters: androidx.room.BuiltInTypeConverters builtInTypeConverters()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$path$1: <clinit>()
com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager: void navigation(android.app.Activity,java.lang.Integer)
com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager: com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager withInt(java.lang.String,int)
com.kiosoft2.encrypt.EncryptServiceImpl: void setTEstEntry(com.kiosoft2.encrypt.TEstEntry)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
com.kiosoft2.api.Property: com.kiosoft2.api.Property count()
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$1: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)
androidx.core.app.ActivityCompat$Api16Impl: void finishAffinity(android.app.Activity)
androidx.room.AutoClosingRoomOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getReadableDatabase()
com.kiosoft2.testdemo.db.model.User: void setA6(java.lang.Float)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeSqliteStatementWithRefCount$1: java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase)
com.kiosoft2.testdemo.db.model.User: java.lang.String getName()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition greaterOrEqual(com.kiosoft2.api.Property,byte[])
com.kiosoft2.testdemo.db.model.Book_: void bindInsertionAdapterValue(androidx.sqlite.db.SupportSQLiteStatement,com.kiosoft2.testdemo.db.model.Book)
com.kiosoft2.testdemo.activity.OverLineEdixView: OverLineEdixView(android.content.Context,android.util.AttributeSet)
com.kiosoft2.api.builder.OpBuilder: java.util.List find(int,int)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition like(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
androidx.room.RoomSQLiteQuery: int getArgCount()
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
com.kiosoft2.common.task.model.TaskInfo: void setTaskCode(int)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$inTransaction$1: <clinit>()
com.kiosoft2.api.builder.OpBuilder: int update(java.util.Collection)
com.kiosoft2.api.statement.SelectSQL: boolean isSingleColumn()
com.kiosoft2.common.click.aspect.InterceptClickAspectJ: java.lang.reflect.Method getMethod(org.aspectj.lang.ProceedingJoinPoint)
androidx.room.ForeignKey$Companion: ForeignKey$Companion()
com.kiosoft2.api.helper.SQLiteHelper$4: <clinit>()
com.kiosoft2.testdemo.db.model.User: void setA8(java.lang.Byte)
com.kiosoft2.common.task.model.TaskInfo: com.kiosoft2.common.task.annotions.TaskThread component12()
com.kiosoft2.common.router.ARouterOperator$Companion$instance$2: com.kiosoft2.common.router.ARouterOperator invoke()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
androidx.room.RoomSQLiteQuery: void getBlobBindings$annotations()
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
com.kiosoft2.common.thead.aspect.InterceptIOThreadAspectJ: void requestRunInIOMethod(com.kiosoft2.common.thead.annotions.RunInIO)
androidx.core.view.ViewCompat$Api15Impl: boolean hasOnClickListeners(android.view.View)
androidx.room.EntityUpsertionAdapter: long upsertAndReturnId(java.lang.Object)
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: android.os.LocaleList forLanguageTags(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.kiosoft2.api.Entity: java.util.List getCompositePK()
androidx.room.EntityInsertionAdapter: long[] insertAndReturnIdsArray(java.util.Collection)
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
com.kiosoft2.api.dao.Dao: java.util.List resultList(androidx.sqlite.db.SupportSQLiteQuery)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.kiosoft2.common.thead.aspect.InterceptMainThreadAspectJ: void aroundJoinPoint(org.aspectj.lang.ProceedingJoinPoint,com.kiosoft2.common.thead.annotions.RunInMainThread)
com.kiosoft2.testdemo.db.model.User: void setName(java.lang.String)
com.kiosoft2.common.router.ARouterOperator: <clinit>()
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForLong$1: AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForLong$1()
com.kiosoft2.common.model.BaseLifecycleOwnerImpl$sam$androidx_lifecycle_Observer$0: kotlin.Function getFunctionDelegate()
com.kiosoft2.common.task.annotions.DelayedTask: java.util.concurrent.TimeUnit unit()
com.kiosoft2.common.click.annotions.SingleTime: long time()
com.google.gson.reflect.TypeToken: java.lang.String toString()
kotlin.jvm.internal.Lambda: int getArity()
com.kiosoft2.api.helper.SQLiteHelper$3: java.lang.String createQuery()
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: short getShort(int)
androidx.appcompat.widget.MenuPopupWindow$Api29Impl: void setTouchModal(android.widget.PopupWindow,boolean)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$execute$1: java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteStatement)
com.kiosoft2.common.cache.TaskCacheManager: void cacheTask(com.kiosoft2.common.task.model.TaskInfo)
com.kiosoft2.common.cache.TaskCacheManager$getCacheTaskListByOwerClassName$2: java.lang.Object invokeSuspend(java.lang.Object)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition equal(com.kiosoft2.api.Property,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
androidx.room.RoomSQLiteQuery: void bindLong(int,long)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
com.kiosoft2.common.task.util.TaskManager$removeTask$1$1: TaskManager$removeTask$1$1(com.kiosoft2.common.task.model.TaskInfo,kotlin.coroutines.Continuation)
androidx.room.InvalidationTracker$ObserverWrapper: androidx.room.InvalidationTracker$Observer getObserver$room_runtime_release()
com.kiosoft2.common.click.utils.ClickUtil: ClickUtil()
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
androidx.room.RoomDatabase$Callback: void onDestructiveMigration(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
androidx.room.CoroutinesRoom$Companion$createFlow$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
kotlin.KotlinNothingValueException: KotlinNothingValueException()
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.kiosoft2.common.task.util.TaskManager$taskActivityLifecycleHelper$1: TaskManager$taskActivityLifecycleHelper$1()
com.kiosoft2.common.task.util.TaskInfoRepository$getTaskInfoByTaskId$2: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.android.HandlerDispatcherKt: void access$postFrameCallback(android.view.Choreographer,kotlinx.coroutines.CancellableContinuation)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.kiosoft2.api.helper.SQLiteHelper: java.lang.String generatePKSelectSql(com.kiosoft2.api.Entity,int)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$path$1: java.lang.String invoke(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$inTransaction$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$inTransaction$1()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition like(com.kiosoft2.api.Property,java.lang.String)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition exists(com.kiosoft2.api.builder.ChildQuery)
androidx.room.SharedSQLiteStatement: androidx.sqlite.db.SupportSQLiteStatement getStmt(boolean)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition in(com.kiosoft2.api.Property,com.kiosoft2.api.builder.ChildQuery)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
com.kiosoft2.common.task.util.TaskManager$isExistTask$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.kiosoft2.common.task.aspect.DelayedTaskAspectJ: void requestDelayedTaskMethod(com.kiosoft2.common.task.annotions.DelayedTask)
androidx.core.view.ViewCompat$Api31Impl: java.lang.String[] getReceiveContentMimeTypes(android.view.View)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
androidx.room.QueryInterceptorStatement: void close()
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Class,java.lang.String,java.lang.String,int)
com.kiosoft2.testdemo.db.model.Book_: java.lang.Class access$getEntityClass_$cp()
com.kiosoft2.common.click.aspect.InterceptSingleTimeAspectJ: java.lang.reflect.Method getMethod(org.aspectj.lang.ProceedingJoinPoint)
androidx.room.EntityUpsertionAdapter: java.lang.Long[] upsertAndReturnIdsArrayBox(java.util.Collection)
com.kiosoft2.common.router.BundleManager: BundleManager(java.lang.Class)
com.kiosoft2.common.cache.TaskCacheManager$getCacheTaskListByOwerClassNameAndTaskId$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property access$getA10$cp()
androidx.appcompat.widget.AppCompatSpinner$Api23Impl: void setDropDownViewTheme(android.widget.ThemedSpinnerAdapter,android.content.res.Resources$Theme)
androidx.room.EntityInsertionAdapter: EntityInsertionAdapter(androidx.room.RoomDatabase)
com.kiosoft2.common.cache.TaskCacheManager$getCacheTaskListByOwerClassNameAndTaskId$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.room.RoomDatabase$QueryCallback: void onQuery(java.lang.String,java.util.List)
androidx.room.CoroutinesRoom$Companion$createFlow$1: java.lang.Object invokeSuspend(java.lang.Object)
com.tencent.mmkv.MMKV: long count(long)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api18Impl: boolean isInLayout(android.view.View)
androidx.room.MultiInstanceInvalidationClient: androidx.room.InvalidationTracker getInvalidationTracker()
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setEpicenterBounds(android.widget.PopupWindow,android.graphics.Rect)
androidx.room.MultiInstanceInvalidationClient$1: boolean isRemote$room_runtime_release()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
androidx.room.DeleteTable$Entries: androidx.room.DeleteTable[] value()
com.kiosoft2.api.utils.Utils: java.lang.String toJson(java.lang.Object)
com.kiosoft2.api.helper.SQLiteHelper: androidx.room.EntityDeletionOrUpdateAdapter getEntityDeleteAdapter(androidx.room.RoomDatabase,com.kiosoft2.api.Entity)
com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager: com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager withString(java.lang.String,java.lang.String)
androidx.room.RoomOpenHelper: void updateIdentity(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
kotlinx.coroutines.android.HandlerDispatcher: kotlinx.coroutines.android.HandlerDispatcher getImmediate()
kotlin.jvm.internal.MutablePropertyReference1: kotlin.reflect.KProperty1$Getter getGetter()
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.Class)
androidx.room.RoomOpenHelper$Companion: boolean hasEmptySchema$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase)
com.kiosoft2.testdemo.db.model.Book_: com.kiosoft2.testdemo.db.model.Book_ access$get_instance$cp()
com.kiosoft2.common.click.utils.ClickUtil: void setClick_interval_time(long)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition greater(byte[])
com.kiosoft2.testdemo.db.model.User: long getId()
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
androidx.room.InvalidationTracker: boolean ensureInitialization$room_runtime_release()
com.tencent.mmkv.MMKV: void setLogLevel(int)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
androidx.room.RoomTrackingLiveData: java.util.concurrent.atomic.AtomicBoolean getRegisteredObserver()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setLocale$1: java.lang.Object invoke(java.lang.Object)
com.kiosoft2.common.task.model.MethodInfo: MethodInfo()
com.kiosoft2.api.condition.PropertyCondition: PropertyCondition(com.kiosoft2.api.Property,com.kiosoft2.api.type.ExpressionType,java.lang.Object[])
androidx.room.RoomOpenHelper$Delegate: void onPreMigrate(androidx.sqlite.db.SupportSQLiteDatabase)
com.kiosoft2.api.builder.SetBuilder: com.kiosoft2.api.builder.SetBuilder set(com.kiosoft2.api.Property,java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
com.kiosoft2.api.builder.BasicConditionRelationBuilder: com.kiosoft2.api.builder.BasicConditionRelationBuilder or(com.kiosoft2.api.condition.PropertyCondition)
com.kiosoft2.api.condition.PropertyCondition: com.kiosoft2.api.condition.PropertyCondition or(com.kiosoft2.api.condition.PropertyCondition)
androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper: void onActivityStarted(android.app.Activity)
com.kiosoft2.api.Property: com.kiosoft2.api.Property sum()
com.kiosoft2.api.statement.SelectSQL: void setColumns(java.util.List)
androidx.room.QueryInterceptorDatabase: void disableWriteAheadLogging()
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition greater(long)
com.kiosoft2.common.task.util.TaskManager$removeTask$2$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.text.ICUCompat$Api24Impl: java.lang.String getScript(java.lang.Object)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
androidx.room.InvalidationTracker$refreshRunnable$1: java.util.Set checkUpdatedTable()
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: java.lang.String getColumnName(int)
com.kiosoft2.api.EntityManager$Companion: java.util.HashMap getEntityMap()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$12: TaskInfoDao_Impl$12(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl,java.lang.String)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.room.TransactionElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.android.HandlerDispatcherKt: java.lang.Object awaitFrameSlowPath(kotlin.coroutines.Continuation)
androidx.room.RoomDatabase: boolean isOpenInternal()
androidx.room.RoomTrackingLiveData: java.util.concurrent.Executor getQueryExecutor()
androidx.room.util.TableInfo$Companion: TableInfo$Companion()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode valueOf(java.lang.String)
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.room.RoomWarnings$Companion: RoomWarnings$Companion()
com.kiosoft2.api.condition.PropertyCondition: com.kiosoft2.api.condition.PropertyCondition and(com.kiosoft2.api.condition.PropertyCondition)
com.kiosoft2.testdemo.activity.TestActivity04: TestActivity04()
androidx.room.QueryInterceptorDatabase: void beginTransactionNonExclusive()
com.kiosoft2.common.bus.LiveDataBus$bus$2: java.util.HashMap invoke()
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$reStartTask$2: java.lang.Object invokeSuspend(java.lang.Object)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition equal(double)
androidx.room.AmbiguousColumnResolver$ResultColumn: int getIndex()
com.kiosoft2.api.Property: java.lang.String getAlias()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
androidx.room.RoomTrackingLiveData: java.lang.Runnable getRefreshRunnable()
androidx.room.Index$Order: androidx.room.Index$Order[] $values()
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
com.kiosoft2.common.cache.TaskCacheManager$cacheTask$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle)
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1$1: RoomDatabaseKt$startTransactionCoroutine$2$1$1(androidx.room.RoomDatabase,kotlinx.coroutines.CancellableContinuation,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
com.kiosoft2.api.type.ExpressionType: java.lang.String getFormat()
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$10: kotlin.Unit call()
com.google.gson.reflect.TypeToken: java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class)
com.kiosoft2.common.task.util.TaskManager$isExistTask$1$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.room.AutoMigration: int to()
com.kiosoft2.common.task.model.TaskInfo: long component8()
androidx.appcompat.widget.SearchView: void setInputType(int)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatEditText$SuperCaller getSuperCaller()
androidx.room.QueryInterceptorProgram: void bindString(int,java.lang.String)
com.tencent.mmkv.MMKV: boolean encodeBool(long,java.lang.String,boolean)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.kiosoft2.common.task.aspect.TaskAspectJ: void aroundJoinPoint(org.aspectj.lang.ProceedingJoinPoint,com.kiosoft2.common.task.annotions.RecurringTask)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.core.widget.ListViewCompat$Api19Impl: boolean canScrollList(android.widget.ListView,int)
com.kiosoft2.common.click.aspect.ClickListenerAspect: ClickListenerAspect()
com.kiosoft2.common.cache.TaskCacheManager: com.google.gson.Gson getGson()
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void setVersion(int)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForString$1: java.lang.Object invoke(java.lang.Object)
androidx.room.MultiInstanceInvalidationService: int getMaxClientId$room_runtime_release()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
androidx.room.InvalidationTracker: androidx.room.RoomDatabase getDatabase$room_runtime_release()
com.kiosoft2.apt.AParameter$$TestActivity04: AParameter$$TestActivity04()
kotlinx.coroutines.android.HandlerContext: java.lang.String toString()
com.kiosoft2.common.task.aspect.TaskAspectJKt: io.reactivex.rxjava3.core.Observable threadSwitch(io.reactivex.rxjava3.core.Observable)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
io.reactivex.rxjava3.core.BackpressureStrategy: io.reactivex.rxjava3.core.BackpressureStrategy valueOf(java.lang.String)
kotlinx.coroutines.CoroutineDispatcher: void releaseInterceptedContinuation(kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForLong$1: java.lang.Object invoke(java.lang.Object)
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
com.kiosoft2.common.cache.TaskCacheManager$cacheTask$1$1: java.lang.Object invokeSuspend(java.lang.Object)
com.kiosoft2.testdemo.db.model.User_: void bindUpdateAdapterValue(androidx.sqlite.db.SupportSQLiteStatement,com.kiosoft2.testdemo.db.model.User)
androidx.room.FtsOptions$Order: androidx.room.FtsOptions$Order[] $values()
androidx.room.util.TableInfo$ForeignKeyWithSequence: TableInfo$ForeignKeyWithSequence(int,int,java.lang.String,java.lang.String)
com.kiosoft2.common.click.aspect.InterceptSingleTimeAspectJ: InterceptSingleTimeAspectJ()
androidx.room.RoomDatabaseKt$withTransaction$transactionBlock$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.kiosoft2.common.task.util.TaskReLoadUtil: TaskReLoadUtil()
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder setMultiInstanceInvalidationServiceIntent(android.content.Intent)
com.kiosoft2.api.helper.SQLiteHelper$2: java.lang.String createQuery()
androidx.room.RoomSQLiteQuery$Companion$copyFrom$1: void bindNull(int)
com.kiosoft2.common.task.model.TaskInfo: com.kiosoft2.common.task.model.TaskInfo copy(int,java.lang.String,java.lang.Class,java.lang.String,androidx.lifecycle.LifecycleOwner,java.lang.String,int,long,java.lang.ref.WeakReference,boolean,boolean,com.kiosoft2.common.task.annotions.TaskThread,long,long,long,java.util.concurrent.TimeUnit,boolean)
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition equal(com.kiosoft2.api.builder.ChildQuery,java.util.Date)
androidx.room.RoomDatabase$JournalMode: boolean isLowRamDevice(android.app.ActivityManager)
com.kiosoft2.testdemo.db.model.Book_: java.util.List access$getAllProperties_$cp()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.kiosoft2.common.task.util.TaskManager: java.util.concurrent.ConcurrentHashMap getLifecycleMap()
androidx.room.QueryInterceptorStatement: void executeUpdateDelete$lambda$1(androidx.room.QueryInterceptorStatement)
kotlinx.coroutines.android.HandlerDispatcherKt: void updateChoreographerAndPostFrameCallback(kotlinx.coroutines.CancellableContinuation)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList createLocaleList(java.util.Locale[])
com.kiosoft2.common.thead.aspect.InterceptIOThreadAspectJ$Companion: InterceptIOThreadAspectJ$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.room.RoomSQLiteQuery: void getBindingTypes$annotations()
com.kiosoft2.common.cache.db.database.AppDataBase: AppDataBase()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition equal(com.kiosoft2.api.builder.ChildQuery,java.lang.String)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.kiosoft2.common.task.aspect.TaskAspectJ: java.util.List getMethodParameterInfo(org.aspectj.lang.ProceedingJoinPoint)
androidx.room.SQLiteCopyOpenHelper: SQLiteCopyOpenHelper(android.content.Context,java.lang.String,java.io.File,java.util.concurrent.Callable,int,androidx.sqlite.db.SupportSQLiteOpenHelper)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
androidx.room.QueryInterceptorDatabase: int getVersion()
androidx.room.Entity: androidx.room.ForeignKey[] foreignKeys()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$path$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$path$1()
com.kiosoft2.api.helper.SQLiteHelper: void bindPropertyValue(androidx.sqlite.db.SupportSQLiteProgram,java.util.List)
androidx.room.rxjava3.RxRoom$1: RxRoom$1(java.lang.String[],io.reactivex.rxjava3.core.FlowableEmitter)
androidx.room.EntityDeletionOrUpdateAdapter: java.lang.String createQuery()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
androidx.room.AmbiguousColumnResolver$resolve$4: AmbiguousColumnResolver$resolve$4(kotlin.jvm.internal.Ref$ObjectRef)
androidx.room.RoomSQLiteQuery$Companion: androidx.room.RoomSQLiteQuery copyFrom(androidx.sqlite.db.SupportSQLiteQuery)
com.google.common.cache.CacheLoader$UnsupportedLoadingOperationException: CacheLoader$UnsupportedLoadingOperationException()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.kiosoft2.common.cache.db.database.AppDataBase_Impl: void access$300(com.kiosoft2.common.cache.db.database.AppDataBase_Impl,androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.RoomDatabase: void init(androidx.room.DatabaseConfiguration)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition equal(com.kiosoft2.api.Property,long)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
kotlin.jvm.internal.PropertyReference1: kotlin.reflect.KProperty1$Getter getGetter()
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition greater(com.kiosoft2.api.builder.ChildQuery)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.kiosoft2.common.cache.db.database.AppDataBase_Impl$1: void dropAllTables(androidx.sqlite.db.SupportSQLiteDatabase)
com.kiosoft2.common.task.helper.DelayedTaskHelper$start$1: void onSubscribe(io.reactivex.rxjava3.disposables.Disposable)
com.kiosoft2.api.builder.Query: java.lang.Object findFirst()
com.kiosoft2.common.thead.aspect.InterceptIOThreadAspectJ: com.kiosoft2.common.thead.aspect.InterceptIOThreadAspectJ aspectOf()
androidx.room.RoomDatabaseKt$startTransactionCoroutine$2$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.room.RoomOpenHelper: void onConfigure(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
androidx.appcompat.app.ResourcesFlusher$Api16Impl: void clear(android.util.LongSparseArray)
kotlin.jvm.internal.PropertyReference1: java.lang.Object invoke(java.lang.Object)
androidx.room.Query: java.lang.String value()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notIn(com.kiosoft2.api.Property,java.util.Collection)
androidx.appcompat.widget.SearchView: int getImeOptions()
com.kiosoft2.api.builder.OpBuilder: int delete(java.lang.Object[])
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
androidx.room.InvalidationLiveDataContainer: InvalidationLiveDataContainer(androidx.room.RoomDatabase)
com.kiosoft2.common.task.util.TaskManager: void cancleLifecycleTaskByLifecycleOwner(androidx.lifecycle.LifecycleOwner)
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: void setLocale(android.content.res.Configuration,java.util.Locale)
com.kiosoft2.common.thead.utils.AppExecutors$MainThreadExecutor: AppExecutors$MainThreadExecutor()
com.kiosoft2.common.task.util.TaskInfoRepository$getTaskList$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition in(java.util.Collection)
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedCallback newOnBackInvokedCallback(java.lang.Runnable)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: ProcessLifecycleOwner$attach$1$onActivityPreCreated$1(androidx.lifecycle.ProcessLifecycleOwner)
androidx.room.paging.LimitOffsetDataSource: boolean isInvalid()
com.kiosoft2.testdemo.activity.TestActivity03: TestActivity03()
androidx.room.DatabaseConfiguration: DatabaseConfiguration(android.content.Context,java.lang.String,androidx.sqlite.db.SupportSQLiteOpenHelper$Factory,androidx.room.RoomDatabase$MigrationContainer,java.util.List,boolean,androidx.room.RoomDatabase$JournalMode,java.util.concurrent.Executor,java.util.concurrent.Executor,boolean,boolean,boolean,java.util.Set)
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition in(com.kiosoft2.api.Property,java.lang.Long[])
com.kiosoft2.api.Entity: java.util.List getAllProperties()
kotlin.jvm.internal.MutablePropertyReference1: kotlin.reflect.KCallable computeReflected()
androidx.room.util.TableInfo$Index$Companion: TableInfo$Index$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.AppCompatCheckedTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.room.RoomDatabase: void access$internalEndTransaction(androidx.room.RoomDatabase)
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1: CoroutinesRoom$Companion$createFlow$1$1$observer$1(java.lang.String[],kotlinx.coroutines.channels.Channel)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: android.os.Bundle respond(android.os.Bundle)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder openHelperFactory(androidx.sqlite.db.SupportSQLiteOpenHelper$Factory)
com.kiosoft2.api.builder.Query: java.util.List find(java.lang.Class)
androidx.activity.ComponentActivity: ComponentActivity()
com.kiosoft2.api.builder.SetBuilder: SetBuilder(androidx.room.RoomDatabase,com.kiosoft2.api.Entity)
com.kiosoft2.common.cache.db.dao.TaskInfoDao: java.lang.Object getTaskInfoByTaskId(java.lang.String,kotlin.coroutines.Continuation)
kotlin.jvm.internal.CallableReference: CallableReference()
kotlinx.coroutines.android.HandlerContext: void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable)
androidx.room.CoroutinesRoom$Companion$execute$4$job$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.room.ForeignKey: int onDelete()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
androidx.appcompat.widget.AppCompatRadioButton: void setEmojiCompatEnabled(boolean)
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerDispatcher getImmediate()
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: void close()
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
com.kiosoft2.common.task.util.TaskReLoadUtil: <clinit>()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$2: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$2(java.lang.String,java.lang.Object[])
com.kiosoft2.api.builder.JoinBuilder: com.kiosoft2.api.builder.JoinBuilder greater(com.kiosoft2.api.Property,com.kiosoft2.api.Property)
com.kiosoft2.api.helper.SQLiteHelper: java.lang.String generatePKDeleteSql(com.kiosoft2.api.Entity,int)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
androidx.room.InvalidationTracker: androidx.lifecycle.LiveData createLiveData(java.lang.String[],java.util.concurrent.Callable)
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void close()
com.kiosoft2.common.click.ClickExe: void setSafeOnClickListener(android.view.View,android.view.View$OnClickListener)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
androidx.core.app.NavUtils$Api16Impl: boolean navigateUpTo(android.app.Activity,android.content.Intent)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
com.kiosoft2.common.task.util.TaskInfoRepository$insertTaskInfoList$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.room.InvalidationLiveDataContainer: java.util.Set getLiveDataSet$room_runtime_release()
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
androidx.room.RoomOpenHelper: <clinit>()
com.kiosoft2.common.router.ARouterOperator$ActivityBundleManager: com.kiosoft2.common.router.BundleManager withInt(java.lang.String,int)
androidx.room.Relation: java.lang.String entityColumn()
com.tencent.mmkv.MMKV: boolean reKey(java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
kotlinx.coroutines.MainCoroutineDispatcher: kotlinx.coroutines.CoroutineDispatcher limitedParallelism(int)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pokeOpen$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pokeOpen$1()
androidx.room.util.DBUtil: void foreignKeyCheck(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
com.kiosoft2.common.task.model.ParameterInfo: void setParameterType(java.lang.Class)
com.kiosoft2.common.task.helper.RecurringTaskHelper$start$1: void onComplete()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: boolean isAutoMirrored(android.graphics.drawable.Drawable)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition startWith(java.lang.String)
org.checkerframework.checker.formatter.qual.ConversionCategory: org.checkerframework.checker.formatter.qual.ConversionCategory[] values()
androidx.room.paging.LimitOffsetDataSource: void loadRange(androidx.paging.PositionalDataSource$LoadRangeParams,androidx.paging.PositionalDataSource$LoadRangeCallback)
androidx.room.util.FtsTableInfo: <clinit>()
androidx.appcompat.view.WindowCallbackWrapper$Api26Impl: void onPointerCaptureChanged(android.view.Window$Callback,boolean)
com.kiosoft2.api.statement.element.Expression: Expression(com.kiosoft2.api.Property,com.kiosoft2.api.type.ExpressionType,java.lang.Object[])
com.kiosoft2.api.builder.JoinBuilder: com.kiosoft2.api.builder.JoinBuilder notIn(com.kiosoft2.api.Property,java.util.Collection)
com.kiosoft2.common.click.aspect.InterceptSingleTimeAspectJ$Companion: InterceptSingleTimeAspectJ$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setMaxSqlCacheSize$1: java.lang.Object invoke(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: AutoClosingRoomOpenHelper$KeepAliveCursor(android.database.Cursor,androidx.room.AutoCloser)
androidx.room.util.TableInfo$Companion: androidx.room.util.TableInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)
androidx.room.IMultiInstanceInvalidationService$Default: IMultiInstanceInvalidationService$Default()
androidx.room.util.ViewInfo$Companion: ViewInfo$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
kotlin.jvm.internal.MutablePropertyReference: MutablePropertyReference()
androidx.room.RoomDatabase$Callback: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.util.UUIDUtil: byte[] convertUUIDToByte(java.util.UUID)
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setExitTransition(android.widget.PopupWindow,android.transition.Transition)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.lifecycle.LiveData: void onInactive()
androidx.appcompat.widget.AppCompatEditText: void setEmojiCompatEnabled(boolean)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition in(com.kiosoft2.api.builder.ChildQuery,java.util.Collection)
kotlin.jvm.internal.PropertyReference1: kotlin.reflect.KCallable computeReflected()
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
com.kiosoft2.api.builder.UpdateBuilder: int update()
com.kiosoft2.api.helper.SQLiteHelper$2: SQLiteHelper$2(androidx.room.RoomDatabase,java.lang.String,com.kiosoft2.api.Entity)
androidx.room.QueryInterceptorDatabase: void query$lambda$8(androidx.room.QueryInterceptorDatabase,androidx.sqlite.db.SupportSQLiteQuery,androidx.room.QueryInterceptorProgram)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
com.kiosoft2.common.cache.TaskCacheManager$cacheTaskList$1: TaskCacheManager$cacheTaskList$1()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition greater(com.kiosoft2.api.builder.ChildQuery,com.kiosoft2.api.builder.ChildQuery)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
com.kiosoft2.common.task.util.TaskInfoRepository$insertOrUpdateTaskInfo$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.kiosoft2.common.autoservice.impl.TaskServiceImpl: void start(java.lang.Object,com.kiosoft2.common.task.model.TaskInfo)
com.kiosoft2.common.autoservice.service.TaskService: void cancelTask(java.lang.Object,java.lang.String)
androidx.room.IMultiInstanceInvalidationCallback$Stub: IMultiInstanceInvalidationCallback$Stub()
com.kiosoft2.common.task.util.TaskManager$taskActivityLifecycleHelper$1: java.lang.Object invoke()
com.kiosoft2.common.bus.LiveDataBus$bus$2: java.lang.Object invoke()
androidx.room.QueryInterceptorDatabase: QueryInterceptorDatabase(androidx.sqlite.db.SupportSQLiteDatabase,java.util.concurrent.Executor,androidx.room.RoomDatabase$QueryCallback)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.kiosoft2.testdemo.activity.TestActivity02: TestActivity02()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$setMaxSqlCacheSize$1: java.lang.Object invoke(java.lang.Object)
androidx.room.RoomDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: com.kiosoft2.common.task.annotions.TaskThread access$800(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl,java.lang.String)
com.kiosoft2.api.type.OpType: com.kiosoft2.api.type.OpType valueOf(java.lang.String)
com.kiosoft2.api.condition.PropertyCondition: com.kiosoft2.api.statement.element.Condition getWhere()
androidx.room.RoomDatabaseKt$withTransaction$transactionBlock$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$8: kotlin.Unit call()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
androidx.room.RoomDatabase: void isOpen$annotations()
com.kiosoft2.common.task.util.TimeUtil: <clinit>()
com.kiosoft2.api.Property: com.kiosoft2.api.Property length()
com.kiosoft2.api.aparameter.AParameterManager$Companion: com.kiosoft2.api.aparameter.AParameterManager getInstance()
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean requery()
com.kiosoft2.api.Property: com.kiosoft2.api.Property avg()
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext getImmediate()
androidx.room.AmbiguousColumnResolver: void rabinKarpSearch(java.util.List,java.lang.String[],kotlin.jvm.functions.Function3)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.room.QueryInterceptorStatement: void bindBlob(int,byte[])
androidx.room.QueryInterceptorDatabase: boolean isDatabaseIntegrityOk()
androidx.room.CoroutinesRoom$Companion$execute$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property access$getA7$cp()
androidx.room.CoroutinesRoom$Companion$createFlow$1$1$1: CoroutinesRoom$Companion$createFlow$1$1$1(androidx.room.RoomDatabase,androidx.room.CoroutinesRoom$Companion$createFlow$1$1$observer$1,kotlinx.coroutines.channels.Channel,java.util.concurrent.Callable,kotlinx.coroutines.channels.Channel,kotlin.coroutines.Continuation)
androidx.room.AutoCloser: androidx.sqlite.db.SupportSQLiteOpenHelper getDelegateOpenHelper()
androidx.room.util.FtsTableInfo$Companion: java.util.Set readColumns(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.kiosoft2.common.task.helper.RecurringTaskHelper: RecurringTaskHelper()
com.kiosoft2.common.task.helper.RecurringTaskHelper$start$1: void onSubscribe(io.reactivex.rxjava3.disposables.Disposable)
com.kiosoft2.common.cache.TaskCacheManager$removeCacheTask$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.kiosoft2.testdemo.db.model.Book_: com.kiosoft2.api.Property getIdProperty()
androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
androidx.core.os.BundleApi21ImplKt: void putSize(android.os.Bundle,java.lang.String,android.util.Size)
com.kiosoft2.common.task.model.TaskInfo: java.util.concurrent.TimeUnit component16()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
androidx.appcompat.view.menu.MenuPopupHelper$Api17Impl: void getRealSize(android.view.Display,android.graphics.Point)
androidx.room.util.TableInfo: boolean equals(java.lang.Object)
androidx.room.util.TableInfo$ForeignKeyWithSequence: java.lang.String getTo()
androidx.room.InvalidationTracker$WeakObserver: void onInvalidated(java.util.Set)
androidx.lifecycle.LiveData: void removeObservers(androidx.lifecycle.LifecycleOwner)
androidx.room.Index: java.lang.String name()
com.kiosoft2.api.builder.JoinBuilder: com.kiosoft2.api.builder.JoinBuilder startWith(com.kiosoft2.api.Property,com.kiosoft2.api.Property)
com.kiosoft2.api.statement.SQL: SQL(com.kiosoft2.api.type.OpType,com.kiosoft2.api.Entity)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.android.HandlerDispatcher: java.lang.Object delay(long,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)
androidx.room.util.TableInfo$ForeignKey: int hashCode()
com.kiosoft2.common.click.aspect.InterceptSingleTimeAspectJ$Companion: android.util.LruCache getLruCache()
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCheckMarkTintList()
androidx.core.os.TraceCompat$Api18Impl: void beginSection(java.lang.String)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
com.kiosoft2.api.Entity: void bindInsertionAdapterValue(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)
com.kiosoft2.common.task.util.TaskInfoRepository$getTaskList$2: TaskInfoRepository$getTaskList$2(com.kiosoft2.common.task.util.TaskInfoRepository,kotlin.coroutines.Continuation)
com.kiosoft2.common.task.annotions.DelayedTask: long initialDelay()
com.tencent.mmkv.MMKV: void destroyNB(long,int)
androidx.room.CoroutinesRoom$Companion: java.lang.Object execute(androidx.room.RoomDatabase,boolean,java.util.concurrent.Callable,kotlin.coroutines.Continuation)
com.kiosoft2.testdemo.db.model.User_: <clinit>()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: int update(java.lang.String,int,android.content.ContentValues,java.lang.String,java.lang.Object[])
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition less(com.kiosoft2.api.builder.ChildQuery,long)
com.kiosoft2.common.cache.db.dao.TaskInfoDao: java.lang.Object getCacheTaskListByOwerClassName(java.lang.String,kotlin.coroutines.Continuation)
androidx.room.paging.LimitOffsetDataSource: LimitOffsetDataSource(androidx.room.RoomDatabase,androidx.room.RoomSQLiteQuery,boolean,java.lang.String[])
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
com.kiosoft2.common.cache.TaskCacheManager: com.kiosoft2.common.cache.db.dao.TaskInfoDao getTaskInfoDao()
com.kiosoft2.common.router.BundleManager: com.kiosoft2.common.router.BundleManager withInt(java.lang.String,int)
com.kiosoft2.api.builder.OpBuilder: java.util.List find(java.util.Collection)
kotlinx.coroutines.android.HandlerContext: android.os.Handler access$getHandler$p(kotlinx.coroutines.android.HandlerContext)
com.kiosoft2.common.task.util.TaskManager: com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper getTaskActivityLifecycleHelper()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
androidx.room.util.TableInfo$Index: TableInfo$Index(java.lang.String,boolean,java.util.List,java.util.List)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$execSQL$1: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.android.HandlerDispatcherKt: kotlinx.coroutines.android.HandlerDispatcher from(android.os.Handler)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition greater(com.kiosoft2.api.Property,double)
androidx.core.text.ICUCompat$Api21Impl: java.lang.String getScript(java.util.Locale)
androidx.room.AutoClosingRoomOpenHelper: void setWriteAheadLoggingEnabled(boolean)
com.kiosoft2.api.RoomOperator: void runInTx(java.lang.Runnable)
androidx.room.AmbiguousColumnResolver$resolve$1$1: void invoke(int,int,java.util.List)
com.kiosoft2.api.helper.SQLiteHelper: SQLiteHelper()
androidx.appcompat.widget.SearchView: int getPreferredHeight()
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
androidx.room.AutoCloser: boolean isActive()
io.reactivex.rxjava3.internal.disposables.EmptyDisposable: io.reactivex.rxjava3.internal.disposables.EmptyDisposable[] values()
androidx.room.Entity: java.lang.String[] primaryKeys()
androidx.room.RoomDatabaseKt: java.lang.Object startTransactionCoroutine(androidx.room.RoomDatabase,kotlin.coroutines.CoroutineContext,kotlin.jvm.functions.Function2,kotlin.coroutines.Continuation)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition notEqual(java.lang.String)
com.kiosoft2.api.builder.OpBuilder: double avg(com.kiosoft2.api.Property)
androidx.room.util.FtsTableInfo$Companion: FtsTableInfo$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kiosoft2.api.builder.JoinBuilder: com.kiosoft2.api.builder.JoinBuilder in(com.kiosoft2.api.Property,com.kiosoft2.api.Property[])
androidx.appcompat.widget.AppCompatRadioButton: void setAllCaps(boolean)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
androidx.room.MapInfo: java.lang.String keyTable()
com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper$onActivityCreated$1$1$1: void bindDisposable(com.kiosoft2.common.task.model.TaskInfo)
com.alibaba.fastjson2.time.DateTimeFormatter$PatternType: com.alibaba.fastjson2.time.DateTimeFormatter$PatternType[] values()
androidx.room.RoomDatabase$beginTransaction$1: RoomDatabase$beginTransaction$1(androidx.room.RoomDatabase)
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
com.tencent.mmkv.MMKVRecoverStrategic: com.tencent.mmkv.MMKVRecoverStrategic valueOf(java.lang.String)
com.kiosoft2.api.builder.OpBuilder: java.lang.Long[] insert(java.lang.Object[])
com.kiosoft2.common.cache.db.database.AppDataBase_Impl: androidx.sqlite.db.SupportSQLiteDatabase access$202(com.kiosoft2.common.cache.db.database.AppDataBase_Impl,androidx.sqlite.db.SupportSQLiteDatabase)
com.kiosoft2.testdemo.db.model.Book: void setName(java.lang.String)
com.kiosoft2.api.builder.SetBuilder: com.kiosoft2.api.builder.SetBuilder set(com.kiosoft2.api.Property,boolean)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.kiosoft2.api.builder.OpBuilder: com.kiosoft2.api.builder.SetBuilder updateBuilder()
androidx.room.paging.LimitOffsetDataSource: androidx.room.RoomSQLiteQuery getSQLiteQuery(int,int)
androidx.room.MultiInstanceInvalidationClient: MultiInstanceInvalidationClient(android.content.Context,java.lang.String,android.content.Intent,androidx.room.InvalidationTracker,java.util.concurrent.Executor)
com.kiosoft2.common.click.aspect.InterceptSingleTimeAspectJ$Companion: InterceptSingleTimeAspectJ$Companion()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$1: java.lang.String createQuery()
kotlinx.coroutines.CoroutineDispatcher: boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
com.kiosoft2.testdemo.db.model.User: java.lang.Float getA6()
com.kiosoft2.common.cache.db.database.AppDataBase_Impl: java.util.Map getRequiredTypeConverters()
com.kiosoft2.common.model.BaseLifecycleOwnerImpl: void bindLifecycleOwner(androidx.lifecycle.LifecycleOwner)
com.kiosoft2.common.task.util.TaskInfoRepository$getCacheTaskListByOwerClassName$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.kiosoft2.common.BuildConfig: BuildConfig()
androidx.room.FtsOptions$Order: FtsOptions$Order(java.lang.String,int)
androidx.room.RoomDatabase: void setTransactionSuccessful()
com.kiosoft2.common.task.aspect.TaskAspectJ: <clinit>()
com.kiosoft2.common.cache.db.database.AppDataBase_Impl$1: void onPostMigrate(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
com.tencent.mmkv.MMKV: void checkReSetCryptKey(java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
com.kiosoft2.api.helper.SQLiteHelper: java.lang.String generatePKUpdateSql(com.kiosoft2.api.Entity,int)
com.kiosoft2.testdemo.db.model.Book_: com.kiosoft2.api.Property access$getId$cp()
androidx.room.EntityDeletionOrUpdateAdapter: EntityDeletionOrUpdateAdapter(androidx.room.RoomDatabase)
com.kiosoft2.common.task.aspect.TaskAspectJ$Companion: TaskAspectJ$Companion()
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
com.kiosoft2.common.router.ARouterOperator: void access$navigationActivity(com.kiosoft2.common.router.ARouterOperator,android.app.Activity,com.kiosoft2.common.router.BundleManager,java.lang.Integer,boolean)
com.kiosoft2.common.router.ARouterOperator$FragmentBundleManager: com.kiosoft2.common.router.BundleManager withInt(java.lang.String,int)
kotlin.jvm.internal.MutablePropertyReference1Impl: java.lang.Object get(java.lang.Object)
androidx.room.RoomDatabase$PrepackagedDatabaseCallback: RoomDatabase$PrepackagedDatabaseCallback()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: java.lang.String __TimeUnit_enumToString(java.util.concurrent.TimeUnit)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition notEqual(byte[])
androidx.room.rxjava3.RxRoom: io.reactivex.rxjava3.core.Flowable createFlowable(androidx.room.RoomDatabase,boolean,java.lang.String[],java.util.concurrent.Callable)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean isBeforeFirst()
androidx.room.QueryInterceptorStatement: long executeInsert()
androidx.room.util.StringUtil: java.lang.StringBuilder newStringBuilder()
com.kiosoft2.common.task.util.TaskInfoRepository$updateTaskInfo$2: TaskInfoRepository$updateTaskInfo$2(com.kiosoft2.common.task.util.TaskInfoRepository,com.kiosoft2.common.task.model.TaskInfo,kotlin.coroutines.Continuation)
com.kiosoft2.api.Entity: void bindDeleteAdapterValue(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$needUpgrade$1: java.lang.Object invoke(java.lang.Object)
androidx.room.util.TableInfo: java.lang.String toString()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForLong$1: java.lang.Long invoke(androidx.sqlite.db.SupportSQLiteStatement)
com.google.gson.reflect.TypeToken: java.lang.Class getRawType()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
com.kiosoft2.common.task.util.TaskManager: void removeTask(java.lang.Object)
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode[] $values()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.core.graphics.PaintCompat$Api23Impl: boolean hasGlyph(android.graphics.Paint,java.lang.String)
com.tencent.mmkv.MMKV: float decodeFloat(long,java.lang.String,float)
kotlin.jvm.internal.PropertyReference: java.lang.String toString()
androidx.core.widget.TextViewCompat$Api17Impl: java.util.Locale getTextLocale(android.widget.TextView)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition equal(com.kiosoft2.api.builder.ChildQuery,byte[])
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition lessOrEqual(com.kiosoft2.api.Property,byte[])
kotlinx.coroutines.MainCoroutineDispatcher: java.lang.String toStringInternalImpl()
com.tencent.mmkv.MMKV: boolean tryLock()
androidx.room.CoroutinesRoom$Companion$execute$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement: void clearBindings()
androidx.core.view.ViewCompat$Api17Impl: void setPaddingRelative(android.view.View,int,int,int,int)
com.kiosoft2.api.Property: com.kiosoft2.api.Property alias(java.lang.String)
androidx.room.InvalidationTracker$ObservedTableTracker: void resetTriggerState()
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notEqual(com.kiosoft2.api.Property,java.lang.String)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: androidx.room.SharedSQLiteStatement access$700(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl)
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isReadOnly$1: java.lang.Boolean invoke(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.RoomDatabase: java.util.List getAutoMigrations(java.util.Map)
androidx.appcompat.widget.SearchView$Api29Impl: void refreshAutoCompleteResults(android.widget.AutoCompleteTextView)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
androidx.room.SQLiteCopyOpenHelper$createFrameworkOpenHelper$configuration$1: void onOpen(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$maximumSize$1: <clinit>()
androidx.room.IMultiInstanceInvalidationService$Default: int registerCallback(androidx.room.IMultiInstanceInvalidationCallback,java.lang.String)
com.tencent.mmkv.MMKV: int valueSize(long,java.lang.String,boolean)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean isFirst()
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
androidx.room.CoroutinesRoom$Companion$createFlow$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.core.widget.TextViewCompat$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
androidx.room.RoomDatabase: java.util.Map getAutoMigrationSpecs()
kotlinx.coroutines.android.HandlerContext$scheduleResumeAfterDelay$$inlined$Runnable$1: void run()
com.kiosoft2.api.statement.SQL: java.lang.String getSql()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$9: TaskInfoDao_Impl$9(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl,java.util.List)
androidx.core.view.ViewCompat$Api16Impl: int getMinimumHeight(android.view.View)
androidx.room.util.DBUtil: java.lang.String processForeignKeyCheckFailure(android.database.Cursor)
com.kiosoft2.api.RoomOperator: com.kiosoft2.api.Entity getEntity(java.lang.Class)
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
com.kiosoft2.common.bus.LiveDataBus$Companion: LiveDataBus$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.kiosoft2.testdemo.db.model.User_: com.kiosoft2.api.Property access$getA4$cp()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.kiosoft2.api.aparameter.AParameterManager: kotlin.Lazy access$getInstance$delegate$cp()
kotlin.KotlinNullPointerException: KotlinNullPointerException()
com.kiosoft2.common.router.ARouterOperator$FragmentBundleManager: com.kiosoft2.common.router.ARouterOperator$FragmentBundleManager withInt(java.lang.String,int)
androidx.room.RoomDatabase: androidx.sqlite.db.SupportSQLiteStatement compileStatement(java.lang.String)
com.kiosoft2.api.statement.element.Expression: Expression(com.kiosoft2.api.statement.SelectSQL,com.kiosoft2.api.type.ExpressionType,com.kiosoft2.api.statement.SelectSQL)
com.kiosoft2.common.task.annotions.TaskThread: com.kiosoft2.common.task.annotions.TaskThread[] values()
com.kiosoft2.testdemo.db.model.Book_: void access$setCompositePK_$cp(java.util.List)
com.kiosoft2.api.aparameter.AParameterManager$Companion$instance$2: com.kiosoft2.api.aparameter.AParameterManager invoke()
com.tencent.mmkv.MMKV: void removeValuesForKeys(java.lang.String[])
com.kiosoft2.common.task.annotions.RecurringTask: boolean isReStart()
androidx.room.FtsOptions$MatchInfo: androidx.room.FtsOptions$MatchInfo valueOf(java.lang.String)
com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper: void onActivityStopped(android.app.Activity)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.room.RoomDatabase: androidx.room.InvalidationTracker createInvalidationTracker()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void execSQL(java.lang.String)
com.kiosoft2.common.thead.utils.AppExecutors: java.util.concurrent.ScheduledExecutorService getTimeworkIO()
androidx.appcompat.widget.AppCompatCheckBox: void setAllCaps(boolean)
androidx.room.IMultiInstanceInvalidationCallback$Stub: android.os.IBinder asBinder()
com.kiosoft2.common.task.util.TaskInfoRepository$getTaskList$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForString$1: <clinit>()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
com.kiosoft2.testdemo.db.model.User: float getA1()
androidx.core.view.ViewCompat$Api16Impl: boolean hasOverlappingRendering(android.view.View)
com.kiosoft2.api.builder.OpBuilder: int deleteByIds(java.lang.Long[])
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: void registerDataSetObserver(android.database.DataSetObserver)
androidx.room.RoomSQLiteQuery: void bindTo(androidx.sqlite.db.SupportSQLiteProgram)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
com.kiosoft2.api.dao.Dao: java.lang.Long[] insert(java.lang.Object[])
com.kiosoft2.common.task.helper.RecurringTaskHelper: void start(java.lang.Object,com.kiosoft2.common.task.annotions.RecurringTask,com.kiosoft2.common.task.model.TaskInfo,com.kiosoft2.common.task.interfaces.JoinPointRunCallback)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
com.kiosoft2.common.cache.db.dao.TaskInfoDao: java.lang.Object updateTaskInfoList(java.util.List,kotlin.coroutines.Continuation)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition in(com.kiosoft2.api.Property,java.util.Collection)
com.kiosoft2.common.task.model.TaskInfo: boolean component11()
androidx.room.InvalidationTracker$Observer: java.lang.String[] getTables$room_runtime_release()
androidx.sqlite.db.SupportSQLiteOpenHelper$Callback: void onCorruption(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
androidx.room.MultiInstanceInvalidationService$binder$1: MultiInstanceInvalidationService$binder$1(androidx.room.MultiInstanceInvalidationService)
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
com.kiosoft2.api.builder.SetBuilder: com.kiosoft2.api.builder.SetBuilder set(com.kiosoft2.api.Property,double)
androidx.room.RoomOpenHelper$Delegate: void createAllTables(androidx.sqlite.db.SupportSQLiteDatabase)
androidx.room.AmbiguousColumnResolver$Solution$Companion: AmbiguousColumnResolver$Solution$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$2: <clinit>()
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition greaterOrEqual(double)
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
com.kiosoft2.api.utils.Utils: Utils()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void setLocale(java.util.Locale)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeSqliteStatementWithRefCount$1: AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$executeSqliteStatementWithRefCount$1(androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement,kotlin.jvm.functions.Function1)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
com.kiosoft2.api.builder.OpBuilder: double min(com.kiosoft2.api.Property)
androidx.room.util.TableInfo: androidx.room.util.TableInfo read(androidx.sqlite.db.SupportSQLiteDatabase,java.lang.String)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
androidx.room.IMultiInstanceInvalidationService$Stub$Proxy: IMultiInstanceInvalidationService$Stub$Proxy(android.os.IBinder)
com.kiosoft2.api.type.JoinType: JoinType(java.lang.String,int,java.lang.String)
com.kiosoft2.api.condition.PropertyCondition: PropertyCondition(com.kiosoft2.api.Property,com.kiosoft2.api.type.ExpressionType,com.kiosoft2.api.builder.ChildQuery)
androidx.room.util.TableInfo$Column: boolean defaultValueEquals(java.lang.String,java.lang.String)
com.kiosoft2.common.task.helper.TaskActivityLifecycleHelper$onActivityCreated$1$1$1: void onTaskComplete(com.kiosoft2.common.task.model.TaskInfo)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition notEqual(java.util.Date)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: boolean isClosed()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$1: <clinit>()
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
com.kiosoft2.common.thead.aspect.InterceptIOThreadAspectJ$Companion: InterceptIOThreadAspectJ$Companion()
androidx.room.SharedSQLiteStatement: SharedSQLiteStatement(androidx.room.RoomDatabase)
com.kiosoft2.api.statement.element.Condition: Condition(com.kiosoft2.api.type.ConditionRelation,java.util.List,java.util.List)
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0: java.lang.Class annotationType()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$reStartTask$1: java.lang.Object invokeSuspend(java.lang.Object)
com.kiosoft2.api.builder.OpBuilder: int delete(java.util.Collection)
androidx.profileinstaller.ProfileVerifier$Api33Impl: android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingEnd(android.view.View)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
androidx.room.EntityUpsertionAdapter: long[] upsertAndReturnIdsArray(java.lang.Object[])
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$13: java.lang.Object call()
androidx.room.util.TableInfo$Column: boolean isPrimaryKey()
com.kiosoft2.common.router.ARouterOperator$FragmentBundleManager: com.kiosoft2.common.router.BundleManager withBundle(java.lang.String,android.os.Bundle)
com.kiosoft2.common.bus.LiveDataBus: java.util.Map getBus()
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder setJournalMode(androidx.room.RoomDatabase$JournalMode)
com.kiosoft2.common.cache.TaskCacheManager: void cacheTaskList(java.util.concurrent.CopyOnWriteArrayList)
androidx.room.InvalidationTracker$Companion: java.lang.String getTriggerName$room_runtime_release(java.lang.String,java.lang.String)
androidx.lifecycle.LiveData: void onActive()
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder createFromInputStream(java.util.concurrent.Callable,androidx.room.RoomDatabase$PrepackagedDatabaseCallback)
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1$observer$1: RoomDatabaseKt$invalidationTrackerFlow$1$observer$1(java.lang.String[],java.util.concurrent.atomic.AtomicBoolean,kotlinx.coroutines.channels.ProducerScope)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition regExp(com.kiosoft2.api.builder.ChildQuery,java.lang.String)
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1: java.lang.Object invoke(kotlinx.coroutines.channels.ProducerScope,kotlin.coroutines.Continuation)
com.kiosoft2.common.router.ARouterOperator: androidx.fragment.app.Fragment access$navigationFragment(com.kiosoft2.common.router.ARouterOperator,com.kiosoft2.common.router.ARouterOperator$FragmentBundleManager)
kotlinx.coroutines.android.HandlerDispatcherKt: <clinit>()
com.kiosoft2.api.statement.element.Page: Page(int,int)
androidx.room.RoomDatabase$Builder: androidx.room.RoomDatabase$Builder enableMultiInstanceInvalidation()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.kiosoft2.testdemo.db.model.User: void setId(long)
com.kiosoft2.api.EntityManager: java.util.HashMap access$getEntityMap$cp()
com.google.gson.ToNumberPolicy: com.google.gson.ToNumberPolicy valueOf(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl$Api17Impl: void setLayoutDirection(android.content.res.Configuration,java.util.Locale)
com.kiosoft2.common.router.ARouterOperator$FragmentBundleManager: com.kiosoft2.common.router.BundleManager withParcelableArrayList(java.lang.String,java.util.ArrayList)
com.kiosoft2.api.builder.JoinBuilder: com.kiosoft2.api.builder.JoinBuilder innerJoin(com.kiosoft2.api.Entity)
com.kiosoft2.api.builder.ChildQuery: com.kiosoft2.api.builder.ChildQuery count()
com.tencent.mmkv.MMKV: boolean encodeInt(long,java.lang.String,int)
com.kiosoft2.common.bus.LiveDataBus: LiveDataBus()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition regExp(com.kiosoft2.api.Property,java.lang.String)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.kiosoft2.common.router.ARouterOperator$Companion: ARouterOperator$Companion()
androidx.room.AmbiguousColumnResolver: int[][] resolve(java.lang.String[],java.lang.String[][])
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase: void setTransactionSuccessful()
androidx.appcompat.app.AppCompatDelegate$Api33Impl: android.os.LocaleList localeManagerGetApplicationLocales(java.lang.Object)
com.kiosoft2.api.builder.OpBuilder: int deleteById(java.lang.String)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: byte[] getBlob(int)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition endWith(java.lang.String)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForLong$1: <clinit>()
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSqliteStatement$simpleQueryForString$1: java.lang.String invoke(androidx.sqlite.db.SupportSQLiteStatement)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition notEqual(com.kiosoft2.api.builder.ChildQuery,java.util.Date)
com.kiosoft2.api.type.OrderByType: <clinit>()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
com.kiosoft2.api.Property: Property(java.lang.String,java.lang.String,java.lang.String,java.lang.Class,boolean,java.lang.String)
com.kiosoft2.common.task.annotions.RecurringTask: boolean isCacheResumeStart()
androidx.room.Delete: java.lang.Class entity()
com.kiosoft2.testdemo.db.model.User: byte getA3()
androidx.appcompat.widget.Toolbar: void setBackInvokedCallbackEnabled(boolean)
com.kiosoft2.common.autoservice.ServiceLoad: ServiceLoad()
com.kiosoft2.common.autoservice.service.TaskService: void cancelTask(java.lang.Object)
androidx.room.RoomDatabase: android.database.Cursor query(androidx.sqlite.db.SupportSQLiteQuery,android.os.CancellationSignal)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
com.kiosoft2.api.statement.element.Expression: Expression(com.kiosoft2.api.statement.SelectSQL,com.kiosoft2.api.type.ExpressionType,java.lang.Object[])
androidx.room.InvalidationTracker: void stopMultiInstanceInvalidation$room_runtime_release()
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0: long period()
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0: java.lang.String toString()
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition lessOrEqual(com.kiosoft2.api.Property,java.lang.String)
androidx.room.InvalidationTracker$ObserverWrapper: void notifyByTableInvalidStatus$room_runtime_release(java.util.Set)
androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode resolve$room_runtime_release(android.content.Context)
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType)
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: void setTextLocales(android.widget.TextView,android.os.LocaleList)
androidx.room.util.CursorUtil: int getColumnIndex(android.database.Cursor,java.lang.String)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
androidx.room.ForeignKey: java.lang.Class entity()
androidx.room.SQLiteCopyOpenHelper: androidx.sqlite.db.SupportSQLiteDatabase getReadableDatabase()
com.kiosoft2.common.bus.LiveDataBus$BusMutableLiveData: LiveDataBus$BusMutableLiveData()
com.kiosoft2.api.helper.SQLiteHelper$2: void bind(androidx.sqlite.db.SupportSQLiteStatement,java.lang.Object)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$path$1: java.lang.Object invoke(java.lang.Object)
com.kiosoft2.encrypt.EncryptServiceImpl: java.lang.String getEncrypt(java.lang.String)
com.kiosoft2.common.BuildConfig: <clinit>()
com.kiosoft2.common.task.util.TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0: TaskReLoadUtil$annotationImpl$com_kiosoft2_common_task_annotions_RecurringTask$0(int,com.kiosoft2.common.task.annotions.TaskThread,long,long,long,java.util.concurrent.TimeUnit,boolean,boolean,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.kiosoft2.testdemo.bus.impl.ILifecycleOwner: void onStart()
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$start$2: void onTaskComplete(com.kiosoft2.common.task.model.TaskInfo)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl: androidx.room.RoomDatabase access$200(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl)
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1$job$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.kiosoft2.common.task.util.TaskInfoRepository: java.lang.Object insertTaskInfo(com.kiosoft2.common.task.model.TaskInfo,kotlin.coroutines.Continuation)
com.tencent.mmkv.MMKV: void jniInitialize(java.lang.String)
com.kiosoft2.apt.AParameter$$Test1Fragment: void getParameter(java.lang.Object)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
com.kiosoft2.common.cache.db.dao.TaskInfoDao: java.lang.Object getTaskList(kotlin.coroutines.Continuation)
com.alibaba.fastjson2.util.DateUtils$DateTimeFormatPattern: com.alibaba.fastjson2.util.DateUtils$DateTimeFormatPattern[] values()
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
androidx.room.SQLiteCopyOpenHelper: void setWriteAheadLoggingEnabled(boolean)
com.kiosoft2.api.condition.BasicCondition: com.kiosoft2.api.condition.BasicCondition equal(com.kiosoft2.api.Property,com.kiosoft2.api.builder.ChildQuery)
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
com.kiosoft2.common.router.ARouterOperator$FragmentBundleManager: com.kiosoft2.common.router.BundleManager withString(java.lang.String,java.lang.String)
androidx.room.util.TableInfo: <clinit>()
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$yieldIfContendedSafely$2: java.lang.Object invoke(java.lang.Object)
androidx.room.RoomDatabase$endTransaction$1: RoomDatabase$endTransaction$1(androidx.room.RoomDatabase)
androidx.room.MultiInstanceInvalidationClient: void stop()
androidx.room.CoroutinesRoom$Companion: CoroutinesRoom$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.room.TransactionElement$Key: TransactionElement$Key()
androidx.room.RoomDatabaseKt$invalidationTrackerFlow$1: java.lang.Object invokeSuspend(java.lang.Object)
com.kiosoft2.common.task.model.TaskInfo: TaskInfo(int,java.lang.String,java.lang.Class,java.lang.String,androidx.lifecycle.LifecycleOwner,java.lang.String,int,long,java.lang.ref.WeakReference,boolean,boolean,com.kiosoft2.common.task.annotions.TaskThread,long,long,long,java.util.concurrent.TimeUnit,boolean)
com.kiosoft2.api.Property: com.kiosoft2.api.condition.PropertyCondition between(double,double)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isReadOnly$1: AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$isReadOnly$1()
androidx.room.InvalidationTracker$Companion: void beginTransactionInternal$room_runtime_release(androidx.sqlite.db.SupportSQLiteDatabase)
com.kiosoft2.common.task.annotions.TaskThread: com.kiosoft2.common.task.annotions.TaskThread[] $values()
com.kiosoft2.api.builder.ChildQuery: com.kiosoft2.api.builder.ChildQuery sum(com.kiosoft2.api.Property)
androidx.core.os.BundleApi18ImplKt: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
com.kiosoft2.common.thead.utils.AppExecutors: java.util.concurrent.Executor diskIO()
com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl$11: TaskInfoDao_Impl$11(com.kiosoft2.common.cache.db.dao.TaskInfoDao_Impl,java.util.List)
androidx.room.AutoClosingRoomOpenHelper$AutoClosingSupportSQLiteDatabase$pageSize$1: java.lang.Object get(java.lang.Object)
androidx.room.Database: int version()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
androidx.room.SQLiteCopyOpenHelper: void close()
com.kiosoft2.common.autoservice.service.TaskService: void reStartTask(java.lang.Object,java.lang.String)
androidx.room.AutoClosingRoomOpenHelper$KeepAliveCursor: int getType(int)
com.kiosoft2.api.builder.OpBuilder: int update(java.lang.Object[])
androidx.appcompat.widget.AppCompatImageView: void setImageLevel(int)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
com.kiosoft2.common.autoservice.impl.TaskServiceImpl$start$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
com.kiosoft2.common.task.aspect.TaskAspectJ$aroundJoinPoint$1: void run()
